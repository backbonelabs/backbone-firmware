ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	2
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\CyLib.c"
   1:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:.\Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:.\Generated_Source\PSoC4/CyLib.c **** *
   5:.\Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:.\Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:.\Generated_Source\PSoC4/CyLib.c **** *
   8:.\Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:.\Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:.\Generated_Source\PSoC4/CyLib.c **** *
  11:.\Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:.\Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/CyLib.c **** 
  19:.\Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:.\Generated_Source\PSoC4/CyLib.c **** 
  21:.\Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:.\Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:.\Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:.\Generated_Source\PSoC4/CyLib.c **** 
  26:.\Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:.\Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:.\Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:.\Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 2


  33:.\Generated_Source\PSoC4/CyLib.c **** 
  34:.\Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:.\Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:.\Generated_Source\PSoC4/CyLib.c **** 
  41:.\Generated_Source\PSoC4/CyLib.c **** 
  42:.\Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:.\Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:.\Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:.\Generated_Source\PSoC4/CyLib.c **** *
  46:.\Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:.\Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:.\Generated_Source\PSoC4/CyLib.c **** *
  49:.\Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:.\Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:.\Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:.\Generated_Source\PSoC4/CyLib.c **** 
  55:.\Generated_Source\PSoC4/CyLib.c **** 
  56:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:.\Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:.\Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:.\Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:.\Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:.\Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:.\Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:.\Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:.\Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:.\Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:.\Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:.\Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:.\Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:.\Generated_Source\PSoC4/CyLib.c **** 
  73:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:.\Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:.\Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:.\Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:.\Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:.\Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:.\Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:.\Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:.\Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:.\Generated_Source\PSoC4/CyLib.c **** 
  84:.\Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:.\Generated_Source\PSoC4/CyLib.c **** 
  89:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 3


  90:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:.\Generated_Source\PSoC4/CyLib.c **** *
  94:.\Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:.\Generated_Source\PSoC4/CyLib.c **** *
  96:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:.\Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:.\Generated_Source\PSoC4/CyLib.c **** *
 100:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:.\Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:.\Generated_Source\PSoC4/CyLib.c **** *
 103:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:.\Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
 106:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 106 0
  29 0000 034A     		ldr	r2, .L2
  30 0002 1368     		ldr	r3, [r2]
  31 0004 8021     		mov	r1, #128
  32 0006 0906     		lsl	r1, r1, #24
  33 0008 0B43     		orr	r3, r1
  34 000a 1360     		str	r3, [r2]
 107:.\Generated_Source\PSoC4/CyLib.c **** 
 108:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:.\Generated_Source\PSoC4/CyLib.c **** 
 114:.\Generated_Source\PSoC4/CyLib.c **** 
 115:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:.\Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:.\Generated_Source\PSoC4/CyLib.c **** 
 121:.\Generated_Source\PSoC4/CyLib.c **** }
  35              		.loc 1 121 0
  36              		@ sp needed
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 08010B40 		.word	1074462984
  42              		.cfi_endproc
  43              	.LFE2:
  44              		.size	CySysClkImoStart, .-CySysClkImoStart
  45              		.section	.text.CySysClkImoStop,"ax",%progbits
  46              		.align	2
  47              		.global	CySysClkImoStop
  48              		.code	16
  49              		.thumb_func
  50              		.type	CySysClkImoStop, %function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 4


  51              	CySysClkImoStop:
  52              	.LFB3:
 122:.\Generated_Source\PSoC4/CyLib.c **** 
 123:.\Generated_Source\PSoC4/CyLib.c **** 
 124:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:.\Generated_Source\PSoC4/CyLib.c **** *
 128:.\Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:.\Generated_Source\PSoC4/CyLib.c **** *
 130:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:.\Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:.\Generated_Source\PSoC4/CyLib.c **** *
 133:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:.\Generated_Source\PSoC4/CyLib.c **** *
 135:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:.\Generated_Source\PSoC4/CyLib.c **** {
  53              		.loc 1 137 0
  54              		.cfi_startproc
 138:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:.\Generated_Source\PSoC4/CyLib.c **** 
 142:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:.\Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:.\Generated_Source\PSoC4/CyLib.c **** 
 146:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  55              		.loc 1 146 0
  56 0000 024A     		ldr	r2, .L5
  57 0002 1368     		ldr	r3, [r2]
  58 0004 5B00     		lsl	r3, r3, #1
  59 0006 5B08     		lsr	r3, r3, #1
  60 0008 1360     		str	r3, [r2]
 147:.\Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 147 0
  62              		@ sp needed
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 08010B40 		.word	1074462984
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	CySysClkImoStop, .-CySysClkImoStop
  71              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  72              		.align	2
  73              		.global	CySysClkWriteHfclkDirect
  74              		.code	16
  75              		.thumb_func
  76              		.type	CySysClkWriteHfclkDirect, %function
  77              	CySysClkWriteHfclkDirect:
  78              	.LFB4:
 148:.\Generated_Source\PSoC4/CyLib.c **** 
 149:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 5


 151:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:.\Generated_Source\PSoC4/CyLib.c ****     *
 155:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:.\Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:.\Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:.\Generated_Source\PSoC4/CyLib.c ****     *
 159:.\Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:.\Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:.\Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:.\Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:.\Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:.\Generated_Source\PSoC4/CyLib.c ****     *
 165:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:.\Generated_Source\PSoC4/CyLib.c ****     *
 168:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:.\Generated_Source\PSoC4/CyLib.c ****     *
 171:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:.\Generated_Source\PSoC4/CyLib.c ****     {
 174:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:.\Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:.\Generated_Source\PSoC4/CyLib.c **** 
 178:.\Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:.\Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:.\Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:.\Generated_Source\PSoC4/CyLib.c **** 
 184:.\Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:.\Generated_Source\PSoC4/CyLib.c ****         {
 186:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:.\Generated_Source\PSoC4/CyLib.c **** 
 188:.\Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:.\Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:.\Generated_Source\PSoC4/CyLib.c **** 
 195:.\Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:.\Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:.\Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:.\Generated_Source\PSoC4/CyLib.c ****                 {
 200:.\Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:.\Generated_Source\PSoC4/CyLib.c ****                     {
 202:.\Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:.\Generated_Source\PSoC4/CyLib.c ****                         break;
 204:.\Generated_Source\PSoC4/CyLib.c ****                     }
 205:.\Generated_Source\PSoC4/CyLib.c ****                 }
 206:.\Generated_Source\PSoC4/CyLib.c ****             #else
 207:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 6


 208:.\Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:.\Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:.\Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:.\Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:.\Generated_Source\PSoC4/CyLib.c ****                 #else
 214:.\Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:.\Generated_Source\PSoC4/CyLib.c **** 
 218:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:.\Generated_Source\PSoC4/CyLib.c **** 
 220:.\Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:.\Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:.\Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:.\Generated_Source\PSoC4/CyLib.c ****                 {
 224:.\Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:.\Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:.\Generated_Source\PSoC4/CyLib.c ****                 }
 227:.\Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:.\Generated_Source\PSoC4/CyLib.c **** 
 229:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:.\Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:.\Generated_Source\PSoC4/CyLib.c **** 
 234:.\Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:.\Generated_Source\PSoC4/CyLib.c **** 
 237:.\Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:.\Generated_Source\PSoC4/CyLib.c **** 
 240:.\Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:.\Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:.\Generated_Source\PSoC4/CyLib.c ****             {
 243:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:.\Generated_Source\PSoC4/CyLib.c ****             }
 245:.\Generated_Source\PSoC4/CyLib.c ****             else
 246:.\Generated_Source\PSoC4/CyLib.c ****             {
 247:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:.\Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:.\Generated_Source\PSoC4/CyLib.c **** 
 250:.\Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:.\Generated_Source\PSoC4/CyLib.c **** 
 253:.\Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:.\Generated_Source\PSoC4/CyLib.c ****             }
 255:.\Generated_Source\PSoC4/CyLib.c **** 
 256:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:.\Generated_Source\PSoC4/CyLib.c **** 
 258:.\Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 259:.\Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:.\Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:.\Generated_Source\PSoC4/CyLib.c **** 
 264:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 7


 265:.\Generated_Source\PSoC4/CyLib.c ****         }
 266:.\Generated_Source\PSoC4/CyLib.c ****     }
 267:.\Generated_Source\PSoC4/CyLib.c **** 
 268:.\Generated_Source\PSoC4/CyLib.c **** 
 269:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:.\Generated_Source\PSoC4/CyLib.c ****     *
 273:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:.\Generated_Source\PSoC4/CyLib.c ****     *
 275:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:.\Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:.\Generated_Source\PSoC4/CyLib.c ****     *
 278:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:.\Generated_Source\PSoC4/CyLib.c ****     *
 281:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:.\Generated_Source\PSoC4/CyLib.c ****     {
 284:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:.\Generated_Source\PSoC4/CyLib.c ****     }
 286:.\Generated_Source\PSoC4/CyLib.c **** 
 287:.\Generated_Source\PSoC4/CyLib.c **** 
 288:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:.\Generated_Source\PSoC4/CyLib.c ****     *
 292:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:.\Generated_Source\PSoC4/CyLib.c ****     *
 294:.\Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:.\Generated_Source\PSoC4/CyLib.c ****     *
 297:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:.\Generated_Source\PSoC4/CyLib.c ****     *
 300:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:.\Generated_Source\PSoC4/CyLib.c ****     {
 303:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:.\Generated_Source\PSoC4/CyLib.c ****     }
 307:.\Generated_Source\PSoC4/CyLib.c **** 
 308:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:.\Generated_Source\PSoC4/CyLib.c **** 
 310:.\Generated_Source\PSoC4/CyLib.c **** 
 311:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:.\Generated_Source\PSoC4/CyLib.c **** 
 313:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 316:.\Generated_Source\PSoC4/CyLib.c ****     *
 317:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:.\Generated_Source\PSoC4/CyLib.c ****     *
 319:.\Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:.\Generated_Source\PSoC4/CyLib.c ****     *
 321:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 8


 322:.\Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:.\Generated_Source\PSoC4/CyLib.c ****     *
 324:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:.\Generated_Source\PSoC4/CyLib.c ****     *
 327:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:.\Generated_Source\PSoC4/CyLib.c ****     {
 330:.\Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:.\Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:.\Generated_Source\PSoC4/CyLib.c **** 
 336:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:.\Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:.\Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:.\Generated_Source\PSoC4/CyLib.c **** 
 343:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:.\Generated_Source\PSoC4/CyLib.c ****     }
 345:.\Generated_Source\PSoC4/CyLib.c **** 
 346:.\Generated_Source\PSoC4/CyLib.c **** 
 347:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:.\Generated_Source\PSoC4/CyLib.c ****     *
 351:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:.\Generated_Source\PSoC4/CyLib.c ****     *
 353:.\Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:.\Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:.\Generated_Source\PSoC4/CyLib.c ****     *
 356:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:.\Generated_Source\PSoC4/CyLib.c ****     *
 359:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:.\Generated_Source\PSoC4/CyLib.c ****     {
 362:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:.\Generated_Source\PSoC4/CyLib.c **** 
 364:.\Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:.\Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:.\Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:.\Generated_Source\PSoC4/CyLib.c ****     }
 370:.\Generated_Source\PSoC4/CyLib.c **** 
 371:.\Generated_Source\PSoC4/CyLib.c **** 
 372:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 373:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:.\Generated_Source\PSoC4/CyLib.c ****     *
 376:.\Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:.\Generated_Source\PSoC4/CyLib.c ****     *
 378:.\Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 9


 379:.\Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:.\Generated_Source\PSoC4/CyLib.c ****     *
 381:.\Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:.\Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:.\Generated_Source\PSoC4/CyLib.c ****     *
 384:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:.\Generated_Source\PSoC4/CyLib.c ****     {
 387:.\Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:.\Generated_Source\PSoC4/CyLib.c ****     }
 391:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:.\Generated_Source\PSoC4/CyLib.c **** 
 393:.\Generated_Source\PSoC4/CyLib.c **** 
 394:.\Generated_Source\PSoC4/CyLib.c **** 
 395:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:.\Generated_Source\PSoC4/CyLib.c **** *
 399:.\Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:.\Generated_Source\PSoC4/CyLib.c **** *
 401:.\Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:.\Generated_Source\PSoC4/CyLib.c **** *
 403:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:.\Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:.\Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:.\Generated_Source\PSoC4/CyLib.c **** *
 407:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:.\Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:.\Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:.\Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:.\Generated_Source\PSoC4/CyLib.c **** *
 414:.\Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:.\Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:.\Generated_Source\PSoC4/CyLib.c **** *
 417:.\Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:.\Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:.\Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:.\Generated_Source\PSoC4/CyLib.c **** *
 425:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:.\Generated_Source\PSoC4/CyLib.c **** {
  79              		.loc 1 427 0
  80              		.cfi_startproc
  81              	.LVL0:
  82 0000 10B5     		push	{r4, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 4, -8
  85              		.cfi_offset 14, -4
  86 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 10


 428:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:.\Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:.\Generated_Source\PSoC4/CyLib.c **** 
 431:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  87              		.loc 1 431 0
  88 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  89              	.LVL1:
 432:.\Generated_Source\PSoC4/CyLib.c **** 
 433:.\Generated_Source\PSoC4/CyLib.c **** 
 434:.\Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  90              		.loc 1 434 0
  91 0008 0449     		ldr	r1, .L8
  92 000a 0A68     		ldr	r2, [r1]
  93 000c 0723     		mov	r3, #7
  94 000e 9A43     		bic	r2, r3
  95              	.LVL2:
 435:.\Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:.\Generated_Source\PSoC4/CyLib.c **** 
 437:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:.\Generated_Source\PSoC4/CyLib.c ****     {
 440:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:.\Generated_Source\PSoC4/CyLib.c ****     }
 442:.\Generated_Source\PSoC4/CyLib.c ****     else
 443:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:.\Generated_Source\PSoC4/CyLib.c ****     {
 445:.\Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
  96              		.loc 1 445 0
  97 0010 2340     		and	r3, r4
  98 0012 1343     		orr	r3, r2
  99              	.LVL3:
 446:.\Generated_Source\PSoC4/CyLib.c ****     }
 447:.\Generated_Source\PSoC4/CyLib.c **** 
 448:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 100              		.loc 1 448 0
 101 0014 0B60     		str	r3, [r1]
 449:.\Generated_Source\PSoC4/CyLib.c **** 
 450:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 102              		.loc 1 450 0
 103 0016 FFF7FEFF 		bl	CyExitCriticalSection
 104              	.LVL4:
 451:.\Generated_Source\PSoC4/CyLib.c **** }
 105              		.loc 1 451 0
 106              		@ sp needed
 107              	.LVL5:
 108 001a 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 001c 00010B40 		.word	1074462976
 113              		.cfi_endproc
 114              	.LFE4:
 115              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 116              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 117              		.align	2
 118              		.global	CySysClkGetSysclkSource
 119              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 11


 120              		.thumb_func
 121              		.type	CySysClkGetSysclkSource, %function
 122              	CySysClkGetSysclkSource:
 123              	.LFB5:
 452:.\Generated_Source\PSoC4/CyLib.c **** 
 453:.\Generated_Source\PSoC4/CyLib.c **** 
 454:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:.\Generated_Source\PSoC4/CyLib.c **** *
 458:.\Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:.\Generated_Source\PSoC4/CyLib.c **** *
 460:.\Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:.\Generated_Source\PSoC4/CyLib.c **** *
 462:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:.\Generated_Source\PSoC4/CyLib.c **** {
 124              		.loc 1 464 0
 125              		.cfi_startproc
 126 0000 10B5     		push	{r4, lr}
 127              		.cfi_def_cfa_offset 8
 128              		.cfi_offset 4, -8
 129              		.cfi_offset 14, -4
 465:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:.\Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:.\Generated_Source\PSoC4/CyLib.c **** 
 468:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 130              		.loc 1 468 0
 131 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 132              	.LVL6:
 469:.\Generated_Source\PSoC4/CyLib.c **** 
 470:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:.\Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:.\Generated_Source\PSoC4/CyLib.c ****     {
 473:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:.\Generated_Source\PSoC4/CyLib.c ****     }
 475:.\Generated_Source\PSoC4/CyLib.c ****     else
 476:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:.\Generated_Source\PSoC4/CyLib.c ****     {
 478:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 133              		.loc 1 478 0
 134 0006 044B     		ldr	r3, .L11
 135 0008 1B68     		ldr	r3, [r3]
 136 000a 0724     		mov	r4, #7
 137 000c 1C40     		and	r4, r3
 138              	.LVL7:
 479:.\Generated_Source\PSoC4/CyLib.c ****     }
 480:.\Generated_Source\PSoC4/CyLib.c **** 
 481:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 139              		.loc 1 481 0
 140 000e FFF7FEFF 		bl	CyExitCriticalSection
 141              	.LVL8:
 482:.\Generated_Source\PSoC4/CyLib.c **** 
 483:.\Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:.\Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 484 0
 143 0012 201C     		mov	r0, r4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 12


 144              		@ sp needed
 145              	.LVL9:
 146 0014 10BD     		pop	{r4, pc}
 147              	.L12:
 148 0016 C046     		.align	2
 149              	.L11:
 150 0018 00010B40 		.word	1074462976
 151              		.cfi_endproc
 152              	.LFE5:
 153              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 154              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 155              		.align	2
 156              		.global	CySysClkWriteSysclkDiv
 157              		.code	16
 158              		.thumb_func
 159              		.type	CySysClkWriteSysclkDiv, %function
 160              	CySysClkWriteSysclkDiv:
 161              	.LFB6:
 485:.\Generated_Source\PSoC4/CyLib.c **** 
 486:.\Generated_Source\PSoC4/CyLib.c **** 
 487:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:.\Generated_Source\PSoC4/CyLib.c **** *
 491:.\Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:.\Generated_Source\PSoC4/CyLib.c **** *
 493:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:.\Generated_Source\PSoC4/CyLib.c **** *
 496:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:.\Generated_Source\PSoC4/CyLib.c **** *
 500:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 506:.\Generated_Source\PSoC4/CyLib.c **** *
 507:.\Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:.\Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:.\Generated_Source\PSoC4/CyLib.c **** *
 517:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:.\Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:.\Generated_Source\PSoC4/CyLib.c **** {
 162              		.loc 1 519 0
 163              		.cfi_startproc
 164              	.LVL10:
 165 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 13


 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 4, -8
 168              		.cfi_offset 14, -4
 169 0002 041C     		mov	r4, r0
 520:.\Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:.\Generated_Source\PSoC4/CyLib.c **** 
 522:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 170              		.loc 1 522 0
 171 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 172              	.LVL11:
 523:.\Generated_Source\PSoC4/CyLib.c **** 
 524:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 173              		.loc 1 524 0
 174 0008 0723     		mov	r3, #7
 175 000a 1C40     		and	r4, r3
 176              	.LVL12:
 177 000c E404     		lsl	r4, r4, #19
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:.\Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 178              		.loc 1 526 0
 179 000e 0449     		ldr	r1, .L14
 180 0010 0B68     		ldr	r3, [r1]
 181 0012 044A     		ldr	r2, .L14+4
 182 0014 1340     		and	r3, r2
 525:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 183              		.loc 1 525 0
 184 0016 2343     		orr	r3, r4
 524:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 185              		.loc 1 524 0
 186 0018 0B60     		str	r3, [r1]
 527:.\Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:.\Generated_Source\PSoC4/CyLib.c **** 
 529:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 187              		.loc 1 529 0
 188 001a FFF7FEFF 		bl	CyExitCriticalSection
 189              	.LVL13:
 530:.\Generated_Source\PSoC4/CyLib.c **** }
 190              		.loc 1 530 0
 191              		@ sp needed
 192 001e 10BD     		pop	{r4, pc}
 193              	.L15:
 194              		.align	2
 195              	.L14:
 196 0020 00010B40 		.word	1074462976
 197 0024 FFFFC7FF 		.word	-3670017
 198              		.cfi_endproc
 199              	.LFE6:
 200              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 201              		.section	.text.CySysClkEcoStop,"ax",%progbits
 202              		.align	2
 203              		.global	CySysClkEcoStop
 204              		.code	16
 205              		.thumb_func
 206              		.type	CySysClkEcoStop, %function
 207              	CySysClkEcoStop:
 208              	.LFB9:
 531:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 14


 532:.\Generated_Source\PSoC4/CyLib.c **** 
 533:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:.\Generated_Source\PSoC4/CyLib.c **** *
 537:.\Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:.\Generated_Source\PSoC4/CyLib.c **** *
 539:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:.\Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:.\Generated_Source\PSoC4/CyLib.c **** *
 542:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:.\Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:.\Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:.\Generated_Source\PSoC4/CyLib.c **** *
 546:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:.\Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:.\Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:.\Generated_Source\PSoC4/CyLib.c **** *
 550:.\Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:.\Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:.\Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:.\Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:.\Generated_Source\PSoC4/CyLib.c **** *
 555:.\Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:.\Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:.\Generated_Source\PSoC4/CyLib.c **** *
 558:.\Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:.\Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:.\Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:.\Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:.\Generated_Source\PSoC4/CyLib.c **** *
 565:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:.\Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:.\Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:.\Generated_Source\PSoC4/CyLib.c **** *
 569:.\Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:.\Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:.\Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:.\Generated_Source\PSoC4/CyLib.c **** * 4.
 573:.\Generated_Source\PSoC4/CyLib.c **** *
 574:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:.\Generated_Source\PSoC4/CyLib.c ****     {
 578:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:.\Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:.\Generated_Source\PSoC4/CyLib.c ****         #else
 582:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:.\Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:.\Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:.\Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:.\Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 15


 589:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:.\Generated_Source\PSoC4/CyLib.c **** 
 593:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:.\Generated_Source\PSoC4/CyLib.c **** 
 597:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:.\Generated_Source\PSoC4/CyLib.c **** 
 599:.\Generated_Source\PSoC4/CyLib.c **** 
 600:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:.\Generated_Source\PSoC4/CyLib.c **** 
 602:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:.\Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:.\Generated_Source\PSoC4/CyLib.c ****             {
 605:.\Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:.\Generated_Source\PSoC4/CyLib.c ****             }
 608:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:.\Generated_Source\PSoC4/CyLib.c **** 
 610:.\Generated_Source\PSoC4/CyLib.c **** 
 611:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:.\Generated_Source\PSoC4/CyLib.c **** 
 613:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:.\Generated_Source\PSoC4/CyLib.c ****                 {
 616:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:.\Generated_Source\PSoC4/CyLib.c **** 
 618:.\Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:.\Generated_Source\PSoC4/CyLib.c ****                 {
 620:.\Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 622:.\Generated_Source\PSoC4/CyLib.c ****                 }
 623:.\Generated_Source\PSoC4/CyLib.c **** 
 624:.\Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:.\Generated_Source\PSoC4/CyLib.c ****                 }
 626:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:.\Generated_Source\PSoC4/CyLib.c **** 
 628:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:.\Generated_Source\PSoC4/CyLib.c **** 
 630:.\Generated_Source\PSoC4/CyLib.c **** 
 631:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:.\Generated_Source\PSoC4/CyLib.c **** 
 633:.\Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:.\Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:.\Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:.\Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:.\Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:.\Generated_Source\PSoC4/CyLib.c **** 
 639:.\Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:.\Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:.\Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:.\Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:.\Generated_Source\PSoC4/CyLib.c **** 
 644:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:.\Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 16


 646:.\Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:.\Generated_Source\PSoC4/CyLib.c **** 
 648:.\Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:.\Generated_Source\PSoC4/CyLib.c **** 
 650:.\Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:.\Generated_Source\PSoC4/CyLib.c ****         {
 652:.\Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:.\Generated_Source\PSoC4/CyLib.c ****             {
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:.\Generated_Source\PSoC4/CyLib.c ****             }
 657:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:.\Generated_Source\PSoC4/CyLib.c ****             {
 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:.\Generated_Source\PSoC4/CyLib.c ****             }
 662:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:.\Generated_Source\PSoC4/CyLib.c ****             {
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:.\Generated_Source\PSoC4/CyLib.c ****             }
 667:.\Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:.\Generated_Source\PSoC4/CyLib.c ****             {
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:.\Generated_Source\PSoC4/CyLib.c ****             }
 672:.\Generated_Source\PSoC4/CyLib.c ****             else
 673:.\Generated_Source\PSoC4/CyLib.c ****             {
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:.\Generated_Source\PSoC4/CyLib.c ****             }
 677:.\Generated_Source\PSoC4/CyLib.c **** 
 678:.\Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 679:.\Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:.\Generated_Source\PSoC4/CyLib.c **** 
 681:.\Generated_Source\PSoC4/CyLib.c **** 
 682:.\Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:.\Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:.\Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:.\Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:.\Generated_Source\PSoC4/CyLib.c ****             *
 687:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:.\Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:.\Generated_Source\PSoC4/CyLib.c ****             {
 693:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:.\Generated_Source\PSoC4/CyLib.c **** 
 697:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:.\Generated_Source\PSoC4/CyLib.c **** 
 699:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:.\Generated_Source\PSoC4/CyLib.c ****             }
 701:.\Generated_Source\PSoC4/CyLib.c ****             else
 702:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 17


 703:.\Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:.\Generated_Source\PSoC4/CyLib.c ****             }
 705:.\Generated_Source\PSoC4/CyLib.c **** 
 706:.\Generated_Source\PSoC4/CyLib.c **** 
 707:.\Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:.\Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:.\Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:.\Generated_Source\PSoC4/CyLib.c ****             *
 711:.\Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:.\Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:.\Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:.\Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:.\Generated_Source\PSoC4/CyLib.c ****             {
 717:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:.\Generated_Source\PSoC4/CyLib.c ****             }
 721:.\Generated_Source\PSoC4/CyLib.c **** 
 722:.\Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:.\Generated_Source\PSoC4/CyLib.c **** 
 724:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:.\Generated_Source\PSoC4/CyLib.c ****                 {
 727:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:.\Generated_Source\PSoC4/CyLib.c ****                 }
 729:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:.\Generated_Source\PSoC4/CyLib.c ****                 {
 731:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:.\Generated_Source\PSoC4/CyLib.c ****                 }
 733:.\Generated_Source\PSoC4/CyLib.c ****                 else
 734:.\Generated_Source\PSoC4/CyLib.c ****                 {
 735:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 736:.\Generated_Source\PSoC4/CyLib.c ****                 }
 737:.\Generated_Source\PSoC4/CyLib.c ****             #else
 738:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:.\Generated_Source\PSoC4/CyLib.c **** 
 741:.\Generated_Source\PSoC4/CyLib.c **** 
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:.\Generated_Source\PSoC4/CyLib.c **** 
 747:.\Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:.\Generated_Source\PSoC4/CyLib.c ****             {
 749:.\Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:.\Generated_Source\PSoC4/CyLib.c ****             }
 753:.\Generated_Source\PSoC4/CyLib.c ****         }
 754:.\Generated_Source\PSoC4/CyLib.c ****         else
 755:.\Generated_Source\PSoC4/CyLib.c ****         {
 756:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:.\Generated_Source\PSoC4/CyLib.c ****         }
 759:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 18


 760:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:.\Generated_Source\PSoC4/CyLib.c **** 
 762:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:.\Generated_Source\PSoC4/CyLib.c ****             {
 765:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:.\Generated_Source\PSoC4/CyLib.c ****             }
 767:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:.\Generated_Source\PSoC4/CyLib.c **** 
 769:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:.\Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:.\Generated_Source\PSoC4/CyLib.c ****             {
 772:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:.\Generated_Source\PSoC4/CyLib.c ****             }
 774:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:.\Generated_Source\PSoC4/CyLib.c **** 
 776:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:.\Generated_Source\PSoC4/CyLib.c ****     }
 778:.\Generated_Source\PSoC4/CyLib.c **** 
 779:.\Generated_Source\PSoC4/CyLib.c **** #else
 780:.\Generated_Source\PSoC4/CyLib.c **** 
 781:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:.\Generated_Source\PSoC4/CyLib.c ****     {
 783:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:.\Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:.\Generated_Source\PSoC4/CyLib.c **** 
 786:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:.\Generated_Source\PSoC4/CyLib.c ****         
 790:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:.\Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:.\Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 793:.\Generated_Source\PSoC4/CyLib.c **** 
 794:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:.\Generated_Source\PSoC4/CyLib.c ****         #else
 797:.\Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:.\Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:.\Generated_Source\PSoC4/CyLib.c ****         {
 802:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:.\Generated_Source\PSoC4/CyLib.c **** 
 804:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:.\Generated_Source\PSoC4/CyLib.c ****                 {
 807:.\Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:.\Generated_Source\PSoC4/CyLib.c ****                 }
 810:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:.\Generated_Source\PSoC4/CyLib.c **** 
 812:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:.\Generated_Source\PSoC4/CyLib.c **** 
 814:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:.\Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 19


 817:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:.\Generated_Source\PSoC4/CyLib.c **** 
 819:.\Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:.\Generated_Source\PSoC4/CyLib.c ****                     {
 821:.\Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:.\Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:.\Generated_Source\PSoC4/CyLib.c ****                     }
 824:.\Generated_Source\PSoC4/CyLib.c **** 
 825:.\Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:.\Generated_Source\PSoC4/CyLib.c ****                     }
 827:.\Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:.\Generated_Source\PSoC4/CyLib.c **** 
 829:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:.\Generated_Source\PSoC4/CyLib.c **** 
 831:.\Generated_Source\PSoC4/CyLib.c **** 
 832:.\Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:.\Generated_Source\PSoC4/CyLib.c **** 
 835:.\Generated_Source\PSoC4/CyLib.c **** 
 836:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:.\Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:.\Generated_Source\PSoC4/CyLib.c ****                 {
 840:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:.\Generated_Source\PSoC4/CyLib.c ****                 }
 842:.\Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:.\Generated_Source\PSoC4/CyLib.c ****                 {
 844:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:.\Generated_Source\PSoC4/CyLib.c ****                 }
 846:.\Generated_Source\PSoC4/CyLib.c ****                 else
 847:.\Generated_Source\PSoC4/CyLib.c ****                 {
 848:.\Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:.\Generated_Source\PSoC4/CyLib.c ****                 }
 850:.\Generated_Source\PSoC4/CyLib.c ****             #else
 851:.\Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:.\Generated_Source\PSoC4/CyLib.c **** 
 855:.\Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:.\Generated_Source\PSoC4/CyLib.c **** 
 858:.\Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:.\Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:.\Generated_Source\PSoC4/CyLib.c **** 
 862:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:.\Generated_Source\PSoC4/CyLib.c **** 
 864:.\Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:.\Generated_Source\PSoC4/CyLib.c ****             {
 866:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:.\Generated_Source\PSoC4/CyLib.c **** 
 870:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:.\Generated_Source\PSoC4/CyLib.c **** 
 872:.\Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:.\Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 20


 874:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:.\Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:.\Generated_Source\PSoC4/CyLib.c ****             }
 877:.\Generated_Source\PSoC4/CyLib.c **** 
 878:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:.\Generated_Source\PSoC4/CyLib.c ****                 {
 881:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:.\Generated_Source\PSoC4/CyLib.c ****                 }
 883:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:.\Generated_Source\PSoC4/CyLib.c ****         
 885:.\Generated_Source\PSoC4/CyLib.c ****         
 886:.\Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:.\Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:.\Generated_Source\PSoC4/CyLib.c ****                 {
 889:.\Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:.\Generated_Source\PSoC4/CyLib.c ****                 }
 891:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:.\Generated_Source\PSoC4/CyLib.c **** 
 893:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:.\Generated_Source\PSoC4/CyLib.c ****         }
 895:.\Generated_Source\PSoC4/CyLib.c ****         else
 896:.\Generated_Source\PSoC4/CyLib.c ****         {
 897:.\Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:.\Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:.\Generated_Source\PSoC4/CyLib.c ****         }
 900:.\Generated_Source\PSoC4/CyLib.c ****     }
 901:.\Generated_Source\PSoC4/CyLib.c **** 
 902:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:.\Generated_Source\PSoC4/CyLib.c **** 
 904:.\Generated_Source\PSoC4/CyLib.c **** 
 905:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 907:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:.\Generated_Source\PSoC4/CyLib.c ****     *
 910:.\Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:.\Generated_Source\PSoC4/CyLib.c ****     *
 912:.\Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:.\Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:.\Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:.\Generated_Source\PSoC4/CyLib.c ****     *
 916:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:.\Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:.\Generated_Source\PSoC4/CyLib.c ****     *
 919:.\Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:.\Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:.\Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:.\Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:.\Generated_Source\PSoC4/CyLib.c ****     *
 926:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:.\Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 21


 931:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:.\Generated_Source\PSoC4/CyLib.c ****     {
 934:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:.\Generated_Source\PSoC4/CyLib.c **** 
 936:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:.\Generated_Source\PSoC4/CyLib.c **** 
 938:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:.\Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:.\Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:.\Generated_Source\PSoC4/CyLib.c **** 
 942:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:.\Generated_Source\PSoC4/CyLib.c ****     }
 944:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:.\Generated_Source\PSoC4/CyLib.c **** 
 946:.\Generated_Source\PSoC4/CyLib.c **** 
 947:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:.\Generated_Source\PSoC4/CyLib.c **** 
 949:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:.\Generated_Source\PSoC4/CyLib.c ****     *
 953:.\Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:.\Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:.\Generated_Source\PSoC4/CyLib.c ****     *
 956:.\Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:.\Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:.\Generated_Source\PSoC4/CyLib.c ****     * called.
 960:.\Generated_Source\PSoC4/CyLib.c ****     *
 961:.\Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:.\Generated_Source\PSoC4/CyLib.c ****     *
 963:.\Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
 964:.\Generated_Source\PSoC4/CyLib.c ****     *
 965:.\Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:.\Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:.\Generated_Source\PSoC4/CyLib.c ****     *
 968:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:.\Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:.\Generated_Source\PSoC4/CyLib.c ****     *
 971:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:.\Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:.\Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:.\Generated_Source\PSoC4/CyLib.c ****     *
 975:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:.\Generated_Source\PSoC4/CyLib.c ****     *
 977:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:.\Generated_Source\PSoC4/CyLib.c ****     {
 980:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:.\Generated_Source\PSoC4/CyLib.c **** 
 982:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:.\Generated_Source\PSoC4/CyLib.c **** 
 986:.\Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 22


 988:.\Generated_Source\PSoC4/CyLib.c **** 
 989:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:.\Generated_Source\PSoC4/CyLib.c **** 
 997:.\Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:.\Generated_Source\PSoC4/CyLib.c ****         {
 999:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:.\Generated_Source\PSoC4/CyLib.c **** 
1001:.\Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:.\Generated_Source\PSoC4/CyLib.c ****             {
1003:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:.\Generated_Source\PSoC4/CyLib.c **** 
1005:.\Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:.\Generated_Source\PSoC4/CyLib.c ****                 {
1007:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:.\Generated_Source\PSoC4/CyLib.c ****                     break;
1009:.\Generated_Source\PSoC4/CyLib.c ****                 }
1010:.\Generated_Source\PSoC4/CyLib.c ****             }
1011:.\Generated_Source\PSoC4/CyLib.c **** 
1012:.\Generated_Source\PSoC4/CyLib.c ****         }
1013:.\Generated_Source\PSoC4/CyLib.c **** 
1014:.\Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:.\Generated_Source\PSoC4/CyLib.c ****     }
1016:.\Generated_Source\PSoC4/CyLib.c **** 
1017:.\Generated_Source\PSoC4/CyLib.c **** 
1018:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1021:.\Generated_Source\PSoC4/CyLib.c ****     *
1022:.\Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:.\Generated_Source\PSoC4/CyLib.c ****     *
1024:.\Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:.\Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:.\Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:.\Generated_Source\PSoC4/CyLib.c ****     *
1028:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:.\Generated_Source\PSoC4/CyLib.c ****     {
 209              		.loc 1 1030 0
 210              		.cfi_startproc
1031:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 211              		.loc 1 1033 0
 212 0000 054A     		ldr	r2, .L17
 213 0002 1368     		ldr	r3, [r2]
 214 0004 0121     		mov	r1, #1
 215 0006 8B43     		bic	r3, r1
 216 0008 1360     		str	r3, [r2]
1034:.\Generated_Source\PSoC4/CyLib.c **** 
1035:.\Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 23


 217              		.loc 1 1036 0
 218 000a 044A     		ldr	r2, .L17+4
 219 000c 1168     		ldr	r1, [r2]
 220 000e 044B     		ldr	r3, .L17+8
 221 0010 0B40     		and	r3, r1
 222 0012 1360     		str	r3, [r2]
1037:.\Generated_Source\PSoC4/CyLib.c ****         #else
1038:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:.\Generated_Source\PSoC4/CyLib.c ****     }
 223              		.loc 1 1040 0
 224              		@ sp needed
 225 0014 7047     		bx	lr
 226              	.L18:
 227 0016 C046     		.align	2
 228              	.L17:
 229 0018 60F02E40 		.word	1076818016
 230 001c 10002E40 		.word	1076756496
 231 0020 FF7FFFFF 		.word	-32769
 232              		.cfi_endproc
 233              	.LFE9:
 234              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 235              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 236              		.align	2
 237              		.global	CySysClkEcoReadStatus
 238              		.code	16
 239              		.thumb_func
 240              		.type	CySysClkEcoReadStatus, %function
 241              	CySysClkEcoReadStatus:
 242              	.LFB10:
1041:.\Generated_Source\PSoC4/CyLib.c **** 
1042:.\Generated_Source\PSoC4/CyLib.c **** 
1043:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:.\Generated_Source\PSoC4/CyLib.c ****     *
1047:.\Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:.\Generated_Source\PSoC4/CyLib.c ****     *
1049:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:.\Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:.\Generated_Source\PSoC4/CyLib.c ****     *
1052:.\Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:.\Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:.\Generated_Source\PSoC4/CyLib.c ****     *
1055:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:.\Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:.\Generated_Source\PSoC4/CyLib.c ****     *
1058:.\Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:.\Generated_Source\PSoC4/CyLib.c ****     *
1060:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:.\Generated_Source\PSoC4/CyLib.c ****     {
 243              		.loc 1 1062 0
 244              		.cfi_startproc
1063:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:.\Generated_Source\PSoC4/CyLib.c **** 
1065:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 24


1066:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 245              		.loc 1 1066 0
 246 0000 024B     		ldr	r3, .L20
 247 0002 1B68     		ldr	r3, [r3]
 248 0004 0120     		mov	r0, #1
 249 0006 1840     		and	r0, r3
 250              	.LVL14:
1067:.\Generated_Source\PSoC4/CyLib.c ****         #else
1068:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:.\Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:.\Generated_Source\PSoC4/CyLib.c **** 
1071:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:.\Generated_Source\PSoC4/CyLib.c ****     }
 251              		.loc 1 1072 0
 252              		@ sp needed
 253 0008 7047     		bx	lr
 254              	.L21:
 255 000a C046     		.align	2
 256              	.L20:
 257 000c 0C002E40 		.word	1076756492
 258              		.cfi_endproc
 259              	.LFE10:
 260              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 261              		.section	.text.CySysLvdDisable,"ax",%progbits
 262              		.align	2
 263              		.global	CySysLvdDisable
 264              		.code	16
 265              		.thumb_func
 266              		.type	CySysLvdDisable, %function
 267              	CySysLvdDisable:
 268              	.LFB13:
1073:.\Generated_Source\PSoC4/CyLib.c **** 
1074:.\Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:.\Generated_Source\PSoC4/CyLib.c ****         *
1079:.\Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:.\Generated_Source\PSoC4/CyLib.c ****         *
1081:.\Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:.\Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:.\Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:.\Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:.\Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:.\Generated_Source\PSoC4/CyLib.c ****         *
1087:.\Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:.\Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:.\Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:.\Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:.\Generated_Source\PSoC4/CyLib.c ****         *
1094:.\Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 25


1099:.\Generated_Source\PSoC4/CyLib.c ****         *
1100:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:.\Generated_Source\PSoC4/CyLib.c ****         {
1103:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:.\Generated_Source\PSoC4/CyLib.c **** 
1105:.\Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1106:.\Generated_Source\PSoC4/CyLib.c ****             {
1107:.\Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:.\Generated_Source\PSoC4/CyLib.c **** 
1109:.\Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1110:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1111:.\Generated_Source\PSoC4/CyLib.c **** 
1112:.\Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1113:.\Generated_Source\PSoC4/CyLib.c ****             }
1114:.\Generated_Source\PSoC4/CyLib.c ****             else
1115:.\Generated_Source\PSoC4/CyLib.c ****             {
1116:.\Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:.\Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:.\Generated_Source\PSoC4/CyLib.c ****             }
1119:.\Generated_Source\PSoC4/CyLib.c ****         }
1120:.\Generated_Source\PSoC4/CyLib.c **** 
1121:.\Generated_Source\PSoC4/CyLib.c ****     #else
1122:.\Generated_Source\PSoC4/CyLib.c **** 
1123:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:.\Generated_Source\PSoC4/CyLib.c ****         *
1127:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:.\Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:.\Generated_Source\PSoC4/CyLib.c ****         *
1130:.\Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:.\Generated_Source\PSoC4/CyLib.c ****         *
1133:.\Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:.\Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:.\Generated_Source\PSoC4/CyLib.c ****         *
1136:.\Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:.\Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:.\Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:.\Generated_Source\PSoC4/CyLib.c ****         *
1140:.\Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:.\Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:.\Generated_Source\PSoC4/CyLib.c ****         *
1143:.\Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:.\Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:.\Generated_Source\PSoC4/CyLib.c ****         *
1146:.\Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:.\Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:.\Generated_Source\PSoC4/CyLib.c ****         *
1149:.\Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:.\Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:.\Generated_Source\PSoC4/CyLib.c ****         *
1152:.\Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 26


1156:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:.\Generated_Source\PSoC4/CyLib.c ****         *
1158:.\Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:.\Generated_Source\PSoC4/CyLib.c ****         *
1168:.\Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:.\Generated_Source\PSoC4/CyLib.c ****         *
1174:.\Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:.\Generated_Source\PSoC4/CyLib.c ****         *
1180:.\Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:.\Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:.\Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:.\Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:.\Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:.\Generated_Source\PSoC4/CyLib.c ****         *
1189:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1190:.\Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:.\Generated_Source\PSoC4/CyLib.c ****         {
1192:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:.\Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:.\Generated_Source\PSoC4/CyLib.c **** 
1195:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:.\Generated_Source\PSoC4/CyLib.c **** 
1197:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:.\Generated_Source\PSoC4/CyLib.c **** 
1202:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:.\Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:.\Generated_Source\PSoC4/CyLib.c **** 
1209:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:.\Generated_Source\PSoC4/CyLib.c **** 
1211:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:.\Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 27


1213:.\Generated_Source\PSoC4/CyLib.c **** 
1214:.\Generated_Source\PSoC4/CyLib.c **** 
1215:.\Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:.\Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:.\Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:.\Generated_Source\PSoC4/CyLib.c ****         *
1219:.\Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:.\Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:.\Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:.\Generated_Source\PSoC4/CyLib.c ****         *
1223:.\Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:.\Generated_Source\PSoC4/CyLib.c ****         *
1225:.\Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:.\Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:.\Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:.\Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:.\Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:.\Generated_Source\PSoC4/CyLib.c ****         *
1231:.\Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:.\Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:.\Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:.\Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:.\Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:.\Generated_Source\PSoC4/CyLib.c ****         *
1237:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:.\Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:.\Generated_Source\PSoC4/CyLib.c ****         *
1240:.\Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:.\Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:.\Generated_Source\PSoC4/CyLib.c ****         {
1243:.\Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:.\Generated_Source\PSoC4/CyLib.c **** 
1245:.\Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:.\Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1247:.\Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:.\Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:.\Generated_Source\PSoC4/CyLib.c **** 
1251:.\Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:.\Generated_Source\PSoC4/CyLib.c **** 
1253:.\Generated_Source\PSoC4/CyLib.c **** 
1254:.\Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:.\Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:.\Generated_Source\PSoC4/CyLib.c ****             {
1257:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:.\Generated_Source\PSoC4/CyLib.c ****             }
1259:.\Generated_Source\PSoC4/CyLib.c ****             else
1260:.\Generated_Source\PSoC4/CyLib.c ****             {
1261:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:.\Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:.\Generated_Source\PSoC4/CyLib.c **** 
1264:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:.\Generated_Source\PSoC4/CyLib.c ****                 {
1266:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:.\Generated_Source\PSoC4/CyLib.c ****                 }
1268:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 28


1270:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:.\Generated_Source\PSoC4/CyLib.c ****                 }
1272:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:.\Generated_Source\PSoC4/CyLib.c ****                 {
1274:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:.\Generated_Source\PSoC4/CyLib.c ****                 }
1276:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:.\Generated_Source\PSoC4/CyLib.c ****                 {
1278:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:.\Generated_Source\PSoC4/CyLib.c ****                 }
1280:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:.\Generated_Source\PSoC4/CyLib.c ****                 {
1282:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:.\Generated_Source\PSoC4/CyLib.c ****                 }
1284:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:.\Generated_Source\PSoC4/CyLib.c ****                 {
1286:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:.\Generated_Source\PSoC4/CyLib.c ****                 }
1288:.\Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:.\Generated_Source\PSoC4/CyLib.c ****                 {
1290:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:.\Generated_Source\PSoC4/CyLib.c ****                 }
1292:.\Generated_Source\PSoC4/CyLib.c ****                 else
1293:.\Generated_Source\PSoC4/CyLib.c ****                 {
1294:.\Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:.\Generated_Source\PSoC4/CyLib.c ****                 }
1296:.\Generated_Source\PSoC4/CyLib.c **** 
1297:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:.\Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:.\Generated_Source\PSoC4/CyLib.c **** 
1300:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:.\Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:.\Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:.\Generated_Source\PSoC4/CyLib.c ****                 {
1304:.\Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:.\Generated_Source\PSoC4/CyLib.c ****                 }
1307:.\Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:.\Generated_Source\PSoC4/CyLib.c ****                 {
1309:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:.\Generated_Source\PSoC4/CyLib.c ****                 }
1311:.\Generated_Source\PSoC4/CyLib.c ****                 else
1312:.\Generated_Source\PSoC4/CyLib.c ****                 {
1313:.\Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:.\Generated_Source\PSoC4/CyLib.c ****                 }
1315:.\Generated_Source\PSoC4/CyLib.c **** 
1316:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:.\Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:.\Generated_Source\PSoC4/CyLib.c ****                 {
1319:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:.\Generated_Source\PSoC4/CyLib.c ****                 }
1321:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:.\Generated_Source\PSoC4/CyLib.c ****                 {
1323:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:.\Generated_Source\PSoC4/CyLib.c ****                 }
1325:.\Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:.\Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 29


1327:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:.\Generated_Source\PSoC4/CyLib.c ****                 }
1329:.\Generated_Source\PSoC4/CyLib.c ****                 else
1330:.\Generated_Source\PSoC4/CyLib.c ****                 {
1331:.\Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:.\Generated_Source\PSoC4/CyLib.c ****                 }
1333:.\Generated_Source\PSoC4/CyLib.c **** 
1334:.\Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:.\Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:.\Generated_Source\PSoC4/CyLib.c **** 
1337:.\Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:.\Generated_Source\PSoC4/CyLib.c **** 
1339:.\Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:.\Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:.\Generated_Source\PSoC4/CyLib.c ****                 {
1342:.\Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:.\Generated_Source\PSoC4/CyLib.c ****                 }
1345:.\Generated_Source\PSoC4/CyLib.c ****                 else
1346:.\Generated_Source\PSoC4/CyLib.c ****                 {
1347:.\Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:.\Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:.\Generated_Source\PSoC4/CyLib.c ****                     */
1350:.\Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:.\Generated_Source\PSoC4/CyLib.c ****                 }
1352:.\Generated_Source\PSoC4/CyLib.c ****             }
1353:.\Generated_Source\PSoC4/CyLib.c **** 
1354:.\Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:.\Generated_Source\PSoC4/CyLib.c ****         }
1356:.\Generated_Source\PSoC4/CyLib.c **** 
1357:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:.\Generated_Source\PSoC4/CyLib.c **** 
1359:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:.\Generated_Source\PSoC4/CyLib.c **** 
1361:.\Generated_Source\PSoC4/CyLib.c **** 
1362:.\Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:.\Generated_Source\PSoC4/CyLib.c ****     *
1367:.\Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:.\Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:.\Generated_Source\PSoC4/CyLib.c ****     *
1370:.\Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:.\Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:.\Generated_Source\PSoC4/CyLib.c ****     *
1373:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:.\Generated_Source\PSoC4/CyLib.c ****     *
1375:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:.\Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:.\Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:.\Generated_Source\PSoC4/CyLib.c ****     *
1379:.\Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:.\Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:.\Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:.\Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 30


1384:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:.\Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:.\Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:.\Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:.\Generated_Source\PSoC4/CyLib.c ****     *
1391:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:.\Generated_Source\PSoC4/CyLib.c ****     {
1394:.\Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:.\Generated_Source\PSoC4/CyLib.c **** 
1398:.\Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:.\Generated_Source\PSoC4/CyLib.c ****         {
1400:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:.\Generated_Source\PSoC4/CyLib.c **** 
1402:.\Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:.\Generated_Source\PSoC4/CyLib.c **** 
1405:.\Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:.\Generated_Source\PSoC4/CyLib.c **** 
1408:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:.\Generated_Source\PSoC4/CyLib.c **** 
1410:.\Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:.\Generated_Source\PSoC4/CyLib.c **** 
1416:.\Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:.\Generated_Source\PSoC4/CyLib.c ****             {
1418:.\Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:.\Generated_Source\PSoC4/CyLib.c **** 
1420:.\Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:.\Generated_Source\PSoC4/CyLib.c ****                 {
1422:.\Generated_Source\PSoC4/CyLib.c **** 
1423:.\Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:.\Generated_Source\PSoC4/CyLib.c ****                     {
1425:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:.\Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1428:.\Generated_Source\PSoC4/CyLib.c ****                     }
1429:.\Generated_Source\PSoC4/CyLib.c **** 
1430:.\Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:.\Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:.\Generated_Source\PSoC4/CyLib.c ****                 }
1433:.\Generated_Source\PSoC4/CyLib.c ****             }
1434:.\Generated_Source\PSoC4/CyLib.c ****         }
1435:.\Generated_Source\PSoC4/CyLib.c ****         else
1436:.\Generated_Source\PSoC4/CyLib.c ****         {
1437:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:.\Generated_Source\PSoC4/CyLib.c ****         }
1439:.\Generated_Source\PSoC4/CyLib.c **** 
1440:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 31


1441:.\Generated_Source\PSoC4/CyLib.c ****     }
1442:.\Generated_Source\PSoC4/CyLib.c **** 
1443:.\Generated_Source\PSoC4/CyLib.c **** 
1444:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:.\Generated_Source\PSoC4/CyLib.c ****     *
1448:.\Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:.\Generated_Source\PSoC4/CyLib.c ****     *
1450:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:.\Generated_Source\PSoC4/CyLib.c ****     *
1452:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:.\Generated_Source\PSoC4/CyLib.c ****     *
1456:.\Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:.\Generated_Source\PSoC4/CyLib.c ****     *
1458:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:.\Generated_Source\PSoC4/CyLib.c ****     {
1461:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:.\Generated_Source\PSoC4/CyLib.c **** 
1464:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:.\Generated_Source\PSoC4/CyLib.c **** 
1466:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:.\Generated_Source\PSoC4/CyLib.c **** 
1468:.\Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:.\Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:.\Generated_Source\PSoC4/CyLib.c ****         {
1472:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:.\Generated_Source\PSoC4/CyLib.c ****         }
1474:.\Generated_Source\PSoC4/CyLib.c **** 
1475:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:.\Generated_Source\PSoC4/CyLib.c **** 
1477:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:.\Generated_Source\PSoC4/CyLib.c ****     }
1479:.\Generated_Source\PSoC4/CyLib.c **** 
1480:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:.\Generated_Source\PSoC4/CyLib.c ****     *
1484:.\Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:.\Generated_Source\PSoC4/CyLib.c ****     *
1486:.\Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:.\Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:.\Generated_Source\PSoC4/CyLib.c ****     *
1489:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:.\Generated_Source\PSoC4/CyLib.c ****     *
1491:.\Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:.\Generated_Source\PSoC4/CyLib.c ****     *
1495:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 32


1498:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:.\Generated_Source\PSoC4/CyLib.c **** 
1500:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:.\Generated_Source\PSoC4/CyLib.c ****         {
1502:.\Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:.\Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:.\Generated_Source\PSoC4/CyLib.c ****         }
1506:.\Generated_Source\PSoC4/CyLib.c ****     }
1507:.\Generated_Source\PSoC4/CyLib.c **** 
1508:.\Generated_Source\PSoC4/CyLib.c **** 
1509:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:.\Generated_Source\PSoC4/CyLib.c ****     *
1513:.\Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:.\Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:.\Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:.\Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:.\Generated_Source\PSoC4/CyLib.c ****     *
1518:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:.\Generated_Source\PSoC4/CyLib.c ****     *
1521:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:.\Generated_Source\PSoC4/CyLib.c ****     *
1523:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:.\Generated_Source\PSoC4/CyLib.c ****     *
1527:.\Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:.\Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:.\Generated_Source\PSoC4/CyLib.c ****     *
1530:.\Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:.\Generated_Source\PSoC4/CyLib.c ****     *
1532:.\Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:.\Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:.\Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:.\Generated_Source\PSoC4/CyLib.c ****     *
1536:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:.\Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:.\Generated_Source\PSoC4/CyLib.c ****     *
1540:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:.\Generated_Source\PSoC4/CyLib.c ****     {
1543:.\Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:.\Generated_Source\PSoC4/CyLib.c **** 
1548:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:.\Generated_Source\PSoC4/CyLib.c **** 
1550:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:.\Generated_Source\PSoC4/CyLib.c **** 
1552:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:.\Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:.\Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 33


1555:.\Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:.\Generated_Source\PSoC4/CyLib.c ****         {
1558:.\Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:.\Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:.\Generated_Source\PSoC4/CyLib.c **** 
1563:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:.\Generated_Source\PSoC4/CyLib.c **** 
1567:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:.\Generated_Source\PSoC4/CyLib.c **** 
1569:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:.\Generated_Source\PSoC4/CyLib.c ****         }
1571:.\Generated_Source\PSoC4/CyLib.c **** 
1572:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:.\Generated_Source\PSoC4/CyLib.c **** 
1574:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:.\Generated_Source\PSoC4/CyLib.c ****     }
1576:.\Generated_Source\PSoC4/CyLib.c **** 
1577:.\Generated_Source\PSoC4/CyLib.c **** 
1578:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:.\Generated_Source\PSoC4/CyLib.c ****     *
1582:.\Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:.\Generated_Source\PSoC4/CyLib.c ****     *
1584:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:.\Generated_Source\PSoC4/CyLib.c ****     *
1587:.\Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:.\Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1589:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:.\Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:.\Generated_Source\PSoC4/CyLib.c ****     *
1592:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:.\Generated_Source\PSoC4/CyLib.c ****     *
1594:.\Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:.\Generated_Source\PSoC4/CyLib.c ****     *
1598:.\Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:.\Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:.\Generated_Source\PSoC4/CyLib.c ****     *
1603:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:.\Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:.\Generated_Source\PSoC4/CyLib.c ****     *
1606:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:.\Generated_Source\PSoC4/CyLib.c ****     *
1608:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:.\Generated_Source\PSoC4/CyLib.c ****     {
1611:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 34


1612:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:.\Generated_Source\PSoC4/CyLib.c **** 
1614:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:.\Generated_Source\PSoC4/CyLib.c **** 
1616:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:.\Generated_Source\PSoC4/CyLib.c ****         {
1618:.\Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:.\Generated_Source\PSoC4/CyLib.c ****         }
1622:.\Generated_Source\PSoC4/CyLib.c **** 
1623:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:.\Generated_Source\PSoC4/CyLib.c ****     }
1625:.\Generated_Source\PSoC4/CyLib.c **** 
1626:.\Generated_Source\PSoC4/CyLib.c **** 
1627:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:.\Generated_Source\PSoC4/CyLib.c ****     *
1631:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:.\Generated_Source\PSoC4/CyLib.c ****     *
1634:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:.\Generated_Source\PSoC4/CyLib.c ****     *
1638:.\Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:.\Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:.\Generated_Source\PSoC4/CyLib.c ****     *
1641:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:.\Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:.\Generated_Source\PSoC4/CyLib.c ****     {
1644:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1646:.\Generated_Source\PSoC4/CyLib.c **** 
1647:.\Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:.\Generated_Source\PSoC4/CyLib.c **** 
1649:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:.\Generated_Source\PSoC4/CyLib.c **** 
1651:.\Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:.\Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:.\Generated_Source\PSoC4/CyLib.c **** 
1654:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:.\Generated_Source\PSoC4/CyLib.c **** 
1656:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:.\Generated_Source\PSoC4/CyLib.c ****     }
1658:.\Generated_Source\PSoC4/CyLib.c **** 
1659:.\Generated_Source\PSoC4/CyLib.c **** 
1660:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:.\Generated_Source\PSoC4/CyLib.c ****     *
1664:.\Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:.\Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:.\Generated_Source\PSoC4/CyLib.c ****     *
1667:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:.\Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 35


1669:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:.\Generated_Source\PSoC4/CyLib.c ****     *
1673:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:.\Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:.\Generated_Source\PSoC4/CyLib.c ****     *
1676:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:.\Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:.\Generated_Source\PSoC4/CyLib.c ****     {
1679:.\Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:.\Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:.\Generated_Source\PSoC4/CyLib.c **** 
1683:.\Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:.\Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:.\Generated_Source\PSoC4/CyLib.c **** 
1686:.\Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:.\Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:.\Generated_Source\PSoC4/CyLib.c ****         {
1690:.\Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:.\Generated_Source\PSoC4/CyLib.c ****         }
1692:.\Generated_Source\PSoC4/CyLib.c **** 
1693:.\Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:.\Generated_Source\PSoC4/CyLib.c ****     }
1695:.\Generated_Source\PSoC4/CyLib.c **** 
1696:.\Generated_Source\PSoC4/CyLib.c **** 
1697:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:.\Generated_Source\PSoC4/CyLib.c ****     *
1701:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:.\Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1703:.\Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:.\Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:.\Generated_Source\PSoC4/CyLib.c ****     *
1706:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:.\Generated_Source\PSoC4/CyLib.c ****     *
1708:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:.\Generated_Source\PSoC4/CyLib.c ****     *
1712:.\Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:.\Generated_Source\PSoC4/CyLib.c ****     *
1714:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:.\Generated_Source\PSoC4/CyLib.c ****     {
1717:.\Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:.\Generated_Source\PSoC4/CyLib.c **** 
1720:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:.\Generated_Source\PSoC4/CyLib.c **** 
1722:.\Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:.\Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:.\Generated_Source\PSoC4/CyLib.c **** 
1725:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 36


1726:.\Generated_Source\PSoC4/CyLib.c **** 
1727:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:.\Generated_Source\PSoC4/CyLib.c ****     }
1729:.\Generated_Source\PSoC4/CyLib.c **** 
1730:.\Generated_Source\PSoC4/CyLib.c **** 
1731:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:.\Generated_Source\PSoC4/CyLib.c ****     *
1735:.\Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:.\Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:.\Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:.\Generated_Source\PSoC4/CyLib.c ****     *
1739:.\Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:.\Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:.\Generated_Source\PSoC4/CyLib.c ****     *
1742:.\Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:.\Generated_Source\PSoC4/CyLib.c ****     *
1744:.\Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:.\Generated_Source\PSoC4/CyLib.c ****     *
1748:.\Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:.\Generated_Source\PSoC4/CyLib.c ****     *
1750:.\Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:.\Generated_Source\PSoC4/CyLib.c ****     *
1752:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:.\Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:.\Generated_Source\PSoC4/CyLib.c ****     *
1758:.\Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:.\Generated_Source\PSoC4/CyLib.c ****     *
1760:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:.\Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:.\Generated_Source\PSoC4/CyLib.c ****     *
1763:.\Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:.\Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:.\Generated_Source\PSoC4/CyLib.c ****     *
1766:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:.\Generated_Source\PSoC4/CyLib.c ****     {
1769:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:.\Generated_Source\PSoC4/CyLib.c **** 
1772:.\Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:.\Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:.\Generated_Source\PSoC4/CyLib.c **** 
1775:.\Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:.\Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:.\Generated_Source\PSoC4/CyLib.c **** 
1778:.\Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:.\Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:.\Generated_Source\PSoC4/CyLib.c **** 
1781:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 37


1783:.\Generated_Source\PSoC4/CyLib.c **** 
1784:.\Generated_Source\PSoC4/CyLib.c **** 
1785:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:.\Generated_Source\PSoC4/CyLib.c **** 
1787:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:.\Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:.\Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:.\Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:.\Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:.\Generated_Source\PSoC4/CyLib.c ****         {
1793:.\Generated_Source\PSoC4/CyLib.c **** 
1794:.\Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:.\Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:.\Generated_Source\PSoC4/CyLib.c **** 
1798:.\Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:.\Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:.\Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:.\Generated_Source\PSoC4/CyLib.c **** 
1802:.\Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:.\Generated_Source\PSoC4/CyLib.c ****             {
1804:.\Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:.\Generated_Source\PSoC4/CyLib.c ****                 {
1806:.\Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:.\Generated_Source\PSoC4/CyLib.c **** 
1808:.\Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:.\Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:.\Generated_Source\PSoC4/CyLib.c **** 
1811:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:.\Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:.\Generated_Source\PSoC4/CyLib.c **** 
1814:.\Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:.\Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:.\Generated_Source\PSoC4/CyLib.c **** 
1817:.\Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:.\Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:.\Generated_Source\PSoC4/CyLib.c ****                     {
1820:.\Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:.\Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:.\Generated_Source\PSoC4/CyLib.c ****                         break;
1823:.\Generated_Source\PSoC4/CyLib.c ****                     }
1824:.\Generated_Source\PSoC4/CyLib.c ****                 }
1825:.\Generated_Source\PSoC4/CyLib.c **** 
1826:.\Generated_Source\PSoC4/CyLib.c **** 
1827:.\Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:.\Generated_Source\PSoC4/CyLib.c ****                 {
1829:.\Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:.\Generated_Source\PSoC4/CyLib.c ****                     {
1831:.\Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:.\Generated_Source\PSoC4/CyLib.c ****                     }
1833:.\Generated_Source\PSoC4/CyLib.c ****                 }
1834:.\Generated_Source\PSoC4/CyLib.c ****             }
1835:.\Generated_Source\PSoC4/CyLib.c **** 
1836:.\Generated_Source\PSoC4/CyLib.c ****         }
1837:.\Generated_Source\PSoC4/CyLib.c **** 
1838:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:.\Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 38


1840:.\Generated_Source\PSoC4/CyLib.c **** 
1841:.\Generated_Source\PSoC4/CyLib.c **** 
1842:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:.\Generated_Source\PSoC4/CyLib.c ****     *
1846:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:.\Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:.\Generated_Source\PSoC4/CyLib.c ****     *
1849:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:.\Generated_Source\PSoC4/CyLib.c ****     *
1851:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:.\Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:.\Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:.\Generated_Source\PSoC4/CyLib.c ****     *
1855:.\Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:.\Generated_Source\PSoC4/CyLib.c ****     *
1864:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:.\Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:.\Generated_Source\PSoC4/CyLib.c ****     {
1867:.\Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:.\Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:.\Generated_Source\PSoC4/CyLib.c **** 
1870:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:.\Generated_Source\PSoC4/CyLib.c **** 
1872:.\Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:.\Generated_Source\PSoC4/CyLib.c ****         {
1874:.\Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:.\Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:.\Generated_Source\PSoC4/CyLib.c ****         }
1878:.\Generated_Source\PSoC4/CyLib.c **** 
1879:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:.\Generated_Source\PSoC4/CyLib.c ****     }
1881:.\Generated_Source\PSoC4/CyLib.c **** 
1882:.\Generated_Source\PSoC4/CyLib.c **** 
1883:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:.\Generated_Source\PSoC4/CyLib.c ****     *
1887:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:.\Generated_Source\PSoC4/CyLib.c ****     *
1889:.\Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:.\Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:.\Generated_Source\PSoC4/CyLib.c ****     *
1892:.\Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:.\Generated_Source\PSoC4/CyLib.c ****     *
1894:.\Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:.\Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:.\Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 39


1897:.\Generated_Source\PSoC4/CyLib.c ****     *
1898:.\Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:.\Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:.\Generated_Source\PSoC4/CyLib.c ****     *
1904:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:.\Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:.\Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:.\Generated_Source\PSoC4/CyLib.c ****     *
1908:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:.\Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:.\Generated_Source\PSoC4/CyLib.c ****     {
1911:.\Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:.\Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:.\Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:.\Generated_Source\PSoC4/CyLib.c **** 
1916:.\Generated_Source\PSoC4/CyLib.c **** 
1917:.\Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:.\Generated_Source\PSoC4/CyLib.c **** 
1919:.\Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:.\Generated_Source\PSoC4/CyLib.c **** 
1921:.\Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:.\Generated_Source\PSoC4/CyLib.c ****         {
1923:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:.\Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:.\Generated_Source\PSoC4/CyLib.c **** 
1926:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:.\Generated_Source\PSoC4/CyLib.c **** 
1928:.\Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:.\Generated_Source\PSoC4/CyLib.c ****         }
1930:.\Generated_Source\PSoC4/CyLib.c **** 
1931:.\Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:.\Generated_Source\PSoC4/CyLib.c **** 
1933:.\Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:.\Generated_Source\PSoC4/CyLib.c ****     }
1935:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:.\Generated_Source\PSoC4/CyLib.c **** 
1937:.\Generated_Source\PSoC4/CyLib.c **** 
1938:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:.\Generated_Source\PSoC4/CyLib.c **** 
1940:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:.\Generated_Source\PSoC4/CyLib.c ****     *
1944:.\Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:.\Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:.\Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:.\Generated_Source\PSoC4/CyLib.c ****     *
1948:.\Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:.\Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 40


1954:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:.\Generated_Source\PSoC4/CyLib.c ****     *
1968:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:.\Generated_Source\PSoC4/CyLib.c ****     {
1971:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:.\Generated_Source\PSoC4/CyLib.c **** 
1974:.\Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:.\Generated_Source\PSoC4/CyLib.c **** 
1978:.\Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:.\Generated_Source\PSoC4/CyLib.c **** 
1981:.\Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:.\Generated_Source\PSoC4/CyLib.c **** 
1984:.\Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:.\Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:.\Generated_Source\PSoC4/CyLib.c **** 
1987:.\Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
1988:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:.\Generated_Source\PSoC4/CyLib.c ****     }
1990:.\Generated_Source\PSoC4/CyLib.c **** 
1991:.\Generated_Source\PSoC4/CyLib.c **** 
1992:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:.\Generated_Source\PSoC4/CyLib.c ****     *
1996:.\Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:.\Generated_Source\PSoC4/CyLib.c ****     *
1998:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:.\Generated_Source\PSoC4/CyLib.c ****     {
 269              		.loc 1 2000 0
 270              		.cfi_startproc
2001:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 271              		.loc 1 2001 0
 272 0000 054A     		ldr	r2, .L23
 273 0002 1368     		ldr	r3, [r2]
 274 0004 0221     		mov	r1, #2
 275 0006 8B43     		bic	r3, r1
 276 0008 1360     		str	r3, [r2]
2002:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 41


 277              		.loc 1 2002 0
 278 000a 044A     		ldr	r2, .L23+4
 279 000c 1368     		ldr	r3, [r2]
 280 000e 0139     		sub	r1, r1, #1
 281 0010 8B43     		bic	r3, r1
 282 0012 1360     		str	r3, [r2]
2003:.\Generated_Source\PSoC4/CyLib.c ****     }
 283              		.loc 1 2003 0
 284              		@ sp needed
 285 0014 7047     		bx	lr
 286              	.L24:
 287 0016 C046     		.align	2
 288              	.L23:
 289 0018 08000B40 		.word	1074462728
 290 001c 18000B40 		.word	1074462744
 291              		.cfi_endproc
 292              	.LFE13:
 293              		.size	CySysLvdDisable, .-CySysLvdDisable
 294              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 295              		.align	2
 296              		.global	CySysLvdGetInterruptSource
 297              		.code	16
 298              		.thumb_func
 299              		.type	CySysLvdGetInterruptSource, %function
 300              	CySysLvdGetInterruptSource:
 301              	.LFB14:
2004:.\Generated_Source\PSoC4/CyLib.c **** 
2005:.\Generated_Source\PSoC4/CyLib.c **** 
2006:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:.\Generated_Source\PSoC4/CyLib.c ****     *
2010:.\Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:.\Generated_Source\PSoC4/CyLib.c ****     *
2012:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2013:.\Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:.\Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:.\Generated_Source\PSoC4/CyLib.c ****     *
2016:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:.\Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:.\Generated_Source\PSoC4/CyLib.c ****     {
 302              		.loc 1 2018 0
 303              		.cfi_startproc
2019:.\Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 304              		.loc 1 2019 0
 305 0000 024B     		ldr	r3, .L26
 306 0002 1B68     		ldr	r3, [r3]
 307 0004 0220     		mov	r0, #2
 308 0006 1840     		and	r0, r3
2020:.\Generated_Source\PSoC4/CyLib.c ****     }
 309              		.loc 1 2020 0
 310              		@ sp needed
 311 0008 7047     		bx	lr
 312              	.L27:
 313 000a C046     		.align	2
 314              	.L26:
 315 000c 04000B40 		.word	1074462724
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 42


 316              		.cfi_endproc
 317              	.LFE14:
 318              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 319              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 320              		.align	2
 321              		.global	CySysLvdClearInterrupt
 322              		.code	16
 323              		.thumb_func
 324              		.type	CySysLvdClearInterrupt, %function
 325              	CySysLvdClearInterrupt:
 326              	.LFB15:
2021:.\Generated_Source\PSoC4/CyLib.c **** 
2022:.\Generated_Source\PSoC4/CyLib.c **** 
2023:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:.\Generated_Source\PSoC4/CyLib.c ****     *
2027:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:.\Generated_Source\PSoC4/CyLib.c ****     *
2029:.\Generated_Source\PSoC4/CyLib.c ****     * \return
2030:.\Generated_Source\PSoC4/CyLib.c ****     *  None
2031:.\Generated_Source\PSoC4/CyLib.c ****     *
2032:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:.\Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:.\Generated_Source\PSoC4/CyLib.c ****     {
 327              		.loc 1 2034 0
 328              		.cfi_startproc
2035:.\Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 329              		.loc 1 2035 0
 330 0000 0222     		mov	r2, #2
 331 0002 014B     		ldr	r3, .L29
 332 0004 1A60     		str	r2, [r3]
2036:.\Generated_Source\PSoC4/CyLib.c ****     }
 333              		.loc 1 2036 0
 334              		@ sp needed
 335 0006 7047     		bx	lr
 336              	.L30:
 337              		.align	2
 338              	.L29:
 339 0008 04000B40 		.word	1074462724
 340              		.cfi_endproc
 341              	.LFE15:
 342              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 343              		.section	.text.CySysGetResetReason,"ax",%progbits
 344              		.align	2
 345              		.global	CySysGetResetReason
 346              		.code	16
 347              		.thumb_func
 348              		.type	CySysGetResetReason, %function
 349              	CySysGetResetReason:
 350              	.LFB16:
2037:.\Generated_Source\PSoC4/CyLib.c **** 
2038:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:.\Generated_Source\PSoC4/CyLib.c **** 
2040:.\Generated_Source\PSoC4/CyLib.c **** 
2041:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 43


2043:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:.\Generated_Source\PSoC4/CyLib.c **** *
2045:.\Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:.\Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:.\Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:.\Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:.\Generated_Source\PSoC4/CyLib.c **** *
2050:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:.\Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:.\Generated_Source\PSoC4/CyLib.c **** *
2055:.\Generated_Source\PSoC4/CyLib.c **** * \return
2056:.\Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:.\Generated_Source\PSoC4/CyLib.c **** *
2058:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:.\Generated_Source\PSoC4/CyLib.c **** {
 351              		.loc 1 2060 0
 352              		.cfi_startproc
 353              	.LVL15:
 354 0000 021C     		mov	r2, r0
2061:.\Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:.\Generated_Source\PSoC4/CyLib.c **** 
2063:.\Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 355              		.loc 1 2063 0
 356 0002 1920     		mov	r0, #25
 357              	.LVL16:
 358 0004 0240     		and	r2, r0
 359              	.LVL17:
2064:.\Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 360              		.loc 1 2064 0
 361 0006 0249     		ldr	r1, .L32
 362 0008 0B68     		ldr	r3, [r1]
 363 000a 1840     		and	r0, r3
 364              	.LVL18:
2065:.\Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 365              		.loc 1 2066 0
 366 000c 0A60     		str	r2, [r1]
2067:.\Generated_Source\PSoC4/CyLib.c **** 
2068:.\Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:.\Generated_Source\PSoC4/CyLib.c **** }
 367              		.loc 1 2069 0
 368              		@ sp needed
 369 000e 7047     		bx	lr
 370              	.L33:
 371              		.align	2
 372              	.L32:
 373 0010 00030B40 		.word	1074463488
 374              		.cfi_endproc
 375              	.LFE16:
 376              		.size	CySysGetResetReason, .-CySysGetResetReason
 377              		.section	.text.CyDisableInts,"ax",%progbits
 378              		.align	2
 379              		.global	CyDisableInts
 380              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 44


 381              		.thumb_func
 382              		.type	CyDisableInts, %function
 383              	CyDisableInts:
 384              	.LFB17:
2070:.\Generated_Source\PSoC4/CyLib.c **** 
2071:.\Generated_Source\PSoC4/CyLib.c **** 
2072:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:.\Generated_Source\PSoC4/CyLib.c **** *
2076:.\Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:.\Generated_Source\PSoC4/CyLib.c **** *
2078:.\Generated_Source\PSoC4/CyLib.c **** * \return
2079:.\Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:.\Generated_Source\PSoC4/CyLib.c **** *
2081:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:.\Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:.\Generated_Source\PSoC4/CyLib.c **** {
 385              		.loc 1 2083 0
 386              		.cfi_startproc
2084:.\Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:.\Generated_Source\PSoC4/CyLib.c **** 
2086:.\Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:.\Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 387              		.loc 1 2087 0
 388 0000 024B     		ldr	r3, .L35
 389 0002 1868     		ldr	r0, [r3]
 390              	.LVL19:
2088:.\Generated_Source\PSoC4/CyLib.c **** 
2089:.\Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 391              		.loc 1 2090 0
 392 0004 0122     		mov	r2, #1
 393 0006 5242     		neg	r2, r2
 394 0008 1A60     		str	r2, [r3]
2091:.\Generated_Source\PSoC4/CyLib.c **** 
2092:.\Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:.\Generated_Source\PSoC4/CyLib.c **** }
 395              		.loc 1 2093 0
 396              		@ sp needed
 397 000a 7047     		bx	lr
 398              	.L36:
 399              		.align	2
 400              	.L35:
 401 000c 80E100E0 		.word	-536813184
 402              		.cfi_endproc
 403              	.LFE17:
 404              		.size	CyDisableInts, .-CyDisableInts
 405              		.section	.text.CyEnableInts,"ax",%progbits
 406              		.align	2
 407              		.global	CyEnableInts
 408              		.code	16
 409              		.thumb_func
 410              		.type	CyEnableInts, %function
 411              	CyEnableInts:
 412              	.LFB18:
2094:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 45


2095:.\Generated_Source\PSoC4/CyLib.c **** 
2096:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:.\Generated_Source\PSoC4/CyLib.c **** *
2100:.\Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:.\Generated_Source\PSoC4/CyLib.c **** *
2102:.\Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:.\Generated_Source\PSoC4/CyLib.c **** *
2104:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:.\Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:.\Generated_Source\PSoC4/CyLib.c **** {
 413              		.loc 1 2106 0
 414              		.cfi_startproc
 415              	.LVL20:
2107:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 416              		.loc 1 2107 0
 417 0000 014B     		ldr	r3, .L38
 418 0002 1860     		str	r0, [r3]
2108:.\Generated_Source\PSoC4/CyLib.c **** }
 419              		.loc 1 2108 0
 420              		@ sp needed
 421 0004 7047     		bx	lr
 422              	.L39:
 423 0006 C046     		.align	2
 424              	.L38:
 425 0008 00E100E0 		.word	-536813312
 426              		.cfi_endproc
 427              	.LFE18:
 428              		.size	CyEnableInts, .-CyEnableInts
 429              		.section	.text.CyIntEnable,"ax",%progbits
 430              		.align	2
 431              		.global	CyIntEnable
 432              		.code	16
 433              		.thumb_func
 434              		.type	CyIntEnable, %function
 435              	CyIntEnable:
 436              	.LFB25:
2109:.\Generated_Source\PSoC4/CyLib.c **** 
2110:.\Generated_Source\PSoC4/CyLib.c **** 
2111:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:.\Generated_Source\PSoC4/CyLib.c **** *
2115:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:.\Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:.\Generated_Source\PSoC4/CyLib.c **** *
2118:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:.\Generated_Source\PSoC4/CyLib.c **** *
2125:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:.\Generated_Source\PSoC4/CyLib.c **** *
2127:.\Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 46


2128:.\Generated_Source\PSoC4/CyLib.c **** *
2129:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:.\Generated_Source\PSoC4/CyLib.c **** {
2132:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:.\Generated_Source\PSoC4/CyLib.c **** 
2135:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:.\Generated_Source\PSoC4/CyLib.c **** 
2137:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:.\Generated_Source\PSoC4/CyLib.c **** 
2140:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:.\Generated_Source\PSoC4/CyLib.c **** 
2143:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:.\Generated_Source\PSoC4/CyLib.c **** }
2145:.\Generated_Source\PSoC4/CyLib.c **** 
2146:.\Generated_Source\PSoC4/CyLib.c **** 
2147:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:.\Generated_Source\PSoC4/CyLib.c **** *
2151:.\Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:.\Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:.\Generated_Source\PSoC4/CyLib.c **** *
2154:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2159:.\Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:.\Generated_Source\PSoC4/CyLib.c **** *
2161:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:.\Generated_Source\PSoC4/CyLib.c **** *
2163:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:.\Generated_Source\PSoC4/CyLib.c **** {
2166:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:.\Generated_Source\PSoC4/CyLib.c **** 
2168:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:.\Generated_Source\PSoC4/CyLib.c **** 
2170:.\Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:.\Generated_Source\PSoC4/CyLib.c **** }
2172:.\Generated_Source\PSoC4/CyLib.c **** 
2173:.\Generated_Source\PSoC4/CyLib.c **** 
2174:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:.\Generated_Source\PSoC4/CyLib.c **** *
2178:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:.\Generated_Source\PSoC4/CyLib.c **** *
2180:.\Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:.\Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:.\Generated_Source\PSoC4/CyLib.c **** *
2183:.\Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 47


2185:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:.\Generated_Source\PSoC4/CyLib.c **** {
2188:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:.\Generated_Source\PSoC4/CyLib.c **** 
2191:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:.\Generated_Source\PSoC4/CyLib.c **** 
2193:.\Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:.\Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:.\Generated_Source\PSoC4/CyLib.c **** 
2196:.\Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:.\Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:.\Generated_Source\PSoC4/CyLib.c **** 
2199:.\Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2200:.\Generated_Source\PSoC4/CyLib.c **** }
2201:.\Generated_Source\PSoC4/CyLib.c **** 
2202:.\Generated_Source\PSoC4/CyLib.c **** 
2203:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:.\Generated_Source\PSoC4/CyLib.c **** *
2207:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:.\Generated_Source\PSoC4/CyLib.c **** *
2209:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:.\Generated_Source\PSoC4/CyLib.c **** *
2211:.\Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:.\Generated_Source\PSoC4/CyLib.c **** *
2213:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:.\Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:.\Generated_Source\PSoC4/CyLib.c **** {
2216:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:.\Generated_Source\PSoC4/CyLib.c **** 
2218:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:.\Generated_Source\PSoC4/CyLib.c **** 
2220:.\Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:.\Generated_Source\PSoC4/CyLib.c **** }
2222:.\Generated_Source\PSoC4/CyLib.c **** 
2223:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:.\Generated_Source\PSoC4/CyLib.c **** *
2227:.\Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:.\Generated_Source\PSoC4/CyLib.c **** *
2229:.\Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:.\Generated_Source\PSoC4/CyLib.c **** *
2232:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:.\Generated_Source\PSoC4/CyLib.c **** {
2235:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:.\Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:.\Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:.\Generated_Source\PSoC4/CyLib.c **** 
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 48


2242:.\Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:.\Generated_Source\PSoC4/CyLib.c **** 
2244:.\Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:.\Generated_Source\PSoC4/CyLib.c **** 
2246:.\Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:.\Generated_Source\PSoC4/CyLib.c **** 
2251:.\Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:.\Generated_Source\PSoC4/CyLib.c **** }
2253:.\Generated_Source\PSoC4/CyLib.c **** 
2254:.\Generated_Source\PSoC4/CyLib.c **** 
2255:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:.\Generated_Source\PSoC4/CyLib.c **** *
2259:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:.\Generated_Source\PSoC4/CyLib.c **** *
2261:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:.\Generated_Source\PSoC4/CyLib.c **** *
2263:.\Generated_Source\PSoC4/CyLib.c **** * \return
2264:.\Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:.\Generated_Source\PSoC4/CyLib.c **** *
2266:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:.\Generated_Source\PSoC4/CyLib.c **** {
2269:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:.\Generated_Source\PSoC4/CyLib.c **** 
2271:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:.\Generated_Source\PSoC4/CyLib.c **** 
2273:.\Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:.\Generated_Source\PSoC4/CyLib.c **** 
2275:.\Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:.\Generated_Source\PSoC4/CyLib.c **** }
2277:.\Generated_Source\PSoC4/CyLib.c **** 
2278:.\Generated_Source\PSoC4/CyLib.c **** 
2279:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:.\Generated_Source\PSoC4/CyLib.c **** *
2283:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:.\Generated_Source\PSoC4/CyLib.c **** *
2285:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:.\Generated_Source\PSoC4/CyLib.c **** *
2287:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:.\Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:.\Generated_Source\PSoC4/CyLib.c **** {
 437              		.loc 1 2289 0
 438              		.cfi_startproc
 439              	.LVL21:
2290:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 440              		.loc 1 2290 0
 441 0000 1F23     		mov	r3, #31
 442 0002 1840     		and	r0, r3
 443              	.LVL22:
 444 0004 1E3B     		sub	r3, r3, #30
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 49


 445 0006 8340     		lsl	r3, r3, r0
 446 0008 181C     		mov	r0, r3
 447 000a 014B     		ldr	r3, .L41
 448 000c 1860     		str	r0, [r3]
2291:.\Generated_Source\PSoC4/CyLib.c **** }
 449              		.loc 1 2291 0
 450              		@ sp needed
 451 000e 7047     		bx	lr
 452              	.L42:
 453              		.align	2
 454              	.L41:
 455 0010 00E100E0 		.word	-536813312
 456              		.cfi_endproc
 457              	.LFE25:
 458              		.size	CyIntEnable, .-CyIntEnable
 459              		.section	.text.CyIntGetState,"ax",%progbits
 460              		.align	2
 461              		.global	CyIntGetState
 462              		.code	16
 463              		.thumb_func
 464              		.type	CyIntGetState, %function
 465              	CyIntGetState:
 466              	.LFB26:
2292:.\Generated_Source\PSoC4/CyLib.c **** 
2293:.\Generated_Source\PSoC4/CyLib.c **** 
2294:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:.\Generated_Source\PSoC4/CyLib.c **** *
2298:.\Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:.\Generated_Source\PSoC4/CyLib.c **** *
2300:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:.\Generated_Source\PSoC4/CyLib.c **** *
2302:.\Generated_Source\PSoC4/CyLib.c **** * \return
2303:.\Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:.\Generated_Source\PSoC4/CyLib.c **** *
2305:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:.\Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:.\Generated_Source\PSoC4/CyLib.c **** {
 467              		.loc 1 2307 0
 468              		.cfi_startproc
 469              	.LVL23:
2308:.\Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:.\Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 470              		.loc 1 2309 0
 471 0000 044B     		ldr	r3, .L44
 472 0002 1B68     		ldr	r3, [r3]
 473 0004 1F22     		mov	r2, #31
 474 0006 1040     		and	r0, r2
 475              	.LVL24:
 476 0008 C340     		lsr	r3, r3, r0
 477 000a 181C     		mov	r0, r3
 478 000c 0123     		mov	r3, #1
 479 000e 1840     		and	r0, r3
2310:.\Generated_Source\PSoC4/CyLib.c **** }
 480              		.loc 1 2310 0
 481              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 50


 482 0010 7047     		bx	lr
 483              	.L45:
 484 0012 C046     		.align	2
 485              	.L44:
 486 0014 00E100E0 		.word	-536813312
 487              		.cfi_endproc
 488              	.LFE26:
 489              		.size	CyIntGetState, .-CyIntGetState
 490              		.section	.text.CyIntDisable,"ax",%progbits
 491              		.align	2
 492              		.global	CyIntDisable
 493              		.code	16
 494              		.thumb_func
 495              		.type	CyIntDisable, %function
 496              	CyIntDisable:
 497              	.LFB27:
2311:.\Generated_Source\PSoC4/CyLib.c **** 
2312:.\Generated_Source\PSoC4/CyLib.c **** 
2313:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:.\Generated_Source\PSoC4/CyLib.c **** *
2317:.\Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:.\Generated_Source\PSoC4/CyLib.c **** *
2319:.\Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:.\Generated_Source\PSoC4/CyLib.c **** *
2321:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:.\Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:.\Generated_Source\PSoC4/CyLib.c **** {
 498              		.loc 1 2323 0
 499              		.cfi_startproc
 500              	.LVL25:
2324:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 501              		.loc 1 2324 0
 502 0000 1F23     		mov	r3, #31
 503 0002 1840     		and	r0, r3
 504              	.LVL26:
 505 0004 1E3B     		sub	r3, r3, #30
 506 0006 8340     		lsl	r3, r3, r0
 507 0008 181C     		mov	r0, r3
 508 000a 014B     		ldr	r3, .L47
 509 000c 1860     		str	r0, [r3]
2325:.\Generated_Source\PSoC4/CyLib.c **** }
 510              		.loc 1 2325 0
 511              		@ sp needed
 512 000e 7047     		bx	lr
 513              	.L48:
 514              		.align	2
 515              	.L47:
 516 0010 80E100E0 		.word	-536813184
 517              		.cfi_endproc
 518              	.LFE27:
 519              		.size	CyIntDisable, .-CyIntDisable
 520              		.section	.text.CyIntSetPending,"ax",%progbits
 521              		.align	2
 522              		.global	CyIntSetPending
 523              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 51


 524              		.thumb_func
 525              		.type	CyIntSetPending, %function
 526              	CyIntSetPending:
 527              	.LFB28:
2326:.\Generated_Source\PSoC4/CyLib.c **** 
2327:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2330:.\Generated_Source\PSoC4/CyLib.c **** *
2331:.\Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:.\Generated_Source\PSoC4/CyLib.c **** *
2333:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:.\Generated_Source\PSoC4/CyLib.c **** *
2335:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:.\Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:.\Generated_Source\PSoC4/CyLib.c **** {
 528              		.loc 1 2337 0
 529              		.cfi_startproc
 530              	.LVL27:
2338:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 531              		.loc 1 2338 0
 532 0000 1F23     		mov	r3, #31
 533 0002 1840     		and	r0, r3
 534              	.LVL28:
 535 0004 1E3B     		sub	r3, r3, #30
 536 0006 8340     		lsl	r3, r3, r0
 537 0008 181C     		mov	r0, r3
 538 000a 014B     		ldr	r3, .L50
 539 000c 1860     		str	r0, [r3]
2339:.\Generated_Source\PSoC4/CyLib.c **** }
 540              		.loc 1 2339 0
 541              		@ sp needed
 542 000e 7047     		bx	lr
 543              	.L51:
 544              		.align	2
 545              	.L50:
 546 0010 00E200E0 		.word	-536813056
 547              		.cfi_endproc
 548              	.LFE28:
 549              		.size	CyIntSetPending, .-CyIntSetPending
 550              		.section	.text.CyIntClearPending,"ax",%progbits
 551              		.align	2
 552              		.global	CyIntClearPending
 553              		.code	16
 554              		.thumb_func
 555              		.type	CyIntClearPending, %function
 556              	CyIntClearPending:
 557              	.LFB29:
2340:.\Generated_Source\PSoC4/CyLib.c **** 
2341:.\Generated_Source\PSoC4/CyLib.c **** 
2342:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:.\Generated_Source\PSoC4/CyLib.c **** *
2346:.\Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:.\Generated_Source\PSoC4/CyLib.c **** *
2348:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 52


2349:.\Generated_Source\PSoC4/CyLib.c **** *
2350:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:.\Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:.\Generated_Source\PSoC4/CyLib.c **** {
 558              		.loc 1 2352 0
 559              		.cfi_startproc
 560              	.LVL29:
2353:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 561              		.loc 1 2353 0
 562 0000 1F23     		mov	r3, #31
 563 0002 1840     		and	r0, r3
 564              	.LVL30:
 565 0004 1E3B     		sub	r3, r3, #30
 566 0006 8340     		lsl	r3, r3, r0
 567 0008 181C     		mov	r0, r3
 568 000a 014B     		ldr	r3, .L53
 569 000c 1860     		str	r0, [r3]
2354:.\Generated_Source\PSoC4/CyLib.c **** }
 570              		.loc 1 2354 0
 571              		@ sp needed
 572 000e 7047     		bx	lr
 573              	.L54:
 574              		.align	2
 575              	.L53:
 576 0010 80E200E0 		.word	-536812928
 577              		.cfi_endproc
 578              	.LFE29:
 579              		.size	CyIntClearPending, .-CyIntClearPending
 580              		.section	.text.CyHalt,"ax",%progbits
 581              		.align	2
 582              		.global	CyHalt
 583              		.code	16
 584              		.thumb_func
 585              		.type	CyHalt, %function
 586              	CyHalt:
 587              	.LFB30:
2355:.\Generated_Source\PSoC4/CyLib.c **** 
2356:.\Generated_Source\PSoC4/CyLib.c **** 
2357:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:.\Generated_Source\PSoC4/CyLib.c **** *
2361:.\Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:.\Generated_Source\PSoC4/CyLib.c **** *
2363:.\Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:.\Generated_Source\PSoC4/CyLib.c **** *
2365:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:.\Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:.\Generated_Source\PSoC4/CyLib.c **** {
 588              		.loc 1 2367 0
 589              		.cfi_startproc
 590              	.LVL31:
2368:.\Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:.\Generated_Source\PSoC4/CyLib.c ****     {
2370:.\Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:.\Generated_Source\PSoC4/CyLib.c ****     }
2372:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 53


2373:.\Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:.\Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:.\Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 591              		.loc 1 2376 0
 592              	@ 2376 ".\Generated_Source\PSoC4\CyLib.c" 1
 593 0000 01BE     		    bkpt    1
 594              	@ 0 "" 2
2377:.\Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:.\Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:.\Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2380:.\Generated_Source\PSoC4/CyLib.c **** }
 595              		.loc 1 2380 0
 596              		.code	16
 597              		@ sp needed
 598 0002 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE30:
 601              		.size	CyHalt, .-CyHalt
 602              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 603              		.align	2
 604              		.global	CySysClkWriteEcoDiv
 605              		.code	16
 606              		.thumb_func
 607              		.type	CySysClkWriteEcoDiv, %function
 608              	CySysClkWriteEcoDiv:
 609              	.LFB11:
1102:.\Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 610              		.loc 1 1102 0
 611              		.cfi_startproc
 612              	.LVL32:
 613 0000 10B5     		push	{r4, lr}
 614              		.cfi_def_cfa_offset 8
 615              		.cfi_offset 4, -8
 616              		.cfi_offset 14, -4
 617 0002 041C     		mov	r4, r0
1105:.\Generated_Source\PSoC4/CyLib.c ****             {
 618              		.loc 1 1105 0
 619 0004 0A4B     		ldr	r3, .L59
 620 0006 1B68     		ldr	r3, [r3]
 621 0008 0722     		mov	r2, #7
 622 000a 1340     		and	r3, r2
 623 000c 022B     		cmp	r3, #2
 624 000e 0BD0     		beq	.L57
1107:.\Generated_Source\PSoC4/CyLib.c **** 
 625              		.loc 1 1107 0
 626 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 627              	.LVL33:
1109:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 628              		.loc 1 1109 0
 629 0014 0321     		mov	r1, #3
 630 0016 0C40     		and	r4, r1
 631              	.LVL34:
1110:.\Generated_Source\PSoC4/CyLib.c **** 
 632              		.loc 1 1110 0
 633 0018 064A     		ldr	r2, .L59+4
 634 001a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 54


 635 001c 8B43     		bic	r3, r1
1109:.\Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 636              		.loc 1 1109 0
 637 001e 2343     		orr	r3, r4
 638 0020 1360     		str	r3, [r2]
1112:.\Generated_Source\PSoC4/CyLib.c ****             }
 639              		.loc 1 1112 0
 640 0022 FFF7FEFF 		bl	CyExitCriticalSection
 641              	.LVL35:
 642 0026 02E0     		b	.L56
 643              	.LVL36:
 644              	.L57:
1117:.\Generated_Source\PSoC4/CyLib.c ****             }
 645              		.loc 1 1117 0 discriminator 1
 646 0028 0020     		mov	r0, #0
 647              	.LVL37:
 648 002a FFF7FEFF 		bl	CyHalt
 649              	.LVL38:
 650              	.L56:
1119:.\Generated_Source\PSoC4/CyLib.c **** 
 651              		.loc 1 1119 0
 652              		@ sp needed
 653 002e 10BD     		pop	{r4, pc}
 654              	.L60:
 655              		.align	2
 656              	.L59:
 657 0030 00010B40 		.word	1074462976
 658 0034 64F02E40 		.word	1076818020
 659              		.cfi_endproc
 660              	.LFE11:
 661              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 662              		.section	.text.CyIntSetSysVector,"ax",%progbits
 663              		.align	2
 664              		.global	CyIntSetSysVector
 665              		.code	16
 666              		.thumb_func
 667              		.type	CyIntSetSysVector, %function
 668              	CyIntSetSysVector:
 669              	.LFB19:
2131:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 670              		.loc 1 2131 0
 671              		.cfi_startproc
 672              	.LVL39:
 673 0000 38B5     		push	{r3, r4, r5, lr}
 674              		.cfi_def_cfa_offset 16
 675              		.cfi_offset 3, -16
 676              		.cfi_offset 4, -12
 677              		.cfi_offset 5, -8
 678              		.cfi_offset 14, -4
 679 0002 041C     		mov	r4, r0
 680 0004 0D1C     		mov	r5, r1
 681              	.LVL40:
2135:.\Generated_Source\PSoC4/CyLib.c **** 
 682              		.loc 1 2135 0
 683 0006 0F28     		cmp	r0, #15
 684 0008 02D9     		bls	.L62
2135:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 55


 685              		.loc 1 2135 0 is_stmt 0 discriminator 1
 686 000a 0020     		mov	r0, #0
 687              	.LVL41:
 688 000c FFF7FEFF 		bl	CyHalt
 689              	.LVL42:
 690              	.L62:
2138:.\Generated_Source\PSoC4/CyLib.c **** 
 691              		.loc 1 2138 0 is_stmt 1
 692 0010 A400     		lsl	r4, r4, #2
 693 0012 8023     		mov	r3, #128
 694 0014 9B05     		lsl	r3, r3, #22
 695 0016 9C46     		mov	ip, r3
 696 0018 6444     		add	r4, r4, ip
 697 001a 2068     		ldr	r0, [r4]
 698              	.LVL43:
2141:.\Generated_Source\PSoC4/CyLib.c **** 
 699              		.loc 1 2141 0
 700 001c 2560     		str	r5, [r4]
2144:.\Generated_Source\PSoC4/CyLib.c **** 
 701              		.loc 1 2144 0
 702              		@ sp needed
 703              	.LVL44:
 704 001e 38BD     		pop	{r3, r4, r5, pc}
 705              		.cfi_endproc
 706              	.LFE19:
 707              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 708              		.section	.text.CyIntGetSysVector,"ax",%progbits
 709              		.align	2
 710              		.global	CyIntGetSysVector
 711              		.code	16
 712              		.thumb_func
 713              		.type	CyIntGetSysVector, %function
 714              	CyIntGetSysVector:
 715              	.LFB20:
2165:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 716              		.loc 1 2165 0
 717              		.cfi_startproc
 718              	.LVL45:
 719 0000 10B5     		push	{r4, lr}
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 4, -8
 722              		.cfi_offset 14, -4
 723 0002 041E     		sub	r4, r0, #0
 724              	.LVL46:
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2168 0
 726 0004 0F2C     		cmp	r4, #15
 727 0006 02D9     		bls	.L64
2168:.\Generated_Source\PSoC4/CyLib.c **** 
 728              		.loc 1 2168 0 is_stmt 0 discriminator 1
 729 0008 0020     		mov	r0, #0
 730              	.LVL47:
 731 000a FFF7FEFF 		bl	CyHalt
 732              	.LVL48:
 733              	.L64:
2170:.\Generated_Source\PSoC4/CyLib.c **** }
 734              		.loc 1 2170 0 is_stmt 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 56


 735 000e A400     		lsl	r4, r4, #2
 736 0010 8023     		mov	r3, #128
 737 0012 9B05     		lsl	r3, r3, #22
 738 0014 9C46     		mov	ip, r3
 739 0016 6444     		add	r4, r4, ip
 740 0018 2068     		ldr	r0, [r4]
2171:.\Generated_Source\PSoC4/CyLib.c **** 
 741              		.loc 1 2171 0
 742              		@ sp needed
 743 001a 10BD     		pop	{r4, pc}
 744              		.cfi_endproc
 745              	.LFE20:
 746              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 747              		.section	.text.CyIntSetVector,"ax",%progbits
 748              		.align	2
 749              		.global	CyIntSetVector
 750              		.code	16
 751              		.thumb_func
 752              		.type	CyIntSetVector, %function
 753              	CyIntSetVector:
 754              	.LFB21:
2187:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 755              		.loc 1 2187 0
 756              		.cfi_startproc
 757              	.LVL49:
 758 0000 38B5     		push	{r3, r4, r5, lr}
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 3, -16
 761              		.cfi_offset 4, -12
 762              		.cfi_offset 5, -8
 763              		.cfi_offset 14, -4
 764 0002 041C     		mov	r4, r0
 765 0004 0D1C     		mov	r5, r1
 766              	.LVL50:
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 767              		.loc 1 2191 0
 768 0006 1F28     		cmp	r0, #31
 769 0008 02D9     		bls	.L66
2191:.\Generated_Source\PSoC4/CyLib.c **** 
 770              		.loc 1 2191 0 is_stmt 0 discriminator 1
 771 000a 0020     		mov	r0, #0
 772              	.LVL51:
 773 000c FFF7FEFF 		bl	CyHalt
 774              	.LVL52:
 775              	.L66:
2194:.\Generated_Source\PSoC4/CyLib.c **** 
 776              		.loc 1 2194 0 is_stmt 1
 777 0010 A400     		lsl	r4, r4, #2
 778 0012 034B     		ldr	r3, .L67
 779 0014 9C46     		mov	ip, r3
 780 0016 6444     		add	r4, r4, ip
 781 0018 2068     		ldr	r0, [r4]
 782              	.LVL53:
2197:.\Generated_Source\PSoC4/CyLib.c **** 
 783              		.loc 1 2197 0
 784 001a 2560     		str	r5, [r4]
2200:.\Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 57


 785              		.loc 1 2200 0
 786              		@ sp needed
 787              	.LVL54:
 788 001c 38BD     		pop	{r3, r4, r5, pc}
 789              	.L68:
 790 001e C046     		.align	2
 791              	.L67:
 792 0020 40000020 		.word	536870976
 793              		.cfi_endproc
 794              	.LFE21:
 795              		.size	CyIntSetVector, .-CyIntSetVector
 796              		.section	.text.CyIntGetVector,"ax",%progbits
 797              		.align	2
 798              		.global	CyIntGetVector
 799              		.code	16
 800              		.thumb_func
 801              		.type	CyIntGetVector, %function
 802              	CyIntGetVector:
 803              	.LFB22:
2215:.\Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 804              		.loc 1 2215 0
 805              		.cfi_startproc
 806              	.LVL55:
 807 0000 10B5     		push	{r4, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 811 0002 041E     		sub	r4, r0, #0
 812              	.LVL56:
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 813              		.loc 1 2218 0
 814 0004 1F2C     		cmp	r4, #31
 815 0006 02D9     		bls	.L70
2218:.\Generated_Source\PSoC4/CyLib.c **** 
 816              		.loc 1 2218 0 is_stmt 0 discriminator 1
 817 0008 0020     		mov	r0, #0
 818              	.LVL57:
 819 000a FFF7FEFF 		bl	CyHalt
 820              	.LVL58:
 821              	.L70:
2220:.\Generated_Source\PSoC4/CyLib.c **** }
 822              		.loc 1 2220 0 is_stmt 1
 823 000e A400     		lsl	r4, r4, #2
 824 0010 024B     		ldr	r3, .L71
 825 0012 9C46     		mov	ip, r3
 826 0014 6444     		add	r4, r4, ip
 827 0016 2068     		ldr	r0, [r4]
2221:.\Generated_Source\PSoC4/CyLib.c **** 
 828              		.loc 1 2221 0
 829              		@ sp needed
 830 0018 10BD     		pop	{r4, pc}
 831              	.L72:
 832 001a C046     		.align	2
 833              	.L71:
 834 001c 40000020 		.word	536870976
 835              		.cfi_endproc
 836              	.LFE22:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 58


 837              		.size	CyIntGetVector, .-CyIntGetVector
 838              		.section	.text.CyIntSetPriority,"ax",%progbits
 839              		.align	2
 840              		.global	CyIntSetPriority
 841              		.code	16
 842              		.thumb_func
 843              		.type	CyIntSetPriority, %function
 844              	CyIntSetPriority:
 845              	.LFB23:
2234:.\Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 846              		.loc 1 2234 0
 847              		.cfi_startproc
 848              	.LVL59:
 849 0000 70B5     		push	{r4, r5, r6, lr}
 850              		.cfi_def_cfa_offset 16
 851              		.cfi_offset 4, -16
 852              		.cfi_offset 5, -12
 853              		.cfi_offset 6, -8
 854              		.cfi_offset 14, -4
 855 0002 041C     		mov	r4, r0
 856 0004 0E1E     		sub	r6, r1, #0
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 857              		.loc 1 2239 0
 858 0006 032E     		cmp	r6, #3
 859 0008 02D9     		bls	.L74
2239:.\Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 860              		.loc 1 2239 0 is_stmt 0 discriminator 1
 861 000a 0020     		mov	r0, #0
 862              	.LVL60:
 863 000c FFF7FEFF 		bl	CyHalt
 864              	.LVL61:
 865              	.L74:
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 866              		.loc 1 2240 0 is_stmt 1
 867 0010 1F2C     		cmp	r4, #31
 868 0012 02D9     		bls	.L75
2240:.\Generated_Source\PSoC4/CyLib.c **** 
 869              		.loc 1 2240 0 is_stmt 0 discriminator 1
 870 0014 0020     		mov	r0, #0
 871 0016 FFF7FEFF 		bl	CyHalt
 872              	.LVL62:
 873              	.L75:
2242:.\Generated_Source\PSoC4/CyLib.c **** 
 874              		.loc 1 2242 0 is_stmt 1
 875 001a 0325     		mov	r5, #3
 876 001c 2540     		and	r5, r4
 877 001e ED00     		lsl	r5, r5, #3
 878 0020 0635     		add	r5, r5, #6
 879              	.LVL63:
2244:.\Generated_Source\PSoC4/CyLib.c **** 
 880              		.loc 1 2244 0
 881 0022 FFF7FEFF 		bl	CyEnterCriticalSection
 882              	.LVL64:
2246:.\Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 883              		.loc 1 2246 0
 884 0026 A408     		lsr	r4, r4, #2
 885 0028 A400     		lsl	r4, r4, #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 59


 886 002a 074B     		ldr	r3, .L76
 887 002c 9C46     		mov	ip, r3
 888 002e 6444     		add	r4, r4, ip
 889 0030 2368     		ldr	r3, [r4]
 890              	.LVL65:
2247:.\Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 891              		.loc 1 2247 0
 892 0032 0322     		mov	r2, #3
 893 0034 AA40     		lsl	r2, r2, r5
 894 0036 9343     		bic	r3, r2
 895              	.LVL66:
2248:.\Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 896              		.loc 1 2248 0
 897 0038 AE40     		lsl	r6, r6, r5
 898 003a 351C     		mov	r5, r6
 899              	.LVL67:
 900 003c 1D43     		orr	r5, r3
 901              	.LVL68:
2249:.\Generated_Source\PSoC4/CyLib.c **** 
 902              		.loc 1 2249 0
 903 003e 2560     		str	r5, [r4]
2251:.\Generated_Source\PSoC4/CyLib.c **** }
 904              		.loc 1 2251 0
 905 0040 FFF7FEFF 		bl	CyExitCriticalSection
 906              	.LVL69:
2252:.\Generated_Source\PSoC4/CyLib.c **** 
 907              		.loc 1 2252 0
 908              		@ sp needed
 909              	.LVL70:
 910 0044 70BD     		pop	{r4, r5, r6, pc}
 911              	.L77:
 912 0046 C046     		.align	2
 913              	.L76:
 914 0048 00E400E0 		.word	-536812544
 915              		.cfi_endproc
 916              	.LFE23:
 917              		.size	CyIntSetPriority, .-CyIntSetPriority
 918              		.section	.text.CyIntGetPriority,"ax",%progbits
 919              		.align	2
 920              		.global	CyIntGetPriority
 921              		.code	16
 922              		.thumb_func
 923              		.type	CyIntGetPriority, %function
 924              	CyIntGetPriority:
 925              	.LFB24:
2268:.\Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 926              		.loc 1 2268 0
 927              		.cfi_startproc
 928              	.LVL71:
 929 0000 10B5     		push	{r4, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 933 0002 041E     		sub	r4, r0, #0
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 934              		.loc 1 2271 0
 935 0004 1F2C     		cmp	r4, #31
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 60


 936 0006 02D9     		bls	.L79
2271:.\Generated_Source\PSoC4/CyLib.c **** 
 937              		.loc 1 2271 0 is_stmt 0 discriminator 1
 938 0008 0020     		mov	r0, #0
 939              	.LVL72:
 940 000a FFF7FEFF 		bl	CyHalt
 941              	.LVL73:
 942              	.L79:
2273:.\Generated_Source\PSoC4/CyLib.c **** 
 943              		.loc 1 2273 0 is_stmt 1
 944 000e A308     		lsr	r3, r4, #2
 945 0010 9B00     		lsl	r3, r3, #2
 946 0012 054A     		ldr	r2, .L80
 947 0014 9446     		mov	ip, r2
 948 0016 6344     		add	r3, r3, ip
 949 0018 1868     		ldr	r0, [r3]
 950 001a 0323     		mov	r3, #3
 951 001c 1C40     		and	r4, r3
 952 001e E400     		lsl	r4, r4, #3
 953 0020 0634     		add	r4, r4, #6
 954 0022 E040     		lsr	r0, r0, r4
 955              	.LVL74:
2275:.\Generated_Source\PSoC4/CyLib.c **** }
 956              		.loc 1 2275 0
 957 0024 1840     		and	r0, r3
 958              	.LVL75:
2276:.\Generated_Source\PSoC4/CyLib.c **** 
 959              		.loc 1 2276 0
 960              		@ sp needed
 961 0026 10BD     		pop	{r4, pc}
 962              	.L81:
 963              		.align	2
 964              	.L80:
 965 0028 00E400E0 		.word	-536812544
 966              		.cfi_endproc
 967              	.LFE24:
 968              		.size	CyIntGetPriority, .-CyIntGetPriority
 969              		.section	.text.CySoftwareReset,"ax",%progbits
 970              		.align	2
 971              		.global	CySoftwareReset
 972              		.code	16
 973              		.thumb_func
 974              		.type	CySoftwareReset, %function
 975              	CySoftwareReset:
 976              	.LFB31:
2381:.\Generated_Source\PSoC4/CyLib.c **** 
2382:.\Generated_Source\PSoC4/CyLib.c **** 
2383:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:.\Generated_Source\PSoC4/CyLib.c **** *
2387:.\Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:.\Generated_Source\PSoC4/CyLib.c **** *
2389:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:.\Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:.\Generated_Source\PSoC4/CyLib.c **** {
 977              		.loc 1 2391 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 61


 978              		.cfi_startproc
2392:.\Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:.\Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:.\Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:.\Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 979              		.loc 1 2396 0
 980 0000 034A     		ldr	r2, .L83
 981 0002 1368     		ldr	r3, [r2]
 982 0004 1B04     		lsl	r3, r3, #16
 983 0006 1B0C     		lsr	r3, r3, #16
2397:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 984              		.loc 1 2397 0
 985 0008 0249     		ldr	r1, .L83+4
 986 000a 0B43     		orr	r3, r1
2396:.\Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 987              		.loc 1 2396 0
 988 000c 1360     		str	r3, [r2]
2398:.\Generated_Source\PSoC4/CyLib.c **** }
 989              		.loc 1 2398 0
 990              		@ sp needed
 991 000e 7047     		bx	lr
 992              	.L84:
 993              		.align	2
 994              	.L83:
 995 0010 0CED00E0 		.word	-536810228
 996 0014 0400FA05 		.word	100270084
 997              		.cfi_endproc
 998              	.LFE31:
 999              		.size	CySoftwareReset, .-CySoftwareReset
 1000              		.section	.text.CyDelay,"ax",%progbits
 1001              		.align	2
 1002              		.global	CyDelay
 1003              		.code	16
 1004              		.thumb_func
 1005              		.type	CyDelay, %function
 1006              	CyDelay:
 1007              	.LFB32:
2399:.\Generated_Source\PSoC4/CyLib.c **** 
2400:.\Generated_Source\PSoC4/CyLib.c **** 
2401:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:.\Generated_Source\PSoC4/CyLib.c **** *
2405:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:.\Generated_Source\PSoC4/CyLib.c **** *
2407:.\Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:.\Generated_Source\PSoC4/CyLib.c **** *
2409:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:.\Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:.\Generated_Source\PSoC4/CyLib.c **** {
 1008              		.loc 1 2411 0
 1009              		.cfi_startproc
 1010              	.LVL76:
 1011 0000 10B5     		push	{r4, lr}
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 4, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 62


 1014              		.cfi_offset 14, -4
 1015 0002 041C     		mov	r4, r0
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1016              		.loc 1 2412 0
 1017 0004 06E0     		b	.L86
 1018              	.LVL77:
 1019              	.L87:
2413:.\Generated_Source\PSoC4/CyLib.c ****     {
2414:.\Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:.\Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:.\Generated_Source\PSoC4/CyLib.c ****          */
2417:.\Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1020              		.loc 1 2417 0
 1021 0006 084B     		ldr	r3, .L88
 1022 0008 1868     		ldr	r0, [r3]
 1023 000a FFF7FEFF 		bl	CyDelayCycles
 1024              	.LVL78:
2418:.\Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1025              		.loc 1 2418 0
 1026 000e 074B     		ldr	r3, .L88+4
 1027 0010 9C46     		mov	ip, r3
 1028 0012 6444     		add	r4, r4, ip
 1029              	.LVL79:
 1030              	.L86:
2412:.\Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1031              		.loc 1 2412 0
 1032 0014 8023     		mov	r3, #128
 1033 0016 1B02     		lsl	r3, r3, #8
 1034 0018 9C42     		cmp	r4, r3
 1035 001a F4D8     		bhi	.L87
2419:.\Generated_Source\PSoC4/CyLib.c ****     }
2420:.\Generated_Source\PSoC4/CyLib.c **** 
2421:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1036              		.loc 1 2421 0
 1037 001c 024B     		ldr	r3, .L88
 1038 001e 5868     		ldr	r0, [r3, #4]
 1039 0020 6043     		mul	r0, r4
 1040 0022 FFF7FEFF 		bl	CyDelayCycles
 1041              	.LVL80:
2422:.\Generated_Source\PSoC4/CyLib.c **** }
 1042              		.loc 1 2422 0
 1043              		@ sp needed
 1044              	.LVL81:
 1045 0026 10BD     		pop	{r4, pc}
 1046              	.L89:
 1047              		.align	2
 1048              	.L88:
 1049 0028 00000000 		.word	.LANCHOR0
 1050 002c 0080FFFF 		.word	-32768
 1051              		.cfi_endproc
 1052              	.LFE32:
 1053              		.size	CyDelay, .-CyDelay
 1054              		.section	.text.CyDelayUs,"ax",%progbits
 1055              		.align	2
 1056              		.global	CyDelayUs
 1057              		.code	16
 1058              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 63


 1059              		.type	CyDelayUs, %function
 1060              	CyDelayUs:
 1061              	.LFB33:
2423:.\Generated_Source\PSoC4/CyLib.c **** 
2424:.\Generated_Source\PSoC4/CyLib.c **** 
2425:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:.\Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:.\Generated_Source\PSoC4/CyLib.c **** *
2430:.\Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:.\Generated_Source\PSoC4/CyLib.c **** *
2432:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:.\Generated_Source\PSoC4/CyLib.c **** {
 1062              		.loc 1 2434 0
 1063              		.cfi_startproc
 1064              	.LVL82:
 1065 0000 08B5     		push	{r3, lr}
 1066              		.cfi_def_cfa_offset 8
 1067              		.cfi_offset 3, -8
 1068              		.cfi_offset 14, -4
2435:.\Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1069              		.loc 1 2435 0
 1070 0002 034B     		ldr	r3, .L91
 1071 0004 1B7A     		ldrb	r3, [r3, #8]
 1072 0006 5843     		mul	r0, r3
 1073              	.LVL83:
 1074 0008 FFF7FEFF 		bl	CyDelayCycles
 1075              	.LVL84:
2436:.\Generated_Source\PSoC4/CyLib.c **** }
 1076              		.loc 1 2436 0
 1077              		@ sp needed
 1078 000c 08BD     		pop	{r3, pc}
 1079              	.L92:
 1080 000e C046     		.align	2
 1081              	.L91:
 1082 0010 00000000 		.word	.LANCHOR0
 1083              		.cfi_endproc
 1084              	.LFE33:
 1085              		.size	CyDelayUs, .-CyDelayUs
 1086              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1087              		.align	2
 1088              		.global	CySysClkWriteImoFreq
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	CySysClkWriteImoFreq, %function
 1092              	CySysClkWriteImoFreq:
 1093              	.LFB7:
 577:.\Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1094              		.loc 1 577 0
 1095              		.cfi_startproc
 1096              	.LVL85:
 1097 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1098              		.cfi_def_cfa_offset 20
 1099              		.cfi_offset 4, -20
 1100              		.cfi_offset 5, -16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 64


 1101              		.cfi_offset 6, -12
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 5746     		mov	r7, r10
 1105 0004 4E46     		mov	r6, r9
 1106 0006 C0B4     		push	{r6, r7}
 1107              		.cfi_def_cfa_offset 28
 1108              		.cfi_offset 9, -28
 1109              		.cfi_offset 10, -24
 1110 0008 83B0     		sub	sp, sp, #12
 1111              		.cfi_def_cfa_offset 40
 1112 000a 041C     		mov	r4, r0
 600:.\Generated_Source\PSoC4/CyLib.c **** 
 1113              		.loc 1 600 0
 1114 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1115              	.LVL86:
 1116 0010 0190     		str	r0, [sp, #4]
 1117              	.LVL87:
 650:.\Generated_Source\PSoC4/CyLib.c ****         {
 1118              		.loc 1 650 0
 1119 0012 E71E     		sub	r7, r4, #3
 1120 0014 2D2F     		cmp	r7, #45
 1121 0016 74D8     		bhi	.L94
 652:.\Generated_Source\PSoC4/CyLib.c ****             {
 1122              		.loc 1 652 0
 1123 0018 3F4B     		ldr	r3, .L104
 1124 001a 1B78     		ldrb	r3, [r3]
 1125 001c DBB2     		uxtb	r3, r3
 1126 001e A342     		cmp	r3, r4
 1127 0020 08D3     		bcc	.L95
 654:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1128              		.loc 1 654 0
 1129 0022 3E4B     		ldr	r3, .L104+4
 1130 0024 1B78     		ldrb	r3, [r3]
 1131 0026 DBB2     		uxtb	r3, r3
 1132 0028 9A46     		mov	r10, r3
 1133              	.LVL88:
 655:.\Generated_Source\PSoC4/CyLib.c ****             }
 1134              		.loc 1 655 0
 1135 002a 3D4B     		ldr	r3, .L104+8
 1136 002c 1B78     		ldrb	r3, [r3]
 1137 002e DBB2     		uxtb	r3, r3
 1138 0030 9946     		mov	r9, r3
 1139              	.LVL89:
 1140 0032 31E0     		b	.L96
 1141              	.LVL90:
 1142              	.L95:
 657:.\Generated_Source\PSoC4/CyLib.c ****             {
 1143              		.loc 1 657 0
 1144 0034 3B4B     		ldr	r3, .L104+12
 1145 0036 1B78     		ldrb	r3, [r3]
 1146 0038 DBB2     		uxtb	r3, r3
 1147 003a A342     		cmp	r3, r4
 1148 003c 08D3     		bcc	.L97
 659:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1149              		.loc 1 659 0
 1150 003e 3A4B     		ldr	r3, .L104+16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 65


 1151 0040 1B78     		ldrb	r3, [r3]
 1152 0042 DBB2     		uxtb	r3, r3
 1153 0044 9A46     		mov	r10, r3
 1154              	.LVL91:
 660:.\Generated_Source\PSoC4/CyLib.c ****             }
 1155              		.loc 1 660 0
 1156 0046 394B     		ldr	r3, .L104+20
 1157 0048 1B78     		ldrb	r3, [r3]
 1158 004a DBB2     		uxtb	r3, r3
 1159 004c 9946     		mov	r9, r3
 1160              	.LVL92:
 1161 004e 23E0     		b	.L96
 1162              	.LVL93:
 1163              	.L97:
 662:.\Generated_Source\PSoC4/CyLib.c ****             {
 1164              		.loc 1 662 0
 1165 0050 374B     		ldr	r3, .L104+24
 1166 0052 1B78     		ldrb	r3, [r3]
 1167 0054 DBB2     		uxtb	r3, r3
 1168 0056 A342     		cmp	r3, r4
 1169 0058 08D3     		bcc	.L98
 664:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1170              		.loc 1 664 0
 1171 005a 364B     		ldr	r3, .L104+28
 1172 005c 1B78     		ldrb	r3, [r3]
 1173 005e DBB2     		uxtb	r3, r3
 1174 0060 9A46     		mov	r10, r3
 1175              	.LVL94:
 665:.\Generated_Source\PSoC4/CyLib.c ****             }
 1176              		.loc 1 665 0
 1177 0062 354B     		ldr	r3, .L104+32
 1178 0064 1B78     		ldrb	r3, [r3]
 1179 0066 DBB2     		uxtb	r3, r3
 1180 0068 9946     		mov	r9, r3
 1181              	.LVL95:
 1182 006a 15E0     		b	.L96
 1183              	.LVL96:
 1184              	.L98:
 667:.\Generated_Source\PSoC4/CyLib.c ****             {
 1185              		.loc 1 667 0
 1186 006c 334B     		ldr	r3, .L104+36
 1187 006e 1B78     		ldrb	r3, [r3]
 1188 0070 DBB2     		uxtb	r3, r3
 1189 0072 A342     		cmp	r3, r4
 1190 0074 08D3     		bcc	.L99
 669:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1191              		.loc 1 669 0
 1192 0076 324B     		ldr	r3, .L104+40
 1193 0078 1B78     		ldrb	r3, [r3]
 1194 007a DBB2     		uxtb	r3, r3
 1195 007c 9A46     		mov	r10, r3
 1196              	.LVL97:
 670:.\Generated_Source\PSoC4/CyLib.c ****             }
 1197              		.loc 1 670 0
 1198 007e 314B     		ldr	r3, .L104+44
 1199 0080 1B78     		ldrb	r3, [r3]
 1200 0082 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 66


 1201 0084 9946     		mov	r9, r3
 1202              	.LVL98:
 1203 0086 07E0     		b	.L96
 1204              	.LVL99:
 1205              	.L99:
 674:.\Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1206              		.loc 1 674 0
 1207 0088 2F4B     		ldr	r3, .L104+48
 1208 008a 1B78     		ldrb	r3, [r3]
 1209 008c DBB2     		uxtb	r3, r3
 1210 008e 9A46     		mov	r10, r3
 1211              	.LVL100:
 675:.\Generated_Source\PSoC4/CyLib.c ****             }
 1212              		.loc 1 675 0
 1213 0090 2E4B     		ldr	r3, .L104+52
 1214 0092 1B78     		ldrb	r3, [r3]
 1215 0094 DBB2     		uxtb	r3, r3
 1216 0096 9946     		mov	r9, r3
 1217              	.LVL101:
 1218              	.L96:
 679:.\Generated_Source\PSoC4/CyLib.c **** 
 1219              		.loc 1 679 0
 1220 0098 2D4B     		ldr	r3, .L104+56
 1221 009a DE5D     		ldrb	r6, [r3, r7]
 1222              	.LVL102:
 691:.\Generated_Source\PSoC4/CyLib.c ****             {
 1223              		.loc 1 691 0
 1224 009c 2F2E     		cmp	r6, #47
 1225 009e 09D9     		bls	.L100
 691:.\Generated_Source\PSoC4/CyLib.c ****             {
 1226              		.loc 1 691 0 is_stmt 0 discriminator 1
 1227 00a0 2A2C     		cmp	r4, #42
 1228 00a2 07D9     		bls	.L100
 694:.\Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1229              		.loc 1 694 0 is_stmt 1
 1230 00a4 1922     		mov	r2, #25
 1231 00a6 2B4B     		ldr	r3, .L104+60
 1232 00a8 1A60     		str	r2, [r3]
 1233              	.LVL103:
 697:.\Generated_Source\PSoC4/CyLib.c **** 
 1234              		.loc 1 697 0
 1235 00aa 0520     		mov	r0, #5
 1236 00ac FFF7FEFF 		bl	CyDelayCycles
 1237              	.LVL104:
 699:.\Generated_Source\PSoC4/CyLib.c ****             }
 1238              		.loc 1 699 0
 1239 00b0 1925     		mov	r5, #25
 1240 00b2 03E0     		b	.L101
 1241              	.LVL105:
 1242              	.L100:
 703:.\Generated_Source\PSoC4/CyLib.c ****             }
 1243              		.loc 1 703 0
 1244 00b4 274B     		ldr	r3, .L104+60
 1245 00b6 1D68     		ldr	r5, [r3]
 1246 00b8 3F23     		mov	r3, #63
 1247 00ba 1D40     		and	r5, r3
 1248              	.LVL106:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 67


 1249              	.L101:
 715:.\Generated_Source\PSoC4/CyLib.c ****             {
 1250              		.loc 1 715 0
 1251 00bc AE42     		cmp	r6, r5
 1252 00be 06D2     		bcs	.L102
 718:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1253              		.loc 1 718 0
 1254 00c0 234B     		ldr	r3, .L104+56
 1255 00c2 DA5D     		ldrb	r2, [r3, r7]
 1256 00c4 234B     		ldr	r3, .L104+60
 1257 00c6 1A60     		str	r2, [r3]
 719:.\Generated_Source\PSoC4/CyLib.c ****             }
 1258              		.loc 1 719 0
 1259 00c8 0520     		mov	r0, #5
 1260 00ca FFF7FEFF 		bl	CyDelayCycles
 1261              	.LVL107:
 1262              	.L102:
 738:.\Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1263              		.loc 1 738 0
 1264 00ce 1F4B     		ldr	r3, .L104+52
 1265 00d0 9C46     		mov	ip, r3
 1266 00d2 6444     		add	r4, r4, ip
 1267              	.LVL108:
 1268 00d4 2378     		ldrb	r3, [r4]
 1269 00d6 DBB2     		uxtb	r3, r3
 1270              	.LVL109:
 742:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1271              		.loc 1 742 0
 1272 00d8 1F4A     		ldr	r2, .L104+64
 1273 00da 1360     		str	r3, [r2]
 743:.\Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1274              		.loc 1 743 0
 1275 00dc 1F4B     		ldr	r3, .L104+68
 1276              	.LVL110:
 1277 00de 5246     		mov	r2, r10
 1278              	.LVL111:
 1279 00e0 1A60     		str	r2, [r3]
 1280              	.LVL112:
 744:.\Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1281              		.loc 1 744 0
 1282 00e2 1F4B     		ldr	r3, .L104+72
 1283 00e4 4A46     		mov	r2, r9
 1284 00e6 1A60     		str	r2, [r3]
 745:.\Generated_Source\PSoC4/CyLib.c **** 
 1285              		.loc 1 745 0
 1286 00e8 0520     		mov	r0, #5
 1287 00ea FFF7FEFF 		bl	CyDelayUs
 1288              	.LVL113:
 747:.\Generated_Source\PSoC4/CyLib.c ****             {
 1289              		.loc 1 747 0
 1290 00ee AE42     		cmp	r6, r5
 1291 00f0 0AD9     		bls	.L103
 750:.\Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1292              		.loc 1 750 0
 1293 00f2 174B     		ldr	r3, .L104+56
 1294 00f4 DA5D     		ldrb	r2, [r3, r7]
 1295 00f6 174B     		ldr	r3, .L104+60
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 68


 1296 00f8 1A60     		str	r2, [r3]
 751:.\Generated_Source\PSoC4/CyLib.c ****             }
 1297              		.loc 1 751 0
 1298 00fa 0520     		mov	r0, #5
 1299 00fc FFF7FEFF 		bl	CyDelayCycles
 1300              	.LVL114:
 1301 0100 02E0     		b	.L103
 1302              	.LVL115:
 1303              	.L94:
 757:.\Generated_Source\PSoC4/CyLib.c ****         }
 1304              		.loc 1 757 0 discriminator 1
 1305 0102 0020     		mov	r0, #0
 1306 0104 FFF7FEFF 		bl	CyHalt
 1307              	.LVL116:
 1308              	.L103:
 776:.\Generated_Source\PSoC4/CyLib.c ****     }
 1309              		.loc 1 776 0
 1310 0108 0198     		ldr	r0, [sp, #4]
 1311 010a FFF7FEFF 		bl	CyExitCriticalSection
 1312              	.LVL117:
 777:.\Generated_Source\PSoC4/CyLib.c **** 
 1313              		.loc 1 777 0
 1314 010e 03B0     		add	sp, sp, #12
 1315              		@ sp needed
 1316              	.LVL118:
 1317 0110 0CBC     		pop	{r2, r3}
 1318 0112 9146     		mov	r9, r2
 1319 0114 9A46     		mov	r10, r3
 1320 0116 F0BD     		pop	{r4, r5, r6, r7, pc}
 1321              	.L105:
 1322              		.align	2
 1323              	.L104:
 1324 0118 40F3FF0F 		.word	268432192
 1325 011c 41F3FF0F 		.word	268432193
 1326 0120 42F3FF0F 		.word	268432194
 1327 0124 43F3FF0F 		.word	268432195
 1328 0128 44F3FF0F 		.word	268432196
 1329 012c 45F3FF0F 		.word	268432197
 1330 0130 46F3FF0F 		.word	268432198
 1331 0134 47F3FF0F 		.word	268432199
 1332 0138 48F3FF0F 		.word	268432200
 1333 013c 49F3FF0F 		.word	268432201
 1334 0140 4AF3FF0F 		.word	268432202
 1335 0144 4BF3FF0F 		.word	268432203
 1336 0148 4CF3FF0F 		.word	268432204
 1337 014c 4DF3FF0F 		.word	268432205
 1338 0150 00000000 		.word	.LANCHOR1
 1339 0154 2CFF0B40 		.word	1074528044
 1340 0158 28FF0B40 		.word	1074528040
 1341 015c 1CFF0B40 		.word	1074528028
 1342 0160 20FF0B40 		.word	1074528032
 1343              		.cfi_endproc
 1344              	.LFE7:
 1345              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1346              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1347              		.align	2
 1348              		.global	CySysClkEcoStart
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 69


 1349              		.code	16
 1350              		.thumb_func
 1351              		.type	CySysClkEcoStart, %function
 1352              	CySysClkEcoStart:
 1353              	.LFB8:
 979:.\Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1354              		.loc 1 979 0
 1355              		.cfi_startproc
 1356              	.LVL119:
 1357 0000 10B5     		push	{r4, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 4, -8
 1360              		.cfi_offset 14, -4
 1361 0002 041C     		mov	r4, r0
 1362              	.LVL120:
 984:.\Generated_Source\PSoC4/CyLib.c **** 
 1363              		.loc 1 984 0
 1364 0004 0F4A     		ldr	r2, .L111
 1365 0006 1168     		ldr	r1, [r2]
 1366 0008 0123     		mov	r3, #1
 1367 000a 0B43     		orr	r3, r1
 1368 000c 1360     		str	r3, [r2]
 987:.\Generated_Source\PSoC4/CyLib.c **** 
 1369              		.loc 1 987 0
 1370 000e 0E4A     		ldr	r2, .L111+4
 1371 0010 0E4B     		ldr	r3, .L111+8
 1372 0012 1A60     		str	r2, [r3]
 990:.\Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 1373              		.loc 1 990 0
 1374 0014 0E4A     		ldr	r2, .L111+12
 1375 0016 1368     		ldr	r3, [r2]
 1376 0018 8021     		mov	r1, #128
 1377 001a 0902     		lsl	r1, r1, #8
 1378 001c 0B43     		orr	r3, r1
 1379 001e 1360     		str	r3, [r2]
 997:.\Generated_Source\PSoC4/CyLib.c ****         {
 1380              		.loc 1 997 0
 1381 0020 0028     		cmp	r0, #0
 1382 0022 09D1     		bne	.L107
 980:.\Generated_Source\PSoC4/CyLib.c **** 
 1383              		.loc 1 980 0
 1384 0024 0020     		mov	r0, #0
 1385              	.LVL121:
 1386 0026 0CE0     		b	.L108
 1387              	.L109:
1003:.\Generated_Source\PSoC4/CyLib.c **** 
 1388              		.loc 1 1003 0
 1389 0028 0120     		mov	r0, #1
 1390 002a FFF7FEFF 		bl	CyDelayUs
 1391              	.LVL122:
1005:.\Generated_Source\PSoC4/CyLib.c ****                 {
 1392              		.loc 1 1005 0
 1393 002e FFF7FEFF 		bl	CySysClkEcoReadStatus
 1394              	.LVL123:
 1395 0032 0028     		cmp	r0, #0
 1396 0034 04D1     		bne	.L110
1001:.\Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 70


 1397              		.loc 1 1001 0
 1398 0036 013C     		sub	r4, r4, #1
 1399              	.LVL124:
 1400              	.L107:
1001:.\Generated_Source\PSoC4/CyLib.c ****             {
 1401              		.loc 1 1001 0 is_stmt 0 discriminator 1
 1402 0038 002C     		cmp	r4, #0
 1403 003a F5D1     		bne	.L109
 999:.\Generated_Source\PSoC4/CyLib.c **** 
 1404              		.loc 1 999 0 is_stmt 1
 1405 003c 1020     		mov	r0, #16
 1406 003e 00E0     		b	.L108
 1407              	.L110:
1007:.\Generated_Source\PSoC4/CyLib.c ****                     break;
 1408              		.loc 1 1007 0
 1409 0040 0020     		mov	r0, #0
 1410              	.L108:
 1411              	.LVL125:
1015:.\Generated_Source\PSoC4/CyLib.c **** 
 1412              		.loc 1 1015 0
 1413              		@ sp needed
 1414              	.LVL126:
 1415 0042 10BD     		pop	{r4, pc}
 1416              	.L112:
 1417              		.align	2
 1418              	.L111:
 1419 0044 60F02E40 		.word	1076818016
 1420 0048 02200000 		.word	8194
 1421 004c 78002E40 		.word	1076756600
 1422 0050 10002E40 		.word	1076756496
 1423              		.cfi_endproc
 1424              	.LFE8:
 1425              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1426              		.section	.text.CySysLvdEnable,"ax",%progbits
 1427              		.align	2
 1428              		.global	CySysLvdEnable
 1429              		.code	16
 1430              		.thumb_func
 1431              		.type	CySysLvdEnable, %function
 1432              	CySysLvdEnable:
 1433              	.LFB12:
1970:.\Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1434              		.loc 1 1970 0
 1435              		.cfi_startproc
 1436              	.LVL127:
 1437 0000 38B5     		push	{r3, r4, r5, lr}
 1438              		.cfi_def_cfa_offset 16
 1439              		.cfi_offset 3, -16
 1440              		.cfi_offset 4, -12
 1441              		.cfi_offset 5, -8
 1442              		.cfi_offset 14, -4
 1443 0002 031C     		mov	r3, r0
1972:.\Generated_Source\PSoC4/CyLib.c **** 
 1444              		.loc 1 1972 0
 1445 0004 0D4C     		ldr	r4, .L114
 1446 0006 2268     		ldr	r2, [r4]
 1447 0008 0225     		mov	r5, #2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 71


 1448 000a AA43     		bic	r2, r5
 1449 000c 2260     		str	r2, [r4]
1975:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1450              		.loc 1 1975 0
 1451 000e 0C4A     		ldr	r2, .L114+4
 1452 0010 1168     		ldr	r1, [r2]
 1453 0012 1E20     		mov	r0, #30
 1454              	.LVL128:
 1455 0014 8143     		bic	r1, r0
1976:.\Generated_Source\PSoC4/CyLib.c **** 
 1456              		.loc 1 1976 0
 1457 0016 5B00     		lsl	r3, r3, #1
 1458              	.LVL129:
 1459 0018 1840     		and	r0, r3
1975:.\Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1460              		.loc 1 1975 0
 1461 001a 0843     		orr	r0, r1
 1462 001c 1060     		str	r0, [r2]
1979:.\Generated_Source\PSoC4/CyLib.c **** 
 1463              		.loc 1 1979 0
 1464 001e 1168     		ldr	r1, [r2]
 1465 0020 0123     		mov	r3, #1
 1466 0022 0B43     		orr	r3, r1
 1467 0024 1360     		str	r3, [r2]
1982:.\Generated_Source\PSoC4/CyLib.c **** 
 1468              		.loc 1 1982 0
 1469 0026 FA20     		mov	r0, #250
 1470 0028 8000     		lsl	r0, r0, #2
 1471 002a FFF7FEFF 		bl	CyDelayUs
 1472              	.LVL130:
1985:.\Generated_Source\PSoC4/CyLib.c **** 
 1473              		.loc 1 1985 0
 1474 002e FFF7FEFF 		bl	CySysLvdClearInterrupt
 1475              	.LVL131:
1988:.\Generated_Source\PSoC4/CyLib.c ****     }
 1476              		.loc 1 1988 0
 1477 0032 2368     		ldr	r3, [r4]
 1478 0034 1D43     		orr	r5, r3
 1479 0036 2560     		str	r5, [r4]
1989:.\Generated_Source\PSoC4/CyLib.c **** 
 1480              		.loc 1 1989 0
 1481              		@ sp needed
 1482 0038 38BD     		pop	{r3, r4, r5, pc}
 1483              	.L115:
 1484 003a C046     		.align	2
 1485              	.L114:
 1486 003c 08000B40 		.word	1074462728
 1487 0040 18000B40 		.word	1074462744
 1488              		.cfi_endproc
 1489              	.LFE12:
 1490              		.size	CySysLvdEnable, .-CySysLvdEnable
 1491              		.global	__aeabi_uidiv
 1492              		.section	.text.CyDelayFreq,"ax",%progbits
 1493              		.align	2
 1494              		.global	CyDelayFreq
 1495              		.code	16
 1496              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 72


 1497              		.type	CyDelayFreq, %function
 1498              	CyDelayFreq:
 1499              	.LFB34:
2437:.\Generated_Source\PSoC4/CyLib.c **** 
2438:.\Generated_Source\PSoC4/CyLib.c **** 
2439:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:.\Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:.\Generated_Source\PSoC4/CyLib.c **** *
2444:.\Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:.\Generated_Source\PSoC4/CyLib.c **** *
2446:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:.\Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:.\Generated_Source\PSoC4/CyLib.c **** {
 1500              		.loc 1 2448 0
 1501              		.cfi_startproc
 1502              	.LVL132:
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
2449:.\Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1509              		.loc 1 2449 0
 1510 0002 0028     		cmp	r0, #0
 1511 0004 02D0     		beq	.L117
2450:.\Generated_Source\PSoC4/CyLib.c ****     {
2451:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1512              		.loc 1 2451 0
 1513 0006 0C4B     		ldr	r3, .L119
 1514 0008 D860     		str	r0, [r3, #12]
 1515 000a 02E0     		b	.L118
 1516              	.L117:
2452:.\Generated_Source\PSoC4/CyLib.c ****     }
2453:.\Generated_Source\PSoC4/CyLib.c ****     else
2454:.\Generated_Source\PSoC4/CyLib.c ****     {
2455:.\Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1517              		.loc 1 2455 0
 1518 000c 0B4A     		ldr	r2, .L119+4
 1519 000e 0A4B     		ldr	r3, .L119
 1520 0010 DA60     		str	r2, [r3, #12]
 1521              	.L118:
2456:.\Generated_Source\PSoC4/CyLib.c ****     }
2457:.\Generated_Source\PSoC4/CyLib.c **** 
2458:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1522              		.loc 1 2458 0
 1523 0012 094C     		ldr	r4, .L119
 1524 0014 E568     		ldr	r5, [r4, #12]
 1525 0016 0A4B     		ldr	r3, .L119+8
 1526 0018 E818     		add	r0, r5, r3
 1527              	.LVL133:
 1528 001a 0A49     		ldr	r1, .L119+12
 1529 001c FFF7FEFF 		bl	__aeabi_uidiv
 1530              	.LVL134:
 1531 0020 2072     		strb	r0, [r4, #8]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 73


2459:.\Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1532              		.loc 1 2459 0
 1533 0022 094B     		ldr	r3, .L119+16
 1534 0024 E818     		add	r0, r5, r3
 1535 0026 FA21     		mov	r1, #250
 1536 0028 8900     		lsl	r1, r1, #2
 1537 002a FFF7FEFF 		bl	__aeabi_uidiv
 1538              	.LVL135:
 1539 002e 6060     		str	r0, [r4, #4]
2460:.\Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1540              		.loc 1 2460 0
 1541 0030 C003     		lsl	r0, r0, #15
 1542 0032 2060     		str	r0, [r4]
2461:.\Generated_Source\PSoC4/CyLib.c **** }
 1543              		.loc 1 2461 0
 1544              		@ sp needed
 1545 0034 38BD     		pop	{r3, r4, r5, pc}
 1546              	.L120:
 1547 0036 C046     		.align	2
 1548              	.L119:
 1549 0038 00000000 		.word	.LANCHOR0
 1550 003c 00366E01 		.word	24000000
 1551 0040 3F420F00 		.word	999999
 1552 0044 40420F00 		.word	1000000
 1553 0048 E7030000 		.word	999
 1554              		.cfi_endproc
 1555              	.LFE34:
 1556              		.size	CyDelayFreq, .-CyDelayFreq
 1557              		.section	.text.CySysTickStop,"ax",%progbits
 1558              		.align	2
 1559              		.global	CySysTickStop
 1560              		.code	16
 1561              		.thumb_func
 1562              		.type	CySysTickStop, %function
 1563              	CySysTickStop:
 1564              	.LFB38:
2462:.\Generated_Source\PSoC4/CyLib.c **** 
2463:.\Generated_Source\PSoC4/CyLib.c **** 
2464:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:.\Generated_Source\PSoC4/CyLib.c **** *
2468:.\Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:.\Generated_Source\PSoC4/CyLib.c **** *
2471:.\Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:.\Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:.\Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:.\Generated_Source\PSoC4/CyLib.c **** *
2475:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:.\Generated_Source\PSoC4/CyLib.c **** *
2478:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:.\Generated_Source\PSoC4/CyLib.c **** {
2481:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:.\Generated_Source\PSoC4/CyLib.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 74


2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2485:.\Generated_Source\PSoC4/CyLib.c ****     }
2486:.\Generated_Source\PSoC4/CyLib.c **** 
2487:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:.\Generated_Source\PSoC4/CyLib.c **** }
2489:.\Generated_Source\PSoC4/CyLib.c **** 
2490:.\Generated_Source\PSoC4/CyLib.c **** 
2491:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:.\Generated_Source\PSoC4/CyLib.c **** *
2495:.\Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:.\Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:.\Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:.\Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:.\Generated_Source\PSoC4/CyLib.c **** *
2500:.\Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:.\Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:.\Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:.\Generated_Source\PSoC4/CyLib.c **** *
2504:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:.\Generated_Source\PSoC4/CyLib.c **** *
2507:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:.\Generated_Source\PSoC4/CyLib.c **** {
2510:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2511:.\Generated_Source\PSoC4/CyLib.c **** 
2512:.\Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:.\Generated_Source\PSoC4/CyLib.c ****     {
2514:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
2515:.\Generated_Source\PSoC4/CyLib.c ****     }
2516:.\Generated_Source\PSoC4/CyLib.c **** 
2517:.\Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:.\Generated_Source\PSoC4/CyLib.c **** 
2519:.\Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:.\Generated_Source\PSoC4/CyLib.c **** 
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:.\Generated_Source\PSoC4/CyLib.c **** }
2527:.\Generated_Source\PSoC4/CyLib.c **** 
2528:.\Generated_Source\PSoC4/CyLib.c **** 
2529:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:.\Generated_Source\PSoC4/CyLib.c **** *
2533:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:.\Generated_Source\PSoC4/CyLib.c **** *
2535:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:.\Generated_Source\PSoC4/CyLib.c **** *
2538:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 75


2540:.\Generated_Source\PSoC4/CyLib.c **** {
2541:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2542:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:.\Generated_Source\PSoC4/CyLib.c **** }
2544:.\Generated_Source\PSoC4/CyLib.c **** 
2545:.\Generated_Source\PSoC4/CyLib.c **** 
2546:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:.\Generated_Source\PSoC4/CyLib.c **** *
2550:.\Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:.\Generated_Source\PSoC4/CyLib.c **** *
2552:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:.\Generated_Source\PSoC4/CyLib.c **** *
2555:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:.\Generated_Source\PSoC4/CyLib.c **** {
 1565              		.loc 1 2557 0
 1566              		.cfi_startproc
2558:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1567              		.loc 1 2558 0
 1568 0000 024A     		ldr	r2, .L122
 1569 0002 1368     		ldr	r3, [r2]
 1570 0004 0121     		mov	r1, #1
 1571 0006 8B43     		bic	r3, r1
 1572 0008 1360     		str	r3, [r2]
2559:.\Generated_Source\PSoC4/CyLib.c **** }
 1573              		.loc 1 2559 0
 1574              		@ sp needed
 1575 000a 7047     		bx	lr
 1576              	.L123:
 1577              		.align	2
 1578              	.L122:
 1579 000c 10E000E0 		.word	-536813552
 1580              		.cfi_endproc
 1581              	.LFE38:
 1582              		.size	CySysTickStop, .-CySysTickStop
 1583              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1584              		.align	2
 1585              		.global	CySysTickEnableInterrupt
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CySysTickEnableInterrupt, %function
 1589              	CySysTickEnableInterrupt:
 1590              	.LFB39:
2560:.\Generated_Source\PSoC4/CyLib.c **** 
2561:.\Generated_Source\PSoC4/CyLib.c **** 
2562:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2563:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:.\Generated_Source\PSoC4/CyLib.c **** *
2566:.\Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:.\Generated_Source\PSoC4/CyLib.c **** *
2568:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:.\Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 76


2571:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:.\Generated_Source\PSoC4/CyLib.c **** {
 1591              		.loc 1 2573 0
 1592              		.cfi_startproc
2574:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1593              		.loc 1 2574 0
 1594 0000 024A     		ldr	r2, .L125
 1595 0002 1168     		ldr	r1, [r2]
 1596 0004 0223     		mov	r3, #2
 1597 0006 0B43     		orr	r3, r1
 1598 0008 1360     		str	r3, [r2]
2575:.\Generated_Source\PSoC4/CyLib.c **** }
 1599              		.loc 1 2575 0
 1600              		@ sp needed
 1601 000a 7047     		bx	lr
 1602              	.L126:
 1603              		.align	2
 1604              	.L125:
 1605 000c 10E000E0 		.word	-536813552
 1606              		.cfi_endproc
 1607              	.LFE39:
 1608              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1609              		.section	.text.CySysTickEnable,"ax",%progbits
 1610              		.align	2
 1611              		.global	CySysTickEnable
 1612              		.code	16
 1613              		.thumb_func
 1614              		.type	CySysTickEnable, %function
 1615              	CySysTickEnable:
 1616              	.LFB37:
2540:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1617              		.loc 1 2540 0
 1618              		.cfi_startproc
 1619 0000 08B5     		push	{r3, lr}
 1620              		.cfi_def_cfa_offset 8
 1621              		.cfi_offset 3, -8
 1622              		.cfi_offset 14, -4
2541:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1623              		.loc 1 2541 0
 1624 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1625              	.LVL136:
2542:.\Generated_Source\PSoC4/CyLib.c **** }
 1626              		.loc 1 2542 0
 1627 0006 034A     		ldr	r2, .L128
 1628 0008 1168     		ldr	r1, [r2]
 1629 000a 0123     		mov	r3, #1
 1630 000c 0B43     		orr	r3, r1
 1631 000e 1360     		str	r3, [r2]
2543:.\Generated_Source\PSoC4/CyLib.c **** 
 1632              		.loc 1 2543 0
 1633              		@ sp needed
 1634 0010 08BD     		pop	{r3, pc}
 1635              	.L129:
 1636 0012 C046     		.align	2
 1637              	.L128:
 1638 0014 10E000E0 		.word	-536813552
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 77


 1639              		.cfi_endproc
 1640              	.LFE37:
 1641              		.size	CySysTickEnable, .-CySysTickEnable
 1642              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1643              		.align	2
 1644              		.global	CySysTickDisableInterrupt
 1645              		.code	16
 1646              		.thumb_func
 1647              		.type	CySysTickDisableInterrupt, %function
 1648              	CySysTickDisableInterrupt:
 1649              	.LFB40:
2576:.\Generated_Source\PSoC4/CyLib.c **** 
2577:.\Generated_Source\PSoC4/CyLib.c **** 
2578:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:.\Generated_Source\PSoC4/CyLib.c **** *
2582:.\Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:.\Generated_Source\PSoC4/CyLib.c **** *
2584:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:.\Generated_Source\PSoC4/CyLib.c **** *
2587:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:.\Generated_Source\PSoC4/CyLib.c **** {
 1650              		.loc 1 2589 0
 1651              		.cfi_startproc
2590:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1652              		.loc 1 2590 0
 1653 0000 024A     		ldr	r2, .L131
 1654 0002 1368     		ldr	r3, [r2]
 1655 0004 0221     		mov	r1, #2
 1656 0006 8B43     		bic	r3, r1
 1657 0008 1360     		str	r3, [r2]
2591:.\Generated_Source\PSoC4/CyLib.c **** }
 1658              		.loc 1 2591 0
 1659              		@ sp needed
 1660 000a 7047     		bx	lr
 1661              	.L132:
 1662              		.align	2
 1663              	.L131:
 1664 000c 10E000E0 		.word	-536813552
 1665              		.cfi_endproc
 1666              	.LFE40:
 1667              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1668              		.section	.text.CySysTickSetReload,"ax",%progbits
 1669              		.align	2
 1670              		.global	CySysTickSetReload
 1671              		.code	16
 1672              		.thumb_func
 1673              		.type	CySysTickSetReload, %function
 1674              	CySysTickSetReload:
 1675              	.LFB41:
2592:.\Generated_Source\PSoC4/CyLib.c **** 
2593:.\Generated_Source\PSoC4/CyLib.c **** 
2594:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 78


2596:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:.\Generated_Source\PSoC4/CyLib.c **** *
2598:.\Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:.\Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:.\Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:.\Generated_Source\PSoC4/CyLib.c **** *
2602:.\Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:.\Generated_Source\PSoC4/CyLib.c **** *
2604:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:.\Generated_Source\PSoC4/CyLib.c **** {
 1676              		.loc 1 2606 0
 1677              		.cfi_startproc
 1678              	.LVL137:
2607:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1679              		.loc 1 2607 0
 1680 0000 0002     		lsl	r0, r0, #8
 1681              	.LVL138:
 1682 0002 000A     		lsr	r0, r0, #8
 1683 0004 014B     		ldr	r3, .L134
 1684 0006 1860     		str	r0, [r3]
2608:.\Generated_Source\PSoC4/CyLib.c **** }
 1685              		.loc 1 2608 0
 1686              		@ sp needed
 1687 0008 7047     		bx	lr
 1688              	.L135:
 1689 000a C046     		.align	2
 1690              	.L134:
 1691 000c 14E000E0 		.word	-536813548
 1692              		.cfi_endproc
 1693              	.LFE41:
 1694              		.size	CySysTickSetReload, .-CySysTickSetReload
 1695              		.section	.text.CySysTickGetReload,"ax",%progbits
 1696              		.align	2
 1697              		.global	CySysTickGetReload
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	CySysTickGetReload, %function
 1701              	CySysTickGetReload:
 1702              	.LFB42:
2609:.\Generated_Source\PSoC4/CyLib.c **** 
2610:.\Generated_Source\PSoC4/CyLib.c **** 
2611:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:.\Generated_Source\PSoC4/CyLib.c **** *
2615:.\Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:.\Generated_Source\PSoC4/CyLib.c **** *
2617:.\Generated_Source\PSoC4/CyLib.c **** * \return
2618:.\Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:.\Generated_Source\PSoC4/CyLib.c **** *
2620:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:.\Generated_Source\PSoC4/CyLib.c **** {
 1703              		.loc 1 2622 0
 1704              		.cfi_startproc
2623:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 79


 1705              		.loc 1 2623 0
 1706 0000 024B     		ldr	r3, .L137
 1707 0002 1868     		ldr	r0, [r3]
 1708 0004 0002     		lsl	r0, r0, #8
 1709 0006 000A     		lsr	r0, r0, #8
2624:.\Generated_Source\PSoC4/CyLib.c **** }
 1710              		.loc 1 2624 0
 1711              		@ sp needed
 1712 0008 7047     		bx	lr
 1713              	.L138:
 1714 000a C046     		.align	2
 1715              	.L137:
 1716 000c 14E000E0 		.word	-536813548
 1717              		.cfi_endproc
 1718              	.LFE42:
 1719              		.size	CySysTickGetReload, .-CySysTickGetReload
 1720              		.section	.text.CySysTickGetValue,"ax",%progbits
 1721              		.align	2
 1722              		.global	CySysTickGetValue
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	CySysTickGetValue, %function
 1726              	CySysTickGetValue:
 1727              	.LFB43:
2625:.\Generated_Source\PSoC4/CyLib.c **** 
2626:.\Generated_Source\PSoC4/CyLib.c **** 
2627:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:.\Generated_Source\PSoC4/CyLib.c **** *
2631:.\Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:.\Generated_Source\PSoC4/CyLib.c **** *
2633:.\Generated_Source\PSoC4/CyLib.c **** * \return
2634:.\Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:.\Generated_Source\PSoC4/CyLib.c **** *
2636:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:.\Generated_Source\PSoC4/CyLib.c **** {
 1728              		.loc 1 2638 0
 1729              		.cfi_startproc
2639:.\Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1730              		.loc 1 2639 0
 1731 0000 024B     		ldr	r3, .L140
 1732 0002 1868     		ldr	r0, [r3]
 1733 0004 0002     		lsl	r0, r0, #8
 1734 0006 000A     		lsr	r0, r0, #8
2640:.\Generated_Source\PSoC4/CyLib.c **** }
 1735              		.loc 1 2640 0
 1736              		@ sp needed
 1737 0008 7047     		bx	lr
 1738              	.L141:
 1739 000a C046     		.align	2
 1740              	.L140:
 1741 000c 18E000E0 		.word	-536813544
 1742              		.cfi_endproc
 1743              	.LFE43:
 1744              		.size	CySysTickGetValue, .-CySysTickGetValue
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 80


 1745              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 1746              		.align	2
 1747              		.global	CySysTickSetClockSource
 1748              		.code	16
 1749              		.thumb_func
 1750              		.type	CySysTickSetClockSource, %function
 1751              	CySysTickSetClockSource:
 1752              	.LFB44:
2641:.\Generated_Source\PSoC4/CyLib.c **** 
2642:.\Generated_Source\PSoC4/CyLib.c **** 
2643:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:.\Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:.\Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:.\Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:.\Generated_Source\PSoC4/CyLib.c ****     *
2648:.\Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:.\Generated_Source\PSoC4/CyLib.c ****     *
2650:.\Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:.\Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:.\Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:.\Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:.\Generated_Source\PSoC4/CyLib.c ****     *
2655:.\Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:.\Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:.\Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:.\Generated_Source\PSoC4/CyLib.c ****     *
2659:.\Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:.\Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:.\Generated_Source\PSoC4/CyLib.c ****     *
2662:.\Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:.\Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:.\Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:.\Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:.\Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:.\Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:.\Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:.\Generated_Source\PSoC4/CyLib.c ****     {
 1753              		.loc 1 2670 0
 1754              		.cfi_startproc
 1755              	.LVL139:
2671:.\Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 1756              		.loc 1 2671 0
 1757 0000 0128     		cmp	r0, #1
 1758 0002 05D1     		bne	.L143
2672:.\Generated_Source\PSoC4/CyLib.c ****         {
2673:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1759              		.loc 1 2673 0
 1760 0004 054A     		ldr	r2, .L145
 1761 0006 1168     		ldr	r1, [r2]
 1762 0008 0423     		mov	r3, #4
 1763 000a 0B43     		orr	r3, r1
 1764 000c 1360     		str	r3, [r2]
 1765 000e 04E0     		b	.L142
 1766              	.L143:
2674:.\Generated_Source\PSoC4/CyLib.c ****         }
2675:.\Generated_Source\PSoC4/CyLib.c ****         else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 81


2676:.\Generated_Source\PSoC4/CyLib.c ****         {
2677:.\Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 1767              		.loc 1 2677 0
 1768 0010 024A     		ldr	r2, .L145
 1769 0012 1368     		ldr	r3, [r2]
 1770 0014 0421     		mov	r1, #4
 1771 0016 8B43     		bic	r3, r1
 1772 0018 1360     		str	r3, [r2]
 1773              	.L142:
2678:.\Generated_Source\PSoC4/CyLib.c ****         }
2679:.\Generated_Source\PSoC4/CyLib.c ****     }
 1774              		.loc 1 2679 0
 1775              		@ sp needed
 1776 001a 7047     		bx	lr
 1777              	.L146:
 1778              		.align	2
 1779              	.L145:
 1780 001c 10E000E0 		.word	-536813552
 1781              		.cfi_endproc
 1782              	.LFE44:
 1783              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 1784              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 1785              		.align	2
 1786              		.global	CySysTickGetCountFlag
 1787              		.code	16
 1788              		.thumb_func
 1789              		.type	CySysTickGetCountFlag, %function
 1790              	CySysTickGetCountFlag:
 1791              	.LFB45:
2680:.\Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:.\Generated_Source\PSoC4/CyLib.c **** 
2682:.\Generated_Source\PSoC4/CyLib.c **** 
2683:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:.\Generated_Source\PSoC4/CyLib.c **** *
2687:.\Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2688:.\Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:.\Generated_Source\PSoC4/CyLib.c **** *
2690:.\Generated_Source\PSoC4/CyLib.c **** * \return
2691:.\Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:.\Generated_Source\PSoC4/CyLib.c **** *
2693:.\Generated_Source\PSoC4/CyLib.c **** *
2694:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:.\Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:.\Generated_Source\PSoC4/CyLib.c **** *
2697:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:.\Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:.\Generated_Source\PSoC4/CyLib.c **** {
 1792              		.loc 1 2699 0
 1793              		.cfi_startproc
2700:.\Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 1794              		.loc 1 2700 0
 1795 0000 024B     		ldr	r3, .L148
 1796 0002 1868     		ldr	r0, [r3]
 1797 0004 C003     		lsl	r0, r0, #15
 1798 0006 C00F     		lsr	r0, r0, #31
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 82


2701:.\Generated_Source\PSoC4/CyLib.c **** }
 1799              		.loc 1 2701 0
 1800              		@ sp needed
 1801 0008 7047     		bx	lr
 1802              	.L149:
 1803 000a C046     		.align	2
 1804              	.L148:
 1805 000c 10E000E0 		.word	-536813552
 1806              		.cfi_endproc
 1807              	.LFE45:
 1808              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 1809              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 1810              		.align	2
 1811              		.code	16
 1812              		.thumb_func
 1813              		.type	CySysTickServiceCallbacks, %function
 1814              	CySysTickServiceCallbacks:
 1815              	.LFB49:
2702:.\Generated_Source\PSoC4/CyLib.c **** 
2703:.\Generated_Source\PSoC4/CyLib.c **** 
2704:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:.\Generated_Source\PSoC4/CyLib.c **** *
2708:.\Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:.\Generated_Source\PSoC4/CyLib.c **** *
2710:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:.\Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:.\Generated_Source\PSoC4/CyLib.c **** {
2713:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
2714:.\Generated_Source\PSoC4/CyLib.c **** }
2715:.\Generated_Source\PSoC4/CyLib.c **** 
2716:.\Generated_Source\PSoC4/CyLib.c **** 
2717:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:.\Generated_Source\PSoC4/CyLib.c **** *
2721:.\Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:.\Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:.\Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:.\Generated_Source\PSoC4/CyLib.c **** *
2725:.\Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:.\Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:.\Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:.\Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:.\Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:.\Generated_Source\PSoC4/CyLib.c **** *
2731:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:.\Generated_Source\PSoC4/CyLib.c **** *
2734:.\Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:.\Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:.\Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:.\Generated_Source\PSoC4/CyLib.c **** *
2738:.\Generated_Source\PSoC4/CyLib.c **** * \return
2739:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 83


2741:.\Generated_Source\PSoC4/CyLib.c **** *
2742:.\Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2743:.\Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:.\Generated_Source\PSoC4/CyLib.c **** *
2745:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:.\Generated_Source\PSoC4/CyLib.c **** {
2748:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:.\Generated_Source\PSoC4/CyLib.c **** 
2750:.\Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:.\Generated_Source\PSoC4/CyLib.c **** }
2754:.\Generated_Source\PSoC4/CyLib.c **** 
2755:.\Generated_Source\PSoC4/CyLib.c **** 
2756:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:.\Generated_Source\PSoC4/CyLib.c **** *
2760:.\Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:.\Generated_Source\PSoC4/CyLib.c **** *
2762:.\Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:.\Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:.\Generated_Source\PSoC4/CyLib.c **** *
2765:.\Generated_Source\PSoC4/CyLib.c **** * \return
2766:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:.\Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:.\Generated_Source\PSoC4/CyLib.c **** *
2769:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:.\Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:.\Generated_Source\PSoC4/CyLib.c **** {
2772:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:.\Generated_Source\PSoC4/CyLib.c **** }
2774:.\Generated_Source\PSoC4/CyLib.c **** 
2775:.\Generated_Source\PSoC4/CyLib.c **** 
2776:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:.\Generated_Source\PSoC4/CyLib.c **** *
2780:.\Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:.\Generated_Source\PSoC4/CyLib.c **** *
2782:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:.\Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:.\Generated_Source\PSoC4/CyLib.c **** {
 1816              		.loc 1 2784 0
 1817              		.cfi_startproc
 1818 0000 10B5     		push	{r4, lr}
 1819              		.cfi_def_cfa_offset 8
 1820              		.cfi_offset 4, -8
 1821              		.cfi_offset 14, -4
2785:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:.\Generated_Source\PSoC4/CyLib.c **** 
2787:.\Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:.\Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 1822              		.loc 1 2788 0
 1823 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 1824              	.LVL140:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 84


 1825 0006 0128     		cmp	r0, #1
 1826 0008 0BD1     		bne	.L150
 1827 000a 07E0     		b	.L155
 1828              	.LVL141:
 1829              	.L154:
2789:.\Generated_Source\PSoC4/CyLib.c ****     {
2790:.\Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:.\Generated_Source\PSoC4/CyLib.c ****         {
2792:.\Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 1830              		.loc 1 2792 0
 1831 000c A300     		lsl	r3, r4, #2
 1832 000e 054A     		ldr	r2, .L156
 1833 0010 9B58     		ldr	r3, [r3, r2]
 1834 0012 002B     		cmp	r3, #0
 1835 0014 00D0     		beq	.L153
2793:.\Generated_Source\PSoC4/CyLib.c ****             {
2794:.\Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 1836              		.loc 1 2794 0
 1837 0016 9847     		blx	r3
 1838              	.LVL142:
 1839              	.L153:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1840              		.loc 1 2790 0 discriminator 2
 1841 0018 0134     		add	r4, r4, #1
 1842              	.LVL143:
 1843 001a 00E0     		b	.L151
 1844              	.LVL144:
 1845              	.L155:
 1846 001c 0024     		mov	r4, #0
 1847              	.L151:
 1848              	.LVL145:
2790:.\Generated_Source\PSoC4/CyLib.c ****         {
 1849              		.loc 1 2790 0 is_stmt 0 discriminator 1
 1850 001e 042C     		cmp	r4, #4
 1851 0020 F4D9     		bls	.L154
 1852              	.LVL146:
 1853              	.L150:
2795:.\Generated_Source\PSoC4/CyLib.c ****             }
2796:.\Generated_Source\PSoC4/CyLib.c ****         }
2797:.\Generated_Source\PSoC4/CyLib.c ****     }
2798:.\Generated_Source\PSoC4/CyLib.c **** }
 1854              		.loc 1 2798 0 is_stmt 1
 1855              		@ sp needed
 1856 0022 10BD     		pop	{r4, pc}
 1857              	.L157:
 1858              		.align	2
 1859              	.L156:
 1860 0024 00000000 		.word	.LANCHOR2
 1861              		.cfi_endproc
 1862              	.LFE49:
 1863              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 1864              		.section	.text.CySysTickClear,"ax",%progbits
 1865              		.align	2
 1866              		.global	CySysTickClear
 1867              		.code	16
 1868              		.thumb_func
 1869              		.type	CySysTickClear, %function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 85


 1870              	CySysTickClear:
 1871              	.LFB46:
2712:.\Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1872              		.loc 1 2712 0
 1873              		.cfi_startproc
2713:.\Generated_Source\PSoC4/CyLib.c **** }
 1874              		.loc 1 2713 0
 1875 0000 0022     		mov	r2, #0
 1876 0002 014B     		ldr	r3, .L159
 1877 0004 1A60     		str	r2, [r3]
2714:.\Generated_Source\PSoC4/CyLib.c **** 
 1878              		.loc 1 2714 0
 1879              		@ sp needed
 1880 0006 7047     		bx	lr
 1881              	.L160:
 1882              		.align	2
 1883              	.L159:
 1884 0008 18E000E0 		.word	-536813544
 1885              		.cfi_endproc
 1886              	.LFE46:
 1887              		.size	CySysTickClear, .-CySysTickClear
 1888              		.section	.text.CySysTickInit,"ax",%progbits
 1889              		.align	2
 1890              		.global	CySysTickInit
 1891              		.code	16
 1892              		.thumb_func
 1893              		.type	CySysTickInit, %function
 1894              	CySysTickInit:
 1895              	.LFB36:
2509:.\Generated_Source\PSoC4/CyLib.c ****     uint32 i;
 1896              		.loc 1 2509 0
 1897              		.cfi_startproc
 1898 0000 08B5     		push	{r3, lr}
 1899              		.cfi_def_cfa_offset 8
 1900              		.cfi_offset 3, -8
 1901              		.cfi_offset 14, -4
 1902              	.LVL147:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1903              		.loc 1 2512 0
 1904 0002 0023     		mov	r3, #0
 1905 0004 04E0     		b	.L162
 1906              	.LVL148:
 1907              	.L163:
2514:.\Generated_Source\PSoC4/CyLib.c ****     }
 1908              		.loc 1 2514 0 discriminator 3
 1909 0006 9900     		lsl	r1, r3, #2
 1910 0008 0020     		mov	r0, #0
 1911 000a 0D4A     		ldr	r2, .L164
 1912 000c 8850     		str	r0, [r1, r2]
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1913              		.loc 1 2512 0 discriminator 3
 1914 000e 0133     		add	r3, r3, #1
 1915              	.LVL149:
 1916              	.L162:
2512:.\Generated_Source\PSoC4/CyLib.c ****     {
 1917              		.loc 1 2512 0 is_stmt 0 discriminator 1
 1918 0010 042B     		cmp	r3, #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 86


 1919 0012 F8D9     		bls	.L163
2517:.\Generated_Source\PSoC4/CyLib.c **** 
 1920              		.loc 1 2517 0 is_stmt 1
 1921 0014 0F20     		mov	r0, #15
 1922 0016 0B49     		ldr	r1, .L164+4
 1923 0018 FFF7FEFF 		bl	CyIntSetSysVector
 1924              	.LVL150:
2520:.\Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 1925              		.loc 1 2520 0
 1926 001c 0120     		mov	r0, #1
 1927 001e FFF7FEFF 		bl	CySysTickSetClockSource
 1928              	.LVL151:
2523:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1929              		.loc 1 2523 0
 1930 0022 094B     		ldr	r3, .L164+8
 1931 0024 D868     		ldr	r0, [r3, #12]
 1932 0026 FA21     		mov	r1, #250
 1933 0028 8900     		lsl	r1, r1, #2
 1934 002a FFF7FEFF 		bl	__aeabi_uidiv
 1935              	.LVL152:
 1936 002e FFF7FEFF 		bl	CySysTickSetReload
 1937              	.LVL153:
2524:.\Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
 1938              		.loc 1 2524 0
 1939 0032 FFF7FEFF 		bl	CySysTickClear
 1940              	.LVL154:
2525:.\Generated_Source\PSoC4/CyLib.c **** }
 1941              		.loc 1 2525 0
 1942 0036 0F20     		mov	r0, #15
 1943 0038 FFF7FEFF 		bl	CyIntEnable
 1944              	.LVL155:
2526:.\Generated_Source\PSoC4/CyLib.c **** 
 1945              		.loc 1 2526 0
 1946              		@ sp needed
 1947 003c 08BD     		pop	{r3, pc}
 1948              	.L165:
 1949 003e C046     		.align	2
 1950              	.L164:
 1951 0040 00000000 		.word	.LANCHOR2
 1952 0044 00000000 		.word	CySysTickServiceCallbacks
 1953 0048 00000000 		.word	.LANCHOR0
 1954              		.cfi_endproc
 1955              	.LFE36:
 1956              		.size	CySysTickInit, .-CySysTickInit
 1957              		.section	.text.CySysTickStart,"ax",%progbits
 1958              		.align	2
 1959              		.global	CySysTickStart
 1960              		.code	16
 1961              		.thumb_func
 1962              		.type	CySysTickStart, %function
 1963              	CySysTickStart:
 1964              	.LFB35:
2480:.\Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1965              		.loc 1 2480 0
 1966              		.cfi_startproc
 1967 0000 08B5     		push	{r3, lr}
 1968              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 87


 1969              		.cfi_offset 3, -8
 1970              		.cfi_offset 14, -4
2481:.\Generated_Source\PSoC4/CyLib.c ****     {
 1971              		.loc 1 2481 0
 1972 0002 064B     		ldr	r3, .L168
 1973 0004 5B69     		ldr	r3, [r3, #20]
 1974 0006 002B     		cmp	r3, #0
 1975 0008 04D1     		bne	.L167
2483:.\Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1976              		.loc 1 2483 0
 1977 000a FFF7FEFF 		bl	CySysTickInit
 1978              	.LVL156:
2484:.\Generated_Source\PSoC4/CyLib.c ****     }
 1979              		.loc 1 2484 0
 1980 000e 0122     		mov	r2, #1
 1981 0010 024B     		ldr	r3, .L168
 1982 0012 5A61     		str	r2, [r3, #20]
 1983              	.L167:
2487:.\Generated_Source\PSoC4/CyLib.c **** }
 1984              		.loc 1 2487 0
 1985 0014 FFF7FEFF 		bl	CySysTickEnable
 1986              	.LVL157:
2488:.\Generated_Source\PSoC4/CyLib.c **** 
 1987              		.loc 1 2488 0
 1988              		@ sp needed
 1989 0018 08BD     		pop	{r3, pc}
 1990              	.L169:
 1991 001a C046     		.align	2
 1992              	.L168:
 1993 001c 00000000 		.word	.LANCHOR2
 1994              		.cfi_endproc
 1995              	.LFE35:
 1996              		.size	CySysTickStart, .-CySysTickStart
 1997              		.section	.text.CySysTickSetCallback,"ax",%progbits
 1998              		.align	2
 1999              		.global	CySysTickSetCallback
 2000              		.code	16
 2001              		.thumb_func
 2002              		.type	CySysTickSetCallback, %function
 2003              	CySysTickSetCallback:
 2004              	.LFB47:
2747:.\Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2005              		.loc 1 2747 0
 2006              		.cfi_startproc
 2007              	.LVL158:
2750:.\Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2008              		.loc 1 2750 0
 2009 0000 024A     		ldr	r2, .L171
 2010 0002 8300     		lsl	r3, r0, #2
 2011 0004 9858     		ldr	r0, [r3, r2]
 2012              	.LVL159:
2751:.\Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2013              		.loc 1 2751 0
 2014 0006 9950     		str	r1, [r3, r2]
2753:.\Generated_Source\PSoC4/CyLib.c **** 
 2015              		.loc 1 2753 0
 2016              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 88


 2017 0008 7047     		bx	lr
 2018              	.L172:
 2019 000a C046     		.align	2
 2020              	.L171:
 2021 000c 00000000 		.word	.LANCHOR2
 2022              		.cfi_endproc
 2023              	.LFE47:
 2024              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2025              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2026              		.align	2
 2027              		.global	CySysTickGetCallback
 2028              		.code	16
 2029              		.thumb_func
 2030              		.type	CySysTickGetCallback, %function
 2031              	CySysTickGetCallback:
 2032              	.LFB48:
2771:.\Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2033              		.loc 1 2771 0
 2034              		.cfi_startproc
 2035              	.LVL160:
2772:.\Generated_Source\PSoC4/CyLib.c **** }
 2036              		.loc 1 2772 0
 2037 0000 8000     		lsl	r0, r0, #2
 2038              	.LVL161:
 2039 0002 014B     		ldr	r3, .L174
 2040 0004 C058     		ldr	r0, [r0, r3]
2773:.\Generated_Source\PSoC4/CyLib.c **** 
 2041              		.loc 1 2773 0
 2042              		@ sp needed
 2043 0006 7047     		bx	lr
 2044              	.L175:
 2045              		.align	2
 2046              	.L174:
 2047 0008 00000000 		.word	.LANCHOR2
 2048              		.cfi_endproc
 2049              	.LFE48:
 2050              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2051              		.section	.text.CyGetUniqueId,"ax",%progbits
 2052              		.align	2
 2053              		.global	CyGetUniqueId
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	CyGetUniqueId, %function
 2057              	CyGetUniqueId:
 2058              	.LFB50:
2799:.\Generated_Source\PSoC4/CyLib.c **** 
2800:.\Generated_Source\PSoC4/CyLib.c **** 
2801:.\Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:.\Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:.\Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:.\Generated_Source\PSoC4/CyLib.c **** *
2805:.\Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:.\Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:.\Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:.\Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:.\Generated_Source\PSoC4/CyLib.c **** *
2810:.\Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 89


2811:.\Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:.\Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:.\Generated_Source\PSoC4/CyLib.c **** *
2814:.\Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:.\Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:.\Generated_Source\PSoC4/CyLib.c **** {
 2059              		.loc 1 2816 0
 2060              		.cfi_startproc
 2061              	.LVL162:
2817:.\Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2062              		.loc 1 2818 0
 2063 0000 134B     		ldr	r3, .L177
 2064 0002 1B78     		ldrb	r3, [r3]
 2065 0004 DAB2     		uxtb	r2, r3
 2066 0006 0260     		str	r2, [r0]
2819:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2067              		.loc 1 2819 0
 2068 0008 124B     		ldr	r3, .L177+4
 2069 000a 1B78     		ldrb	r3, [r3]
 2070 000c 1B02     		lsl	r3, r3, #8
 2071 000e 1343     		orr	r3, r2
 2072 0010 0360     		str	r3, [r0]
2820:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2073              		.loc 1 2820 0
 2074 0012 114A     		ldr	r2, .L177+8
 2075 0014 1278     		ldrb	r2, [r2]
 2076 0016 1204     		lsl	r2, r2, #16
 2077 0018 1343     		orr	r3, r2
 2078 001a 0360     		str	r3, [r0]
2821:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2079              		.loc 1 2821 0
 2080 001c 0F4A     		ldr	r2, .L177+12
 2081 001e 1278     		ldrb	r2, [r2]
 2082 0020 1206     		lsl	r2, r2, #24
 2083 0022 1343     		orr	r3, r2
 2084 0024 0360     		str	r3, [r0]
2822:.\Generated_Source\PSoC4/CyLib.c **** 
2823:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2085              		.loc 1 2823 0
 2086 0026 0E4B     		ldr	r3, .L177+16
 2087 0028 1B78     		ldrb	r3, [r3]
 2088 002a DAB2     		uxtb	r2, r3
 2089 002c 4260     		str	r2, [r0, #4]
2824:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2090              		.loc 1 2824 0
 2091 002e 0D4B     		ldr	r3, .L177+20
 2092 0030 1B78     		ldrb	r3, [r3]
 2093 0032 1B02     		lsl	r3, r3, #8
 2094 0034 1343     		orr	r3, r2
 2095 0036 4360     		str	r3, [r0, #4]
2825:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2096              		.loc 1 2825 0
 2097 0038 0B4A     		ldr	r2, .L177+24
 2098 003a 1278     		ldrb	r2, [r2]
 2099 003c 1204     		lsl	r2, r2, #16
 2100 003e 1343     		orr	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 90


 2101 0040 4360     		str	r3, [r0, #4]
2826:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2102              		.loc 1 2826 0
 2103 0042 0A4A     		ldr	r2, .L177+28
 2104 0044 1278     		ldrb	r2, [r2]
 2105 0046 1206     		lsl	r2, r2, #24
 2106 0048 1343     		orr	r3, r2
 2107 004a 4360     		str	r3, [r0, #4]
2827:.\Generated_Source\PSoC4/CyLib.c **** #else
2828:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:.\Generated_Source\PSoC4/CyLib.c **** 
2833:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:.\Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:.\Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:.\Generated_Source\PSoC4/CyLib.c **** }
 2108              		.loc 1 2838 0
 2109              		@ sp needed
 2110 004c 7047     		bx	lr
 2111              	.L178:
 2112 004e C046     		.align	2
 2113              	.L177:
 2114 0050 78F2FF0F 		.word	268431992
 2115 0054 79F2FF0F 		.word	268431993
 2116 0058 7AF2FF0F 		.word	268431994
 2117 005c 7BF2FF0F 		.word	268431995
 2118 0060 7CF2FF0F 		.word	268431996
 2119 0064 7DF2FF0F 		.word	268431997
 2120 0068 7EF2FF0F 		.word	268431998
 2121 006c 7FF2FF0F 		.word	268431999
 2122              		.cfi_endproc
 2123              	.LFE50:
 2124              		.size	CyGetUniqueId, .-CyGetUniqueId
 2125              		.global	cyImoFreqMhz2Reg
 2126              		.global	CySysTickInitVar
 2127              		.global	cydelay32kMs
 2128              		.global	cydelayFreqMhz
 2129              		.global	cydelayFreqKhz
 2130              		.global	cydelayFreqHz
 2131              		.section	.rodata
 2132              		.align	2
 2133              		.set	.LANCHOR1,. + 0
 2134              		.type	cyImoFreqMhz2Reg, %object
 2135              		.size	cyImoFreqMhz2Reg, 46
 2136              	cyImoFreqMhz2Reg:
 2137 0000 03       		.byte	3
 2138 0001 04       		.byte	4
 2139 0002 05       		.byte	5
 2140 0003 06       		.byte	6
 2141 0004 07       		.byte	7
 2142 0005 08       		.byte	8
 2143 0006 09       		.byte	9
 2144 0007 0A       		.byte	10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 91


 2145 0008 0B       		.byte	11
 2146 0009 0C       		.byte	12
 2147 000a 0E       		.byte	14
 2148 000b 0F       		.byte	15
 2149 000c 10       		.byte	16
 2150 000d 11       		.byte	17
 2151 000e 12       		.byte	18
 2152 000f 13       		.byte	19
 2153 0010 14       		.byte	20
 2154 0011 15       		.byte	21
 2155 0012 16       		.byte	22
 2156 0013 17       		.byte	23
 2157 0014 18       		.byte	24
 2158 0015 19       		.byte	25
 2159 0016 1B       		.byte	27
 2160 0017 1C       		.byte	28
 2161 0018 1D       		.byte	29
 2162 0019 1E       		.byte	30
 2163 001a 1F       		.byte	31
 2164 001b 20       		.byte	32
 2165 001c 21       		.byte	33
 2166 001d 22       		.byte	34
 2167 001e 23       		.byte	35
 2168 001f 25       		.byte	37
 2169 0020 26       		.byte	38
 2170 0021 27       		.byte	39
 2171 0022 28       		.byte	40
 2172 0023 29       		.byte	41
 2173 0024 2A       		.byte	42
 2174 0025 2B       		.byte	43
 2175 0026 2E       		.byte	46
 2176 0027 2F       		.byte	47
 2177 0028 30       		.byte	48
 2178 0029 31       		.byte	49
 2179 002a 32       		.byte	50
 2180 002b 33       		.byte	51
 2181 002c 34       		.byte	52
 2182 002d 35       		.byte	53
 2183 002e 0000     		.data
 2184              		.align	2
 2185              		.set	.LANCHOR0,. + 0
 2186              		.type	cydelay32kMs, %object
 2187              		.size	cydelay32kMs, 4
 2188              	cydelay32kMs:
 2189 0000 0000E02E 		.word	786432000
 2190              		.type	cydelayFreqKhz, %object
 2191              		.size	cydelayFreqKhz, 4
 2192              	cydelayFreqKhz:
 2193 0004 C05D0000 		.word	24000
 2194              		.type	cydelayFreqMhz, %object
 2195              		.size	cydelayFreqMhz, 1
 2196              	cydelayFreqMhz:
 2197 0008 18       		.byte	24
 2198 0009 000000   		.space	3
 2199              		.type	cydelayFreqHz, %object
 2200              		.size	cydelayFreqHz, 4
 2201              	cydelayFreqHz:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 92


 2202 000c 00366E01 		.word	24000000
 2203              		.bss
 2204              		.align	2
 2205              		.set	.LANCHOR2,. + 0
 2206              		.type	CySysTickCallbacks, %object
 2207              		.size	CySysTickCallbacks, 20
 2208              	CySysTickCallbacks:
 2209 0000 00000000 		.space	20
 2209      00000000 
 2209      00000000 
 2209      00000000 
 2209      00000000 
 2210              		.type	CySysTickInitVar, %object
 2211              		.size	CySysTickInitVar, 4
 2212              	CySysTickInitVar:
 2213 0014 00000000 		.space	4
 2214              		.text
 2215              	.Letext0:
 2216              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2217              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 2218              		.section	.debug_info,"",%progbits
 2219              	.Ldebug_info0:
 2220 0000 FB0B0000 		.4byte	0xbfb
 2221 0004 0400     		.2byte	0x4
 2222 0006 00000000 		.4byte	.Ldebug_abbrev0
 2223 000a 04       		.byte	0x4
 2224 000b 01       		.uleb128 0x1
 2225 000c E0030000 		.4byte	.LASF107
 2226 0010 01       		.byte	0x1
 2227 0011 09030000 		.4byte	.LASF108
 2228 0015 DA050000 		.4byte	.LASF109
 2229 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2230 001d 00000000 		.4byte	0
 2231 0021 00000000 		.4byte	.Ldebug_line0
 2232 0025 02       		.uleb128 0x2
 2233 0026 01       		.byte	0x1
 2234 0027 06       		.byte	0x6
 2235 0028 EB000000 		.4byte	.LASF0
 2236 002c 02       		.uleb128 0x2
 2237 002d 01       		.byte	0x1
 2238 002e 08       		.byte	0x8
 2239 002f 0A050000 		.4byte	.LASF1
 2240 0033 02       		.uleb128 0x2
 2241 0034 02       		.byte	0x2
 2242 0035 05       		.byte	0x5
 2243 0036 18050000 		.4byte	.LASF2
 2244 003a 02       		.uleb128 0x2
 2245 003b 02       		.byte	0x2
 2246 003c 07       		.byte	0x7
 2247 003d CF020000 		.4byte	.LASF3
 2248 0041 02       		.uleb128 0x2
 2249 0042 04       		.byte	0x4
 2250 0043 05       		.byte	0x5
 2251 0044 2A010000 		.4byte	.LASF4
 2252 0048 02       		.uleb128 0x2
 2253 0049 04       		.byte	0x4
 2254 004a 07       		.byte	0x7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 93


 2255 004b 57020000 		.4byte	.LASF5
 2256 004f 02       		.uleb128 0x2
 2257 0050 08       		.byte	0x8
 2258 0051 05       		.byte	0x5
 2259 0052 DD000000 		.4byte	.LASF6
 2260 0056 02       		.uleb128 0x2
 2261 0057 08       		.byte	0x8
 2262 0058 07       		.byte	0x7
 2263 0059 71000000 		.4byte	.LASF7
 2264 005d 03       		.uleb128 0x3
 2265 005e 04       		.byte	0x4
 2266 005f 05       		.byte	0x5
 2267 0060 696E7400 		.ascii	"int\000"
 2268 0064 02       		.uleb128 0x2
 2269 0065 04       		.byte	0x4
 2270 0066 07       		.byte	0x7
 2271 0067 3B020000 		.4byte	.LASF8
 2272 006b 04       		.uleb128 0x4
 2273 006c 55010000 		.4byte	.LASF9
 2274 0070 02       		.byte	0x2
 2275 0071 9801     		.2byte	0x198
 2276 0073 2C000000 		.4byte	0x2c
 2277 0077 04       		.uleb128 0x4
 2278 0078 17000000 		.4byte	.LASF10
 2279 007c 02       		.byte	0x2
 2280 007d 9901     		.2byte	0x199
 2281 007f 3A000000 		.4byte	0x3a
 2282 0083 04       		.uleb128 0x4
 2283 0084 98010000 		.4byte	.LASF11
 2284 0088 02       		.byte	0x2
 2285 0089 9A01     		.2byte	0x19a
 2286 008b 48000000 		.4byte	0x48
 2287 008f 02       		.uleb128 0x2
 2288 0090 04       		.byte	0x4
 2289 0091 04       		.byte	0x4
 2290 0092 8D040000 		.4byte	.LASF12
 2291 0096 02       		.uleb128 0x2
 2292 0097 08       		.byte	0x8
 2293 0098 04       		.byte	0x4
 2294 0099 74010000 		.4byte	.LASF13
 2295 009d 02       		.uleb128 0x2
 2296 009e 01       		.byte	0x1
 2297 009f 08       		.byte	0x8
 2298 00a0 62050000 		.4byte	.LASF14
 2299 00a4 04       		.uleb128 0x4
 2300 00a5 C4060000 		.4byte	.LASF15
 2301 00a9 02       		.byte	0x2
 2302 00aa 3A02     		.2byte	0x23a
 2303 00ac 48000000 		.4byte	0x48
 2304 00b0 04       		.uleb128 0x4
 2305 00b1 F4040000 		.4byte	.LASF16
 2306 00b5 02       		.byte	0x2
 2307 00b6 4202     		.2byte	0x242
 2308 00b8 BC000000 		.4byte	0xbc
 2309 00bc 05       		.uleb128 0x5
 2310 00bd 6B000000 		.4byte	0x6b
 2311 00c1 04       		.uleb128 0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 94


 2312 00c2 5A030000 		.4byte	.LASF17
 2313 00c6 02       		.byte	0x2
 2314 00c7 4402     		.2byte	0x244
 2315 00c9 CD000000 		.4byte	0xcd
 2316 00cd 05       		.uleb128 0x5
 2317 00ce 83000000 		.4byte	0x83
 2318 00d2 04       		.uleb128 0x4
 2319 00d3 67050000 		.4byte	.LASF18
 2320 00d7 02       		.byte	0x2
 2321 00d8 5402     		.2byte	0x254
 2322 00da DE000000 		.4byte	0xde
 2323 00de 06       		.uleb128 0x6
 2324 00df 04       		.byte	0x4
 2325 00e0 E4000000 		.4byte	0xe4
 2326 00e4 07       		.uleb128 0x7
 2327 00e5 02       		.uleb128 0x2
 2328 00e6 04       		.byte	0x4
 2329 00e7 07       		.byte	0x7
 2330 00e8 7C030000 		.4byte	.LASF19
 2331 00ec 08       		.uleb128 0x8
 2332 00ed B8040000 		.4byte	.LASF20
 2333 00f1 03       		.byte	0x3
 2334 00f2 F3       		.byte	0xf3
 2335 00f3 DE000000 		.4byte	0xde
 2336 00f7 09       		.uleb128 0x9
 2337 00f8 CD060000 		.4byte	.LASF21
 2338 00fc 01       		.byte	0x1
 2339 00fd 68       		.byte	0x68
 2340 00fe 00000000 		.4byte	.LFB2
 2341 0102 14000000 		.4byte	.LFE2-.LFB2
 2342 0106 01       		.uleb128 0x1
 2343 0107 9C       		.byte	0x9c
 2344 0108 09       		.uleb128 0x9
 2345 0109 84020000 		.4byte	.LASF22
 2346 010d 01       		.byte	0x1
 2347 010e 88       		.byte	0x88
 2348 010f 00000000 		.4byte	.LFB3
 2349 0113 10000000 		.4byte	.LFE3-.LFB3
 2350 0117 01       		.uleb128 0x1
 2351 0118 9C       		.byte	0x9c
 2352 0119 0A       		.uleb128 0xa
 2353 011a 27000000 		.4byte	.LASF26
 2354 011e 01       		.byte	0x1
 2355 011f AA01     		.2byte	0x1aa
 2356 0121 00000000 		.4byte	.LFB4
 2357 0125 20000000 		.4byte	.LFE4-.LFB4
 2358 0129 01       		.uleb128 0x1
 2359 012a 9C       		.byte	0x9c
 2360 012b 72010000 		.4byte	0x172
 2361 012f 0B       		.uleb128 0xb
 2362 0130 40050000 		.4byte	.LASF28
 2363 0134 01       		.byte	0x1
 2364 0135 AA01     		.2byte	0x1aa
 2365 0137 83000000 		.4byte	0x83
 2366 013b 00000000 		.4byte	.LLST0
 2367 013f 0C       		.uleb128 0xc
 2368 0140 08010000 		.4byte	.LASF23
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 95


 2369 0144 01       		.byte	0x1
 2370 0145 AC01     		.2byte	0x1ac
 2371 0147 6B000000 		.4byte	0x6b
 2372 014b 2C000000 		.4byte	.LLST1
 2373 014f 0C       		.uleb128 0xc
 2374 0150 FC060000 		.4byte	.LASF24
 2375 0154 01       		.byte	0x1
 2376 0155 AD01     		.2byte	0x1ad
 2377 0157 83000000 		.4byte	0x83
 2378 015b 3F000000 		.4byte	.LLST2
 2379 015f 0D       		.uleb128 0xd
 2380 0160 08000000 		.4byte	.LVL1
 2381 0164 D50B0000 		.4byte	0xbd5
 2382 0168 0D       		.uleb128 0xd
 2383 0169 1A000000 		.4byte	.LVL4
 2384 016d E00B0000 		.4byte	0xbe0
 2385 0171 00       		.byte	0
 2386 0172 0E       		.uleb128 0xe
 2387 0173 C1010000 		.4byte	.LASF31
 2388 0177 01       		.byte	0x1
 2389 0178 CF01     		.2byte	0x1cf
 2390 017a 83000000 		.4byte	0x83
 2391 017e 00000000 		.4byte	.LFB5
 2392 0182 1C000000 		.4byte	.LFE5-.LFB5
 2393 0186 01       		.uleb128 0x1
 2394 0187 9C       		.byte	0x9c
 2395 0188 BF010000 		.4byte	0x1bf
 2396 018c 0C       		.uleb128 0xc
 2397 018d 08010000 		.4byte	.LASF23
 2398 0191 01       		.byte	0x1
 2399 0192 D101     		.2byte	0x1d1
 2400 0194 6B000000 		.4byte	0x6b
 2401 0198 5D000000 		.4byte	.LLST3
 2402 019c 0C       		.uleb128 0xc
 2403 019d A7030000 		.4byte	.LASF25
 2404 01a1 01       		.byte	0x1
 2405 01a2 D201     		.2byte	0x1d2
 2406 01a4 83000000 		.4byte	0x83
 2407 01a8 70000000 		.4byte	.LLST4
 2408 01ac 0D       		.uleb128 0xd
 2409 01ad 06000000 		.4byte	.LVL6
 2410 01b1 D50B0000 		.4byte	0xbd5
 2411 01b5 0D       		.uleb128 0xd
 2412 01b6 12000000 		.4byte	.LVL8
 2413 01ba E00B0000 		.4byte	0xbe0
 2414 01be 00       		.byte	0
 2415 01bf 0A       		.uleb128 0xa
 2416 01c0 84050000 		.4byte	.LASF27
 2417 01c4 01       		.byte	0x1
 2418 01c5 0602     		.2byte	0x206
 2419 01c7 00000000 		.4byte	.LFB6
 2420 01cb 28000000 		.4byte	.LFE6-.LFB6
 2421 01cf 01       		.uleb128 0x1
 2422 01d0 9C       		.byte	0x9c
 2423 01d1 08020000 		.4byte	0x208
 2424 01d5 0B       		.uleb128 0xb
 2425 01d6 A8060000 		.4byte	.LASF29
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 96


 2426 01da 01       		.byte	0x1
 2427 01db 0602     		.2byte	0x206
 2428 01dd 83000000 		.4byte	0x83
 2429 01e1 8E000000 		.4byte	.LLST5
 2430 01e5 0C       		.uleb128 0xc
 2431 01e6 08010000 		.4byte	.LASF23
 2432 01ea 01       		.byte	0x1
 2433 01eb 0802     		.2byte	0x208
 2434 01ed 6B000000 		.4byte	0x6b
 2435 01f1 BA000000 		.4byte	.LLST6
 2436 01f5 0D       		.uleb128 0xd
 2437 01f6 08000000 		.4byte	.LVL11
 2438 01fa D50B0000 		.4byte	0xbd5
 2439 01fe 0D       		.uleb128 0xd
 2440 01ff 1E000000 		.4byte	.LVL13
 2441 0203 E00B0000 		.4byte	0xbe0
 2442 0207 00       		.byte	0
 2443 0208 0F       		.uleb128 0xf
 2444 0209 80060000 		.4byte	.LASF30
 2445 020d 01       		.byte	0x1
 2446 020e 0504     		.2byte	0x405
 2447 0210 00000000 		.4byte	.LFB9
 2448 0214 24000000 		.4byte	.LFE9-.LFB9
 2449 0218 01       		.uleb128 0x1
 2450 0219 9C       		.byte	0x9c
 2451 021a 0E       		.uleb128 0xe
 2452 021b 9F010000 		.4byte	.LASF32
 2453 021f 01       		.byte	0x1
 2454 0220 2504     		.2byte	0x425
 2455 0222 83000000 		.4byte	0x83
 2456 0226 00000000 		.4byte	.LFB10
 2457 022a 10000000 		.4byte	.LFE10-.LFB10
 2458 022e 01       		.uleb128 0x1
 2459 022f 9C       		.byte	0x9c
 2460 0230 43020000 		.4byte	0x243
 2461 0234 10       		.uleb128 0x10
 2462 0235 30070000 		.4byte	.LASF33
 2463 0239 01       		.byte	0x1
 2464 023a 2704     		.2byte	0x427
 2465 023c 83000000 		.4byte	0x83
 2466 0240 01       		.uleb128 0x1
 2467 0241 50       		.byte	0x50
 2468 0242 00       		.byte	0
 2469 0243 0F       		.uleb128 0xf
 2470 0244 61060000 		.4byte	.LASF34
 2471 0248 01       		.byte	0x1
 2472 0249 CF07     		.2byte	0x7cf
 2473 024b 00000000 		.4byte	.LFB13
 2474 024f 20000000 		.4byte	.LFE13-.LFB13
 2475 0253 01       		.uleb128 0x1
 2476 0254 9C       		.byte	0x9c
 2477 0255 11       		.uleb128 0x11
 2478 0256 69020000 		.4byte	.LASF85
 2479 025a 01       		.byte	0x1
 2480 025b E107     		.2byte	0x7e1
 2481 025d 83000000 		.4byte	0x83
 2482 0261 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 97


 2483 0265 10000000 		.4byte	.LFE14-.LFB14
 2484 0269 01       		.uleb128 0x1
 2485 026a 9C       		.byte	0x9c
 2486 026b 0F       		.uleb128 0xf
 2487 026c 81010000 		.4byte	.LASF35
 2488 0270 01       		.byte	0x1
 2489 0271 F107     		.2byte	0x7f1
 2490 0273 00000000 		.4byte	.LFB15
 2491 0277 0C000000 		.4byte	.LFE15-.LFB15
 2492 027b 01       		.uleb128 0x1
 2493 027c 9C       		.byte	0x9c
 2494 027d 0E       		.uleb128 0xe
 2495 027e BB020000 		.4byte	.LASF36
 2496 0282 01       		.byte	0x1
 2497 0283 0B08     		.2byte	0x80b
 2498 0285 83000000 		.4byte	0x83
 2499 0289 00000000 		.4byte	.LFB16
 2500 028d 14000000 		.4byte	.LFE16-.LFB16
 2501 0291 01       		.uleb128 0x1
 2502 0292 9C       		.byte	0x9c
 2503 0293 B6020000 		.4byte	0x2b6
 2504 0297 0B       		.uleb128 0xb
 2505 0298 5B050000 		.4byte	.LASF37
 2506 029c 01       		.byte	0x1
 2507 029d 0B08     		.2byte	0x80b
 2508 029f 83000000 		.4byte	0x83
 2509 02a3 CD000000 		.4byte	.LLST7
 2510 02a7 10       		.uleb128 0x10
 2511 02a8 6F030000 		.4byte	.LASF38
 2512 02ac 01       		.byte	0x1
 2513 02ad 0D08     		.2byte	0x80d
 2514 02af 83000000 		.4byte	0x83
 2515 02b3 01       		.uleb128 0x1
 2516 02b4 50       		.byte	0x50
 2517 02b5 00       		.byte	0
 2518 02b6 0E       		.uleb128 0xe
 2519 02b7 4E000000 		.4byte	.LASF39
 2520 02bb 01       		.byte	0x1
 2521 02bc 2208     		.2byte	0x822
 2522 02be 83000000 		.4byte	0x83
 2523 02c2 00000000 		.4byte	.LFB17
 2524 02c6 10000000 		.4byte	.LFE17-.LFB17
 2525 02ca 01       		.uleb128 0x1
 2526 02cb 9C       		.byte	0x9c
 2527 02cc DF020000 		.4byte	0x2df
 2528 02d0 10       		.uleb128 0x10
 2529 02d1 1E000000 		.4byte	.LASF40
 2530 02d5 01       		.byte	0x1
 2531 02d6 2408     		.2byte	0x824
 2532 02d8 83000000 		.4byte	0x83
 2533 02dc 01       		.uleb128 0x1
 2534 02dd 50       		.byte	0x50
 2535 02de 00       		.byte	0
 2536 02df 0A       		.uleb128 0xa
 2537 02e0 99000000 		.4byte	.LASF41
 2538 02e4 01       		.byte	0x1
 2539 02e5 3908     		.2byte	0x839
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 98


 2540 02e7 00000000 		.4byte	.LFB18
 2541 02eb 0C000000 		.4byte	.LFE18-.LFB18
 2542 02ef 01       		.uleb128 0x1
 2543 02f0 9C       		.byte	0x9c
 2544 02f1 04030000 		.4byte	0x304
 2545 02f5 12       		.uleb128 0x12
 2546 02f6 BC010000 		.4byte	.LASF42
 2547 02fa 01       		.byte	0x1
 2548 02fb 3908     		.2byte	0x839
 2549 02fd 83000000 		.4byte	0x83
 2550 0301 01       		.uleb128 0x1
 2551 0302 50       		.byte	0x50
 2552 0303 00       		.byte	0
 2553 0304 0A       		.uleb128 0xa
 2554 0305 22050000 		.4byte	.LASF43
 2555 0309 01       		.byte	0x1
 2556 030a F008     		.2byte	0x8f0
 2557 030c 00000000 		.4byte	.LFB25
 2558 0310 14000000 		.4byte	.LFE25-.LFB25
 2559 0314 01       		.uleb128 0x1
 2560 0315 9C       		.byte	0x9c
 2561 0316 2B030000 		.4byte	0x32b
 2562 031a 0B       		.uleb128 0xb
 2563 031b B5010000 		.4byte	.LASF44
 2564 031f 01       		.byte	0x1
 2565 0320 F008     		.2byte	0x8f0
 2566 0322 6B000000 		.4byte	0x6b
 2567 0326 EB000000 		.4byte	.LLST8
 2568 032a 00       		.byte	0
 2569 032b 0E       		.uleb128 0xe
 2570 032c CF000000 		.4byte	.LASF45
 2571 0330 01       		.byte	0x1
 2572 0331 0209     		.2byte	0x902
 2573 0333 6B000000 		.4byte	0x6b
 2574 0337 00000000 		.4byte	.LFB26
 2575 033b 18000000 		.4byte	.LFE26-.LFB26
 2576 033f 01       		.uleb128 0x1
 2577 0340 9C       		.byte	0x9c
 2578 0341 56030000 		.4byte	0x356
 2579 0345 0B       		.uleb128 0xb
 2580 0346 B5010000 		.4byte	.LASF44
 2581 034a 01       		.byte	0x1
 2582 034b 0209     		.2byte	0x902
 2583 034d 6B000000 		.4byte	0x6b
 2584 0351 0C010000 		.4byte	.LLST9
 2585 0355 00       		.byte	0
 2586 0356 0A       		.uleb128 0xa
 2587 0357 33010000 		.4byte	.LASF46
 2588 035b 01       		.byte	0x1
 2589 035c 1209     		.2byte	0x912
 2590 035e 00000000 		.4byte	.LFB27
 2591 0362 14000000 		.4byte	.LFE27-.LFB27
 2592 0366 01       		.uleb128 0x1
 2593 0367 9C       		.byte	0x9c
 2594 0368 7D030000 		.4byte	0x37d
 2595 036c 0B       		.uleb128 0xb
 2596 036d B5010000 		.4byte	.LASF44
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 99


 2597 0371 01       		.byte	0x1
 2598 0372 1209     		.2byte	0x912
 2599 0374 6B000000 		.4byte	0x6b
 2600 0378 2D010000 		.4byte	.LLST10
 2601 037c 00       		.byte	0
 2602 037d 0A       		.uleb128 0xa
 2603 037e AB020000 		.4byte	.LASF47
 2604 0382 01       		.byte	0x1
 2605 0383 2009     		.2byte	0x920
 2606 0385 00000000 		.4byte	.LFB28
 2607 0389 14000000 		.4byte	.LFE28-.LFB28
 2608 038d 01       		.uleb128 0x1
 2609 038e 9C       		.byte	0x9c
 2610 038f A4030000 		.4byte	0x3a4
 2611 0393 0B       		.uleb128 0xb
 2612 0394 B5010000 		.4byte	.LASF44
 2613 0398 01       		.byte	0x1
 2614 0399 2009     		.2byte	0x920
 2615 039b 6B000000 		.4byte	0x6b
 2616 039f 4E010000 		.4byte	.LLST11
 2617 03a3 00       		.byte	0
 2618 03a4 0A       		.uleb128 0xa
 2619 03a5 85030000 		.4byte	.LASF48
 2620 03a9 01       		.byte	0x1
 2621 03aa 2F09     		.2byte	0x92f
 2622 03ac 00000000 		.4byte	.LFB29
 2623 03b0 14000000 		.4byte	.LFE29-.LFB29
 2624 03b4 01       		.uleb128 0x1
 2625 03b5 9C       		.byte	0x9c
 2626 03b6 CB030000 		.4byte	0x3cb
 2627 03ba 0B       		.uleb128 0xb
 2628 03bb B5010000 		.4byte	.LASF44
 2629 03bf 01       		.byte	0x1
 2630 03c0 2F09     		.2byte	0x92f
 2631 03c2 6B000000 		.4byte	0x6b
 2632 03c6 6F010000 		.4byte	.LLST12
 2633 03ca 00       		.byte	0
 2634 03cb 0A       		.uleb128 0xa
 2635 03cc 03050000 		.4byte	.LASF49
 2636 03d0 01       		.byte	0x1
 2637 03d1 3E09     		.2byte	0x93e
 2638 03d3 00000000 		.4byte	.LFB30
 2639 03d7 04000000 		.4byte	.LFE30-.LFB30
 2640 03db 01       		.uleb128 0x1
 2641 03dc 9C       		.byte	0x9c
 2642 03dd F0030000 		.4byte	0x3f0
 2643 03e1 12       		.uleb128 0x12
 2644 03e2 5B050000 		.4byte	.LASF37
 2645 03e6 01       		.byte	0x1
 2646 03e7 3E09     		.2byte	0x93e
 2647 03e9 6B000000 		.4byte	0x6b
 2648 03ed 01       		.uleb128 0x1
 2649 03ee 50       		.byte	0x50
 2650 03ef 00       		.byte	0
 2651 03f0 0A       		.uleb128 0xa
 2652 03f1 B0060000 		.4byte	.LASF50
 2653 03f5 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 100


 2654 03f6 4D04     		.2byte	0x44d
 2655 03f8 00000000 		.4byte	.LFB11
 2656 03fc 38000000 		.4byte	.LFE11-.LFB11
 2657 0400 01       		.uleb128 0x1
 2658 0401 9C       		.byte	0x9c
 2659 0402 48040000 		.4byte	0x448
 2660 0406 0B       		.uleb128 0xb
 2661 0407 A8060000 		.4byte	.LASF29
 2662 040b 01       		.byte	0x1
 2663 040c 4D04     		.2byte	0x44d
 2664 040e 83000000 		.4byte	0x83
 2665 0412 90010000 		.4byte	.LLST13
 2666 0416 0C       		.uleb128 0xc
 2667 0417 08010000 		.4byte	.LASF23
 2668 041b 01       		.byte	0x1
 2669 041c 4F04     		.2byte	0x44f
 2670 041e 6B000000 		.4byte	0x6b
 2671 0422 E0010000 		.4byte	.LLST14
 2672 0426 0D       		.uleb128 0xd
 2673 0427 14000000 		.4byte	.LVL33
 2674 042b D50B0000 		.4byte	0xbd5
 2675 042f 0D       		.uleb128 0xd
 2676 0430 26000000 		.4byte	.LVL35
 2677 0434 E00B0000 		.4byte	0xbe0
 2678 0438 13       		.uleb128 0x13
 2679 0439 2E000000 		.4byte	.LVL38
 2680 043d CB030000 		.4byte	0x3cb
 2681 0441 14       		.uleb128 0x14
 2682 0442 01       		.uleb128 0x1
 2683 0443 50       		.byte	0x50
 2684 0444 01       		.uleb128 0x1
 2685 0445 30       		.byte	0x30
 2686 0446 00       		.byte	0
 2687 0447 00       		.byte	0
 2688 0448 0E       		.uleb128 0xe
 2689 0449 48030000 		.4byte	.LASF51
 2690 044d 01       		.byte	0x1
 2691 044e 5208     		.2byte	0x852
 2692 0450 D2000000 		.4byte	0xd2
 2693 0454 00000000 		.4byte	.LFB19
 2694 0458 20000000 		.4byte	.LFE19-.LFB19
 2695 045c 01       		.uleb128 0x1
 2696 045d 9C       		.byte	0x9c
 2697 045e B0040000 		.4byte	0x4b0
 2698 0462 0B       		.uleb128 0xb
 2699 0463 B5010000 		.4byte	.LASF44
 2700 0467 01       		.byte	0x1
 2701 0468 5208     		.2byte	0x852
 2702 046a 6B000000 		.4byte	0x6b
 2703 046e F3010000 		.4byte	.LLST15
 2704 0472 0B       		.uleb128 0xb
 2705 0473 97030000 		.4byte	.LASF52
 2706 0477 01       		.byte	0x1
 2707 0478 5208     		.2byte	0x852
 2708 047a D2000000 		.4byte	0xd2
 2709 047e 14020000 		.4byte	.LLST16
 2710 0482 10       		.uleb128 0x10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 101


 2711 0483 40000000 		.4byte	.LASF53
 2712 0487 01       		.byte	0x1
 2713 0488 5408     		.2byte	0x854
 2714 048a D2000000 		.4byte	0xd2
 2715 048e 01       		.uleb128 0x1
 2716 048f 50       		.byte	0x50
 2717 0490 15       		.uleb128 0x15
 2718 0491 00000000 		.4byte	.LASF54
 2719 0495 01       		.byte	0x1
 2720 0496 5508     		.2byte	0x855
 2721 0498 B0040000 		.4byte	0x4b0
 2722 049c 00000020 		.4byte	0x20000000
 2723 04a0 13       		.uleb128 0x13
 2724 04a1 10000000 		.4byte	.LVL42
 2725 04a5 CB030000 		.4byte	0x3cb
 2726 04a9 14       		.uleb128 0x14
 2727 04aa 01       		.uleb128 0x1
 2728 04ab 50       		.byte	0x50
 2729 04ac 01       		.uleb128 0x1
 2730 04ad 30       		.byte	0x30
 2731 04ae 00       		.byte	0
 2732 04af 00       		.byte	0
 2733 04b0 06       		.uleb128 0x6
 2734 04b1 04       		.byte	0x4
 2735 04b2 D2000000 		.4byte	0xd2
 2736 04b6 0E       		.uleb128 0xe
 2737 04b7 2E050000 		.4byte	.LASF55
 2738 04bb 01       		.byte	0x1
 2739 04bc 7408     		.2byte	0x874
 2740 04be D2000000 		.4byte	0xd2
 2741 04c2 00000000 		.4byte	.LFB20
 2742 04c6 1C000000 		.4byte	.LFE20-.LFB20
 2743 04ca 01       		.uleb128 0x1
 2744 04cb 9C       		.byte	0x9c
 2745 04cc 00050000 		.4byte	0x500
 2746 04d0 0B       		.uleb128 0xb
 2747 04d1 B5010000 		.4byte	.LASF44
 2748 04d5 01       		.byte	0x1
 2749 04d6 7408     		.2byte	0x874
 2750 04d8 6B000000 		.4byte	0x6b
 2751 04dc 40020000 		.4byte	.LLST17
 2752 04e0 15       		.uleb128 0x15
 2753 04e1 00000000 		.4byte	.LASF54
 2754 04e5 01       		.byte	0x1
 2755 04e6 7608     		.2byte	0x876
 2756 04e8 B0040000 		.4byte	0x4b0
 2757 04ec 00000020 		.4byte	0x20000000
 2758 04f0 13       		.uleb128 0x13
 2759 04f1 0E000000 		.4byte	.LVL48
 2760 04f5 CB030000 		.4byte	0x3cb
 2761 04f9 14       		.uleb128 0x14
 2762 04fa 01       		.uleb128 0x1
 2763 04fb 50       		.byte	0x50
 2764 04fc 01       		.uleb128 0x1
 2765 04fd 30       		.byte	0x30
 2766 04fe 00       		.byte	0
 2767 04ff 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 102


 2768 0500 0E       		.uleb128 0xe
 2769 0501 FA020000 		.4byte	.LASF56
 2770 0505 01       		.byte	0x1
 2771 0506 8A08     		.2byte	0x88a
 2772 0508 D2000000 		.4byte	0xd2
 2773 050c 00000000 		.4byte	.LFB21
 2774 0510 24000000 		.4byte	.LFE21-.LFB21
 2775 0514 01       		.uleb128 0x1
 2776 0515 9C       		.byte	0x9c
 2777 0516 68050000 		.4byte	0x568
 2778 051a 0B       		.uleb128 0xb
 2779 051b B5010000 		.4byte	.LASF44
 2780 051f 01       		.byte	0x1
 2781 0520 8A08     		.2byte	0x88a
 2782 0522 6B000000 		.4byte	0x6b
 2783 0526 61020000 		.4byte	.LLST18
 2784 052a 0B       		.uleb128 0xb
 2785 052b 97030000 		.4byte	.LASF52
 2786 052f 01       		.byte	0x1
 2787 0530 8A08     		.2byte	0x88a
 2788 0532 D2000000 		.4byte	0xd2
 2789 0536 82020000 		.4byte	.LLST19
 2790 053a 10       		.uleb128 0x10
 2791 053b 40000000 		.4byte	.LASF53
 2792 053f 01       		.byte	0x1
 2793 0540 8C08     		.2byte	0x88c
 2794 0542 D2000000 		.4byte	0xd2
 2795 0546 01       		.uleb128 0x1
 2796 0547 50       		.byte	0x50
 2797 0548 15       		.uleb128 0x15
 2798 0549 00000000 		.4byte	.LASF54
 2799 054d 01       		.byte	0x1
 2800 054e 8D08     		.2byte	0x88d
 2801 0550 B0040000 		.4byte	0x4b0
 2802 0554 00000020 		.4byte	0x20000000
 2803 0558 13       		.uleb128 0x13
 2804 0559 10000000 		.4byte	.LVL52
 2805 055d CB030000 		.4byte	0x3cb
 2806 0561 14       		.uleb128 0x14
 2807 0562 01       		.uleb128 0x1
 2808 0563 50       		.byte	0x50
 2809 0564 01       		.uleb128 0x1
 2810 0565 30       		.byte	0x30
 2811 0566 00       		.byte	0
 2812 0567 00       		.byte	0
 2813 0568 0E       		.uleb128 0xe
 2814 0569 CA040000 		.4byte	.LASF57
 2815 056d 01       		.byte	0x1
 2816 056e A608     		.2byte	0x8a6
 2817 0570 D2000000 		.4byte	0xd2
 2818 0574 00000000 		.4byte	.LFB22
 2819 0578 20000000 		.4byte	.LFE22-.LFB22
 2820 057c 01       		.uleb128 0x1
 2821 057d 9C       		.byte	0x9c
 2822 057e B2050000 		.4byte	0x5b2
 2823 0582 0B       		.uleb128 0xb
 2824 0583 B5010000 		.4byte	.LASF44
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 103


 2825 0587 01       		.byte	0x1
 2826 0588 A608     		.2byte	0x8a6
 2827 058a 6B000000 		.4byte	0x6b
 2828 058e AE020000 		.4byte	.LLST20
 2829 0592 15       		.uleb128 0x15
 2830 0593 00000000 		.4byte	.LASF54
 2831 0597 01       		.byte	0x1
 2832 0598 A808     		.2byte	0x8a8
 2833 059a B0040000 		.4byte	0x4b0
 2834 059e 00000020 		.4byte	0x20000000
 2835 05a2 13       		.uleb128 0x13
 2836 05a3 0E000000 		.4byte	.LVL58
 2837 05a7 CB030000 		.4byte	0x3cb
 2838 05ab 14       		.uleb128 0x14
 2839 05ac 01       		.uleb128 0x1
 2840 05ad 50       		.byte	0x50
 2841 05ae 01       		.uleb128 0x1
 2842 05af 30       		.byte	0x30
 2843 05b0 00       		.byte	0
 2844 05b1 00       		.byte	0
 2845 05b2 0A       		.uleb128 0xa
 2846 05b3 7C040000 		.4byte	.LASF58
 2847 05b7 01       		.byte	0x1
 2848 05b8 B908     		.2byte	0x8b9
 2849 05ba 00000000 		.4byte	.LFB23
 2850 05be 4C000000 		.4byte	.LFE23-.LFB23
 2851 05c2 01       		.uleb128 0x1
 2852 05c3 9C       		.byte	0x9c
 2853 05c4 51060000 		.4byte	0x651
 2854 05c8 0B       		.uleb128 0xb
 2855 05c9 B5010000 		.4byte	.LASF44
 2856 05cd 01       		.byte	0x1
 2857 05ce B908     		.2byte	0x8b9
 2858 05d0 6B000000 		.4byte	0x6b
 2859 05d4 CF020000 		.4byte	.LLST21
 2860 05d8 0B       		.uleb128 0xb
 2861 05d9 2A030000 		.4byte	.LASF59
 2862 05dd 01       		.byte	0x1
 2863 05de B908     		.2byte	0x8b9
 2864 05e0 6B000000 		.4byte	0x6b
 2865 05e4 F0020000 		.4byte	.LLST22
 2866 05e8 0C       		.uleb128 0xc
 2867 05e9 08010000 		.4byte	.LASF23
 2868 05ed 01       		.byte	0x1
 2869 05ee BB08     		.2byte	0x8bb
 2870 05f0 6B000000 		.4byte	0x6b
 2871 05f4 11030000 		.4byte	.LLST23
 2872 05f8 0C       		.uleb128 0xc
 2873 05f9 7B010000 		.4byte	.LASF60
 2874 05fd 01       		.byte	0x1
 2875 05fe BC08     		.2byte	0x8bc
 2876 0600 83000000 		.4byte	0x83
 2877 0604 24030000 		.4byte	.LLST24
 2878 0608 0C       		.uleb128 0xc
 2879 0609 05020000 		.4byte	.LASF61
 2880 060d 01       		.byte	0x1
 2881 060e BD08     		.2byte	0x8bd
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 104


 2882 0610 83000000 		.4byte	0x83
 2883 0614 37030000 		.4byte	.LLST25
 2884 0618 16       		.uleb128 0x16
 2885 0619 10000000 		.4byte	.LVL61
 2886 061d CB030000 		.4byte	0x3cb
 2887 0621 2B060000 		.4byte	0x62b
 2888 0625 14       		.uleb128 0x14
 2889 0626 01       		.uleb128 0x1
 2890 0627 50       		.byte	0x50
 2891 0628 01       		.uleb128 0x1
 2892 0629 30       		.byte	0x30
 2893 062a 00       		.byte	0
 2894 062b 16       		.uleb128 0x16
 2895 062c 1A000000 		.4byte	.LVL62
 2896 0630 CB030000 		.4byte	0x3cb
 2897 0634 3E060000 		.4byte	0x63e
 2898 0638 14       		.uleb128 0x14
 2899 0639 01       		.uleb128 0x1
 2900 063a 50       		.byte	0x50
 2901 063b 01       		.uleb128 0x1
 2902 063c 30       		.byte	0x30
 2903 063d 00       		.byte	0
 2904 063e 0D       		.uleb128 0xd
 2905 063f 26000000 		.4byte	.LVL64
 2906 0643 D50B0000 		.4byte	0xbd5
 2907 0647 0D       		.uleb128 0xd
 2908 0648 44000000 		.4byte	.LVL69
 2909 064c E00B0000 		.4byte	0xbe0
 2910 0650 00       		.byte	0
 2911 0651 0E       		.uleb128 0xe
 2912 0652 D9010000 		.4byte	.LASF62
 2913 0656 01       		.byte	0x1
 2914 0657 DB08     		.2byte	0x8db
 2915 0659 6B000000 		.4byte	0x6b
 2916 065d 00000000 		.4byte	.LFB24
 2917 0661 2C000000 		.4byte	.LFE24-.LFB24
 2918 0665 01       		.uleb128 0x1
 2919 0666 9C       		.byte	0x9c
 2920 0667 9B060000 		.4byte	0x69b
 2921 066b 0B       		.uleb128 0xb
 2922 066c B5010000 		.4byte	.LASF44
 2923 0670 01       		.byte	0x1
 2924 0671 DB08     		.2byte	0x8db
 2925 0673 6B000000 		.4byte	0x6b
 2926 0677 55030000 		.4byte	.LLST26
 2927 067b 0C       		.uleb128 0xc
 2928 067c 2A030000 		.4byte	.LASF59
 2929 0680 01       		.byte	0x1
 2930 0681 DD08     		.2byte	0x8dd
 2931 0683 6B000000 		.4byte	0x6b
 2932 0687 76030000 		.4byte	.LLST27
 2933 068b 13       		.uleb128 0x13
 2934 068c 0E000000 		.4byte	.LVL73
 2935 0690 CB030000 		.4byte	0x3cb
 2936 0694 14       		.uleb128 0x14
 2937 0695 01       		.uleb128 0x1
 2938 0696 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 105


 2939 0697 01       		.uleb128 0x1
 2940 0698 30       		.byte	0x30
 2941 0699 00       		.byte	0
 2942 069a 00       		.byte	0
 2943 069b 0F       		.uleb128 0xf
 2944 069c A6000000 		.4byte	.LASF63
 2945 06a0 01       		.byte	0x1
 2946 06a1 5609     		.2byte	0x956
 2947 06a3 00000000 		.4byte	.LFB31
 2948 06a7 18000000 		.4byte	.LFE31-.LFB31
 2949 06ab 01       		.uleb128 0x1
 2950 06ac 9C       		.byte	0x9c
 2951 06ad 0A       		.uleb128 0xa
 2952 06ae 3F060000 		.4byte	.LASF64
 2953 06b2 01       		.byte	0x1
 2954 06b3 6A09     		.2byte	0x96a
 2955 06b5 00000000 		.4byte	.LFB32
 2956 06b9 30000000 		.4byte	.LFE32-.LFB32
 2957 06bd 01       		.uleb128 0x1
 2958 06be 9C       		.byte	0x9c
 2959 06bf E6060000 		.4byte	0x6e6
 2960 06c3 0B       		.uleb128 0xb
 2961 06c4 D9040000 		.4byte	.LASF65
 2962 06c8 01       		.byte	0x1
 2963 06c9 6A09     		.2byte	0x96a
 2964 06cb 83000000 		.4byte	0x83
 2965 06cf 89030000 		.4byte	.LLST28
 2966 06d3 0D       		.uleb128 0xd
 2967 06d4 0E000000 		.4byte	.LVL78
 2968 06d8 F10B0000 		.4byte	0xbf1
 2969 06dc 0D       		.uleb128 0xd
 2970 06dd 26000000 		.4byte	.LVL80
 2971 06e1 F10B0000 		.4byte	0xbf1
 2972 06e5 00       		.byte	0
 2973 06e6 0A       		.uleb128 0xa
 2974 06e7 6A010000 		.4byte	.LASF66
 2975 06eb 01       		.byte	0x1
 2976 06ec 8109     		.2byte	0x981
 2977 06ee 00000000 		.4byte	.LFB33
 2978 06f2 14000000 		.4byte	.LFE33-.LFB33
 2979 06f6 01       		.uleb128 0x1
 2980 06f7 9C       		.byte	0x9c
 2981 06f8 16070000 		.4byte	0x716
 2982 06fc 0B       		.uleb128 0xb
 2983 06fd EF060000 		.4byte	.LASF67
 2984 0701 01       		.byte	0x1
 2985 0702 8109     		.2byte	0x981
 2986 0704 77000000 		.4byte	0x77
 2987 0708 A7030000 		.4byte	.LLST29
 2988 070c 0D       		.uleb128 0xd
 2989 070d 0C000000 		.4byte	.LVL84
 2990 0711 F10B0000 		.4byte	0xbf1
 2991 0715 00       		.byte	0
 2992 0716 0A       		.uleb128 0xa
 2993 0717 33030000 		.4byte	.LASF68
 2994 071b 01       		.byte	0x1
 2995 071c 4002     		.2byte	0x240
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 106


 2996 071e 00000000 		.4byte	.LFB7
 2997 0722 64010000 		.4byte	.LFE7-.LFB7
 2998 0726 01       		.uleb128 0x1
 2999 0727 9C       		.byte	0x9c
 3000 0728 17080000 		.4byte	0x817
 3001 072c 0B       		.uleb128 0xb
 3002 072d F7000000 		.4byte	.LASF69
 3003 0731 01       		.byte	0x1
 3004 0732 4002     		.2byte	0x240
 3005 0734 83000000 		.4byte	0x83
 3006 0738 C8030000 		.4byte	.LLST30
 3007 073c 0C       		.uleb128 0xc
 3008 073d 0F000000 		.4byte	.LASF70
 3009 0741 01       		.byte	0x1
 3010 0742 4602     		.2byte	0x246
 3011 0744 6B000000 		.4byte	0x6b
 3012 0748 1D040000 		.4byte	.LLST31
 3013 074c 0C       		.uleb128 0xc
 3014 074d 9F030000 		.4byte	.LASF71
 3015 0751 01       		.byte	0x1
 3016 0752 4702     		.2byte	0x247
 3017 0754 6B000000 		.4byte	0x6b
 3018 0758 5C040000 		.4byte	.LLST32
 3019 075c 0C       		.uleb128 0xc
 3020 075d DE060000 		.4byte	.LASF72
 3021 0761 01       		.byte	0x1
 3022 0762 4802     		.2byte	0x248
 3023 0764 6B000000 		.4byte	0x6b
 3024 0768 9B040000 		.4byte	.LLST33
 3025 076c 0C       		.uleb128 0xc
 3026 076d 5C000000 		.4byte	.LASF73
 3027 0771 01       		.byte	0x1
 3028 0772 4902     		.2byte	0x249
 3029 0774 6B000000 		.4byte	0x6b
 3030 0778 AE040000 		.4byte	.LLST34
 3031 077c 0C       		.uleb128 0xc
 3032 077d C3050000 		.4byte	.LASF74
 3033 0781 01       		.byte	0x1
 3034 0782 4A02     		.2byte	0x24a
 3035 0784 6B000000 		.4byte	0x6b
 3036 0788 CD040000 		.4byte	.LLST35
 3037 078c 0C       		.uleb128 0xc
 3038 078d 08010000 		.4byte	.LASF23
 3039 0791 01       		.byte	0x1
 3040 0792 5502     		.2byte	0x255
 3041 0794 6B000000 		.4byte	0x6b
 3042 0798 FF040000 		.4byte	.LLST36
 3043 079c 0D       		.uleb128 0xd
 3044 079d 10000000 		.4byte	.LVL86
 3045 07a1 D50B0000 		.4byte	0xbd5
 3046 07a5 16       		.uleb128 0x16
 3047 07a6 B0000000 		.4byte	.LVL104
 3048 07aa F10B0000 		.4byte	0xbf1
 3049 07ae B8070000 		.4byte	0x7b8
 3050 07b2 14       		.uleb128 0x14
 3051 07b3 01       		.uleb128 0x1
 3052 07b4 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 107


 3053 07b5 01       		.uleb128 0x1
 3054 07b6 35       		.byte	0x35
 3055 07b7 00       		.byte	0
 3056 07b8 16       		.uleb128 0x16
 3057 07b9 CE000000 		.4byte	.LVL107
 3058 07bd F10B0000 		.4byte	0xbf1
 3059 07c1 CB070000 		.4byte	0x7cb
 3060 07c5 14       		.uleb128 0x14
 3061 07c6 01       		.uleb128 0x1
 3062 07c7 50       		.byte	0x50
 3063 07c8 01       		.uleb128 0x1
 3064 07c9 35       		.byte	0x35
 3065 07ca 00       		.byte	0
 3066 07cb 16       		.uleb128 0x16
 3067 07cc EE000000 		.4byte	.LVL113
 3068 07d0 E6060000 		.4byte	0x6e6
 3069 07d4 DE070000 		.4byte	0x7de
 3070 07d8 14       		.uleb128 0x14
 3071 07d9 01       		.uleb128 0x1
 3072 07da 50       		.byte	0x50
 3073 07db 01       		.uleb128 0x1
 3074 07dc 35       		.byte	0x35
 3075 07dd 00       		.byte	0
 3076 07de 16       		.uleb128 0x16
 3077 07df 00010000 		.4byte	.LVL114
 3078 07e3 F10B0000 		.4byte	0xbf1
 3079 07e7 F1070000 		.4byte	0x7f1
 3080 07eb 14       		.uleb128 0x14
 3081 07ec 01       		.uleb128 0x1
 3082 07ed 50       		.byte	0x50
 3083 07ee 01       		.uleb128 0x1
 3084 07ef 35       		.byte	0x35
 3085 07f0 00       		.byte	0
 3086 07f1 16       		.uleb128 0x16
 3087 07f2 08010000 		.4byte	.LVL116
 3088 07f6 CB030000 		.4byte	0x3cb
 3089 07fa 04080000 		.4byte	0x804
 3090 07fe 14       		.uleb128 0x14
 3091 07ff 01       		.uleb128 0x1
 3092 0800 50       		.byte	0x50
 3093 0801 01       		.uleb128 0x1
 3094 0802 30       		.byte	0x30
 3095 0803 00       		.byte	0
 3096 0804 13       		.uleb128 0x13
 3097 0805 0E010000 		.4byte	.LVL117
 3098 0809 E00B0000 		.4byte	0xbe0
 3099 080d 14       		.uleb128 0x14
 3100 080e 01       		.uleb128 0x1
 3101 080f 50       		.byte	0x50
 3102 0810 04       		.uleb128 0x4
 3103 0811 91       		.byte	0x91
 3104 0812 5C       		.sleb128 -36
 3105 0813 94       		.byte	0x94
 3106 0814 01       		.byte	0x1
 3107 0815 00       		.byte	0
 3108 0816 00       		.byte	0
 3109 0817 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 108


 3110 0818 4A050000 		.4byte	.LASF75
 3111 081c 01       		.byte	0x1
 3112 081d D203     		.2byte	0x3d2
 3113 081f A4000000 		.4byte	0xa4
 3114 0823 00000000 		.4byte	.LFB8
 3115 0827 54000000 		.4byte	.LFE8-.LFB8
 3116 082b 01       		.uleb128 0x1
 3117 082c 9C       		.byte	0x9c
 3118 082d 6E080000 		.4byte	0x86e
 3119 0831 0B       		.uleb128 0xb
 3120 0832 9E060000 		.4byte	.LASF76
 3121 0836 01       		.byte	0x1
 3122 0837 D203     		.2byte	0x3d2
 3123 0839 83000000 		.4byte	0x83
 3124 083d 2B050000 		.4byte	.LLST37
 3125 0841 0C       		.uleb128 0xc
 3126 0842 6F030000 		.4byte	.LASF38
 3127 0846 01       		.byte	0x1
 3128 0847 D403     		.2byte	0x3d4
 3129 0849 A4000000 		.4byte	0xa4
 3130 084d 49050000 		.4byte	.LLST38
 3131 0851 16       		.uleb128 0x16
 3132 0852 2E000000 		.4byte	.LVL122
 3133 0856 E6060000 		.4byte	0x6e6
 3134 085a 64080000 		.4byte	0x864
 3135 085e 14       		.uleb128 0x14
 3136 085f 01       		.uleb128 0x1
 3137 0860 50       		.byte	0x50
 3138 0861 01       		.uleb128 0x1
 3139 0862 31       		.byte	0x31
 3140 0863 00       		.byte	0
 3141 0864 0D       		.uleb128 0xd
 3142 0865 32000000 		.4byte	.LVL123
 3143 0869 1A020000 		.4byte	0x21a
 3144 086d 00       		.byte	0
 3145 086e 0A       		.uleb128 0xa
 3146 086f A9040000 		.4byte	.LASF77
 3147 0873 01       		.byte	0x1
 3148 0874 B107     		.2byte	0x7b1
 3149 0876 00000000 		.4byte	.LFB12
 3150 087a 44000000 		.4byte	.LFE12-.LFB12
 3151 087e 01       		.uleb128 0x1
 3152 087f 9C       		.byte	0x9c
 3153 0880 B3080000 		.4byte	0x8b3
 3154 0884 0B       		.uleb128 0xb
 3155 0885 F9040000 		.4byte	.LASF78
 3156 0889 01       		.byte	0x1
 3157 088a B107     		.2byte	0x7b1
 3158 088c 83000000 		.4byte	0x83
 3159 0890 68050000 		.4byte	.LLST39
 3160 0894 16       		.uleb128 0x16
 3161 0895 2E000000 		.4byte	.LVL130
 3162 0899 E6060000 		.4byte	0x6e6
 3163 089d A9080000 		.4byte	0x8a9
 3164 08a1 14       		.uleb128 0x14
 3165 08a2 01       		.uleb128 0x1
 3166 08a3 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 109


 3167 08a4 03       		.uleb128 0x3
 3168 08a5 0A       		.byte	0xa
 3169 08a6 E803     		.2byte	0x3e8
 3170 08a8 00       		.byte	0
 3171 08a9 0D       		.uleb128 0xd
 3172 08aa 32000000 		.4byte	.LVL131
 3173 08ae 6B020000 		.4byte	0x26b
 3174 08b2 00       		.byte	0
 3175 08b3 17       		.uleb128 0x17
 3176 08b4 FC000000 		.4byte	.LASF79
 3177 08b8 01       		.byte	0x1
 3178 08b9 8F09     		.2byte	0x98f
 3179 08bb 00000000 		.4byte	.LFB34
 3180 08bf 4C000000 		.4byte	.LFE34-.LFB34
 3181 08c3 01       		.uleb128 0x1
 3182 08c4 9C       		.byte	0x9c
 3183 08c5 DA080000 		.4byte	0x8da
 3184 08c9 0B       		.uleb128 0xb
 3185 08ca F7000000 		.4byte	.LASF69
 3186 08ce 01       		.byte	0x1
 3187 08cf 8F09     		.2byte	0x98f
 3188 08d1 83000000 		.4byte	0x83
 3189 08d5 94050000 		.4byte	.LLST40
 3190 08d9 00       		.byte	0
 3191 08da 0F       		.uleb128 0xf
 3192 08db 90060000 		.4byte	.LASF80
 3193 08df 01       		.byte	0x1
 3194 08e0 FC09     		.2byte	0x9fc
 3195 08e2 00000000 		.4byte	.LFB38
 3196 08e6 10000000 		.4byte	.LFE38-.LFB38
 3197 08ea 01       		.uleb128 0x1
 3198 08eb 9C       		.byte	0x9c
 3199 08ec 0F       		.uleb128 0xf
 3200 08ed B6000000 		.4byte	.LASF81
 3201 08f1 01       		.byte	0x1
 3202 08f2 0C0A     		.2byte	0xa0c
 3203 08f4 00000000 		.4byte	.LFB39
 3204 08f8 10000000 		.4byte	.LFE39-.LFB39
 3205 08fc 01       		.uleb128 0x1
 3206 08fd 9C       		.byte	0x9c
 3207 08fe 0A       		.uleb128 0xa
 3208 08ff 74050000 		.4byte	.LASF82
 3209 0903 01       		.byte	0x1
 3210 0904 EB09     		.2byte	0x9eb
 3211 0906 00000000 		.4byte	.LFB37
 3212 090a 18000000 		.4byte	.LFE37-.LFB37
 3213 090e 01       		.uleb128 0x1
 3214 090f 9C       		.byte	0x9c
 3215 0910 1E090000 		.4byte	0x91e
 3216 0914 0D       		.uleb128 0xd
 3217 0915 06000000 		.4byte	.LVL136
 3218 0919 EC080000 		.4byte	0x8ec
 3219 091d 00       		.byte	0
 3220 091e 0F       		.uleb128 0xf
 3221 091f 47060000 		.4byte	.LASF83
 3222 0923 01       		.byte	0x1
 3223 0924 1C0A     		.2byte	0xa1c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 110


 3224 0926 00000000 		.4byte	.LFB40
 3225 092a 10000000 		.4byte	.LFE40-.LFB40
 3226 092e 01       		.uleb128 0x1
 3227 092f 9C       		.byte	0x9c
 3228 0930 0A       		.uleb128 0xa
 3229 0931 03070000 		.4byte	.LASF84
 3230 0935 01       		.byte	0x1
 3231 0936 2D0A     		.2byte	0xa2d
 3232 0938 00000000 		.4byte	.LFB41
 3233 093c 10000000 		.4byte	.LFE41-.LFB41
 3234 0940 01       		.uleb128 0x1
 3235 0941 9C       		.byte	0x9c
 3236 0942 57090000 		.4byte	0x957
 3237 0946 0B       		.uleb128 0xb
 3238 0947 05020000 		.4byte	.LASF61
 3239 094b 01       		.byte	0x1
 3240 094c 2D0A     		.2byte	0xa2d
 3241 094e 83000000 		.4byte	0x83
 3242 0952 B5050000 		.4byte	.LLST41
 3243 0956 00       		.byte	0
 3244 0957 11       		.uleb128 0x11
 3245 0958 17010000 		.4byte	.LASF86
 3246 095c 01       		.byte	0x1
 3247 095d 3D0A     		.2byte	0xa3d
 3248 095f 83000000 		.4byte	0x83
 3249 0963 00000000 		.4byte	.LFB42
 3250 0967 10000000 		.4byte	.LFE42-.LFB42
 3251 096b 01       		.uleb128 0x1
 3252 096c 9C       		.byte	0x9c
 3253 096d 11       		.uleb128 0x11
 3254 096e CE030000 		.4byte	.LASF87
 3255 0972 01       		.byte	0x1
 3256 0973 4D0A     		.2byte	0xa4d
 3257 0975 83000000 		.4byte	0x83
 3258 0979 00000000 		.4byte	.LFB43
 3259 097d 10000000 		.4byte	.LFE43-.LFB43
 3260 0981 01       		.uleb128 0x1
 3261 0982 9C       		.byte	0x9c
 3262 0983 0A       		.uleb128 0xa
 3263 0984 E2020000 		.4byte	.LASF88
 3264 0988 01       		.byte	0x1
 3265 0989 6D0A     		.2byte	0xa6d
 3266 098b 00000000 		.4byte	.LFB44
 3267 098f 20000000 		.4byte	.LFE44-.LFB44
 3268 0993 01       		.uleb128 0x1
 3269 0994 9C       		.byte	0x9c
 3270 0995 A8090000 		.4byte	0x9a8
 3271 0999 12       		.uleb128 0x12
 3272 099a 0B020000 		.4byte	.LASF89
 3273 099e 01       		.byte	0x1
 3274 099f 6D0A     		.2byte	0xa6d
 3275 09a1 83000000 		.4byte	0x83
 3276 09a5 01       		.uleb128 0x1
 3277 09a6 50       		.byte	0x50
 3278 09a7 00       		.byte	0
 3279 09a8 11       		.uleb128 0x11
 3280 09a9 25020000 		.4byte	.LASF90
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 111


 3281 09ad 01       		.byte	0x1
 3282 09ae 8A0A     		.2byte	0xa8a
 3283 09b0 83000000 		.4byte	0x83
 3284 09b4 00000000 		.4byte	.LFB45
 3285 09b8 10000000 		.4byte	.LFE45-.LFB45
 3286 09bc 01       		.uleb128 0x1
 3287 09bd 9C       		.byte	0x9c
 3288 09be 18       		.uleb128 0x18
 3289 09bf 16070000 		.4byte	.LASF110
 3290 09c3 01       		.byte	0x1
 3291 09c4 DF0A     		.2byte	0xadf
 3292 09c6 00000000 		.4byte	.LFB49
 3293 09ca 28000000 		.4byte	.LFE49-.LFB49
 3294 09ce 01       		.uleb128 0x1
 3295 09cf 9C       		.byte	0x9c
 3296 09d0 EC090000 		.4byte	0x9ec
 3297 09d4 19       		.uleb128 0x19
 3298 09d5 6900     		.ascii	"i\000"
 3299 09d7 01       		.byte	0x1
 3300 09d8 E10A     		.2byte	0xae1
 3301 09da 83000000 		.4byte	0x83
 3302 09de D6050000 		.4byte	.LLST42
 3303 09e2 0D       		.uleb128 0xd
 3304 09e3 06000000 		.4byte	.LVL140
 3305 09e7 A8090000 		.4byte	0x9a8
 3306 09eb 00       		.byte	0
 3307 09ec 0F       		.uleb128 0xf
 3308 09ed 48020000 		.4byte	.LASF91
 3309 09f1 01       		.byte	0x1
 3310 09f2 970A     		.2byte	0xa97
 3311 09f4 00000000 		.4byte	.LFB46
 3312 09f8 0C000000 		.4byte	.LFE46-.LFB46
 3313 09fc 01       		.uleb128 0x1
 3314 09fd 9C       		.byte	0x9c
 3315 09fe 17       		.uleb128 0x17
 3316 09ff F7010000 		.4byte	.LASF92
 3317 0a03 01       		.byte	0x1
 3318 0a04 CC09     		.2byte	0x9cc
 3319 0a06 00000000 		.4byte	.LFB36
 3320 0a0a 4C000000 		.4byte	.LFE36-.LFB36
 3321 0a0e 01       		.uleb128 0x1
 3322 0a0f 9C       		.byte	0x9c
 3323 0a10 730A0000 		.4byte	0xa73
 3324 0a14 19       		.uleb128 0x19
 3325 0a15 6900     		.ascii	"i\000"
 3326 0a17 01       		.byte	0x1
 3327 0a18 CE09     		.2byte	0x9ce
 3328 0a1a 83000000 		.4byte	0x83
 3329 0a1e F4050000 		.4byte	.LLST43
 3330 0a22 16       		.uleb128 0x16
 3331 0a23 1C000000 		.4byte	.LVL150
 3332 0a27 48040000 		.4byte	0x448
 3333 0a2b 3E0A0000 		.4byte	0xa3e
 3334 0a2f 14       		.uleb128 0x14
 3335 0a30 01       		.uleb128 0x1
 3336 0a31 51       		.byte	0x51
 3337 0a32 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 112


 3338 0a33 03       		.byte	0x3
 3339 0a34 00000000 		.4byte	CySysTickServiceCallbacks
 3340 0a38 14       		.uleb128 0x14
 3341 0a39 01       		.uleb128 0x1
 3342 0a3a 50       		.byte	0x50
 3343 0a3b 01       		.uleb128 0x1
 3344 0a3c 3F       		.byte	0x3f
 3345 0a3d 00       		.byte	0
 3346 0a3e 16       		.uleb128 0x16
 3347 0a3f 22000000 		.4byte	.LVL151
 3348 0a43 83090000 		.4byte	0x983
 3349 0a47 510A0000 		.4byte	0xa51
 3350 0a4b 14       		.uleb128 0x14
 3351 0a4c 01       		.uleb128 0x1
 3352 0a4d 50       		.byte	0x50
 3353 0a4e 01       		.uleb128 0x1
 3354 0a4f 31       		.byte	0x31
 3355 0a50 00       		.byte	0
 3356 0a51 0D       		.uleb128 0xd
 3357 0a52 32000000 		.4byte	.LVL153
 3358 0a56 30090000 		.4byte	0x930
 3359 0a5a 0D       		.uleb128 0xd
 3360 0a5b 36000000 		.4byte	.LVL154
 3361 0a5f EC090000 		.4byte	0x9ec
 3362 0a63 13       		.uleb128 0x13
 3363 0a64 3C000000 		.4byte	.LVL155
 3364 0a68 04030000 		.4byte	0x304
 3365 0a6c 14       		.uleb128 0x14
 3366 0a6d 01       		.uleb128 0x1
 3367 0a6e 50       		.byte	0x50
 3368 0a6f 01       		.uleb128 0x1
 3369 0a70 3F       		.byte	0x3f
 3370 0a71 00       		.byte	0
 3371 0a72 00       		.byte	0
 3372 0a73 0A       		.uleb128 0xa
 3373 0a74 60030000 		.4byte	.LASF93
 3374 0a78 01       		.byte	0x1
 3375 0a79 AF09     		.2byte	0x9af
 3376 0a7b 00000000 		.4byte	.LFB35
 3377 0a7f 20000000 		.4byte	.LFE35-.LFB35
 3378 0a83 01       		.uleb128 0x1
 3379 0a84 9C       		.byte	0x9c
 3380 0a85 9C0A0000 		.4byte	0xa9c
 3381 0a89 0D       		.uleb128 0xd
 3382 0a8a 0E000000 		.4byte	.LVL156
 3383 0a8e FE090000 		.4byte	0x9fe
 3384 0a92 0D       		.uleb128 0xd
 3385 0a93 18000000 		.4byte	.LVL157
 3386 0a97 FE080000 		.4byte	0x8fe
 3387 0a9b 00       		.byte	0
 3388 0a9c 0E       		.uleb128 0xe
 3389 0a9d 9B050000 		.4byte	.LASF94
 3390 0aa1 01       		.byte	0x1
 3391 0aa2 BA0A     		.2byte	0xaba
 3392 0aa4 EC000000 		.4byte	0xec
 3393 0aa8 00000000 		.4byte	.LFB47
 3394 0aac 10000000 		.4byte	.LFE47-.LFB47
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 113


 3395 0ab0 01       		.uleb128 0x1
 3396 0ab1 9C       		.byte	0x9c
 3397 0ab2 E30A0000 		.4byte	0xae3
 3398 0ab6 0B       		.uleb128 0xb
 3399 0ab7 B5010000 		.4byte	.LASF44
 3400 0abb 01       		.byte	0x1
 3401 0abc BA0A     		.2byte	0xaba
 3402 0abe 83000000 		.4byte	0x83
 3403 0ac2 13060000 		.4byte	.LLST44
 3404 0ac6 12       		.uleb128 0x12
 3405 0ac7 B4030000 		.4byte	.LASF95
 3406 0acb 01       		.byte	0x1
 3407 0acc BA0A     		.2byte	0xaba
 3408 0ace EC000000 		.4byte	0xec
 3409 0ad2 01       		.uleb128 0x1
 3410 0ad3 51       		.byte	0x51
 3411 0ad4 10       		.uleb128 0x10
 3412 0ad5 47000000 		.4byte	.LASF96
 3413 0ad9 01       		.byte	0x1
 3414 0ada BC0A     		.2byte	0xabc
 3415 0adc EC000000 		.4byte	0xec
 3416 0ae0 01       		.uleb128 0x1
 3417 0ae1 50       		.byte	0x50
 3418 0ae2 00       		.byte	0
 3419 0ae3 0E       		.uleb128 0xe
 3420 0ae4 40010000 		.4byte	.LASF97
 3421 0ae8 01       		.byte	0x1
 3422 0ae9 D20A     		.2byte	0xad2
 3423 0aeb EC000000 		.4byte	0xec
 3424 0aef 00000000 		.4byte	.LFB48
 3425 0af3 0C000000 		.4byte	.LFE48-.LFB48
 3426 0af7 01       		.uleb128 0x1
 3427 0af8 9C       		.byte	0x9c
 3428 0af9 0E0B0000 		.4byte	0xb0e
 3429 0afd 0B       		.uleb128 0xb
 3430 0afe B5010000 		.4byte	.LASF44
 3431 0b02 01       		.byte	0x1
 3432 0b03 D20A     		.2byte	0xad2
 3433 0b05 83000000 		.4byte	0x83
 3434 0b09 34060000 		.4byte	.LLST45
 3435 0b0d 00       		.byte	0
 3436 0b0e 0A       		.uleb128 0xa
 3437 0b0f 17020000 		.4byte	.LASF98
 3438 0b13 01       		.byte	0x1
 3439 0b14 FF0A     		.2byte	0xaff
 3440 0b16 00000000 		.4byte	.LFB50
 3441 0b1a 70000000 		.4byte	.LFE50-.LFB50
 3442 0b1e 01       		.uleb128 0x1
 3443 0b1f 9C       		.byte	0x9c
 3444 0b20 330B0000 		.4byte	0xb33
 3445 0b24 12       		.uleb128 0x12
 3446 0b25 D1050000 		.4byte	.LASF99
 3447 0b29 01       		.byte	0x1
 3448 0b2a FF0A     		.2byte	0xaff
 3449 0b2c 330B0000 		.4byte	0xb33
 3450 0b30 01       		.uleb128 0x1
 3451 0b31 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 114


 3452 0b32 00       		.byte	0
 3453 0b33 06       		.uleb128 0x6
 3454 0b34 04       		.byte	0x4
 3455 0b35 83000000 		.4byte	0x83
 3456 0b39 1A       		.uleb128 0x1a
 3457 0b3a EC000000 		.4byte	0xec
 3458 0b3e 490B0000 		.4byte	0xb49
 3459 0b42 1B       		.uleb128 0x1b
 3460 0b43 E5000000 		.4byte	0xe5
 3461 0b47 04       		.byte	0x4
 3462 0b48 00       		.byte	0
 3463 0b49 1C       		.uleb128 0x1c
 3464 0b4a B0050000 		.4byte	.LASF100
 3465 0b4e 01       		.byte	0x1
 3466 0b4f 22       		.byte	0x22
 3467 0b50 390B0000 		.4byte	0xb39
 3468 0b54 05       		.uleb128 0x5
 3469 0b55 03       		.byte	0x3
 3470 0b56 00000000 		.4byte	CySysTickCallbacks
 3471 0b5a 1D       		.uleb128 0x1d
 3472 0b5b 6E040000 		.4byte	.LASF101
 3473 0b5f 01       		.byte	0x1
 3474 0b60 1B       		.byte	0x1b
 3475 0b61 83000000 		.4byte	0x83
 3476 0b65 05       		.uleb128 0x5
 3477 0b66 03       		.byte	0x3
 3478 0b67 00000000 		.4byte	cydelayFreqHz
 3479 0b6b 1D       		.uleb128 0x1d
 3480 0b6c 5B010000 		.4byte	.LASF102
 3481 0b70 01       		.byte	0x1
 3482 0b71 1C       		.byte	0x1c
 3483 0b72 83000000 		.4byte	0x83
 3484 0b76 05       		.uleb128 0x5
 3485 0b77 03       		.byte	0x3
 3486 0b78 00000000 		.4byte	cydelayFreqKhz
 3487 0b7c 1D       		.uleb128 0x1d
 3488 0b7d 71060000 		.4byte	.LASF103
 3489 0b81 01       		.byte	0x1
 3490 0b82 1D       		.byte	0x1d
 3491 0b83 6B000000 		.4byte	0x6b
 3492 0b87 05       		.uleb128 0x5
 3493 0b88 03       		.byte	0x3
 3494 0b89 00000000 		.4byte	cydelayFreqMhz
 3495 0b8d 1D       		.uleb128 0x1d
 3496 0b8e EA010000 		.4byte	.LASF104
 3497 0b92 01       		.byte	0x1
 3498 0b93 1E       		.byte	0x1e
 3499 0b94 83000000 		.4byte	0x83
 3500 0b98 05       		.uleb128 0x5
 3501 0b99 03       		.byte	0x3
 3502 0b9a 00000000 		.4byte	cydelay32kMs
 3503 0b9e 1D       		.uleb128 0x1d
 3504 0b9f 88000000 		.4byte	.LASF105
 3505 0ba3 01       		.byte	0x1
 3506 0ba4 35       		.byte	0x35
 3507 0ba5 83000000 		.4byte	0x83
 3508 0ba9 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 115


 3509 0baa 03       		.byte	0x3
 3510 0bab 00000000 		.4byte	CySysTickInitVar
 3511 0baf 1A       		.uleb128 0x1a
 3512 0bb0 6B000000 		.4byte	0x6b
 3513 0bb4 BF0B0000 		.4byte	0xbbf
 3514 0bb8 1B       		.uleb128 0x1b
 3515 0bb9 E5000000 		.4byte	0xe5
 3516 0bbd 2D       		.byte	0x2d
 3517 0bbe 00       		.byte	0
 3518 0bbf 1D       		.uleb128 0x1d
 3519 0bc0 BD030000 		.4byte	.LASF106
 3520 0bc4 01       		.byte	0x1
 3521 0bc5 3A       		.byte	0x3a
 3522 0bc6 D00B0000 		.4byte	0xbd0
 3523 0bca 05       		.uleb128 0x5
 3524 0bcb 03       		.byte	0x3
 3525 0bcc 00000000 		.4byte	cyImoFreqMhz2Reg
 3526 0bd0 1E       		.uleb128 0x1e
 3527 0bd1 AF0B0000 		.4byte	0xbaf
 3528 0bd5 1F       		.uleb128 0x1f
 3529 0bd6 94020000 		.4byte	.LASF111
 3530 0bda 03       		.byte	0x3
 3531 0bdb E3       		.byte	0xe3
 3532 0bdc 6B000000 		.4byte	0x6b
 3533 0be0 20       		.uleb128 0x20
 3534 0be1 93040000 		.4byte	.LASF112
 3535 0be5 03       		.byte	0x3
 3536 0be6 E4       		.byte	0xe4
 3537 0be7 F10B0000 		.4byte	0xbf1
 3538 0beb 21       		.uleb128 0x21
 3539 0bec 6B000000 		.4byte	0x6b
 3540 0bf0 00       		.byte	0
 3541 0bf1 22       		.uleb128 0x22
 3542 0bf2 E6040000 		.4byte	.LASF113
 3543 0bf6 03       		.byte	0x3
 3544 0bf7 DA       		.byte	0xda
 3545 0bf8 21       		.uleb128 0x21
 3546 0bf9 83000000 		.4byte	0x83
 3547 0bfd 00       		.byte	0
 3548 0bfe 00       		.byte	0
 3549              		.section	.debug_abbrev,"",%progbits
 3550              	.Ldebug_abbrev0:
 3551 0000 01       		.uleb128 0x1
 3552 0001 11       		.uleb128 0x11
 3553 0002 01       		.byte	0x1
 3554 0003 25       		.uleb128 0x25
 3555 0004 0E       		.uleb128 0xe
 3556 0005 13       		.uleb128 0x13
 3557 0006 0B       		.uleb128 0xb
 3558 0007 03       		.uleb128 0x3
 3559 0008 0E       		.uleb128 0xe
 3560 0009 1B       		.uleb128 0x1b
 3561 000a 0E       		.uleb128 0xe
 3562 000b 55       		.uleb128 0x55
 3563 000c 17       		.uleb128 0x17
 3564 000d 11       		.uleb128 0x11
 3565 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 116


 3566 000f 10       		.uleb128 0x10
 3567 0010 17       		.uleb128 0x17
 3568 0011 00       		.byte	0
 3569 0012 00       		.byte	0
 3570 0013 02       		.uleb128 0x2
 3571 0014 24       		.uleb128 0x24
 3572 0015 00       		.byte	0
 3573 0016 0B       		.uleb128 0xb
 3574 0017 0B       		.uleb128 0xb
 3575 0018 3E       		.uleb128 0x3e
 3576 0019 0B       		.uleb128 0xb
 3577 001a 03       		.uleb128 0x3
 3578 001b 0E       		.uleb128 0xe
 3579 001c 00       		.byte	0
 3580 001d 00       		.byte	0
 3581 001e 03       		.uleb128 0x3
 3582 001f 24       		.uleb128 0x24
 3583 0020 00       		.byte	0
 3584 0021 0B       		.uleb128 0xb
 3585 0022 0B       		.uleb128 0xb
 3586 0023 3E       		.uleb128 0x3e
 3587 0024 0B       		.uleb128 0xb
 3588 0025 03       		.uleb128 0x3
 3589 0026 08       		.uleb128 0x8
 3590 0027 00       		.byte	0
 3591 0028 00       		.byte	0
 3592 0029 04       		.uleb128 0x4
 3593 002a 16       		.uleb128 0x16
 3594 002b 00       		.byte	0
 3595 002c 03       		.uleb128 0x3
 3596 002d 0E       		.uleb128 0xe
 3597 002e 3A       		.uleb128 0x3a
 3598 002f 0B       		.uleb128 0xb
 3599 0030 3B       		.uleb128 0x3b
 3600 0031 05       		.uleb128 0x5
 3601 0032 49       		.uleb128 0x49
 3602 0033 13       		.uleb128 0x13
 3603 0034 00       		.byte	0
 3604 0035 00       		.byte	0
 3605 0036 05       		.uleb128 0x5
 3606 0037 35       		.uleb128 0x35
 3607 0038 00       		.byte	0
 3608 0039 49       		.uleb128 0x49
 3609 003a 13       		.uleb128 0x13
 3610 003b 00       		.byte	0
 3611 003c 00       		.byte	0
 3612 003d 06       		.uleb128 0x6
 3613 003e 0F       		.uleb128 0xf
 3614 003f 00       		.byte	0
 3615 0040 0B       		.uleb128 0xb
 3616 0041 0B       		.uleb128 0xb
 3617 0042 49       		.uleb128 0x49
 3618 0043 13       		.uleb128 0x13
 3619 0044 00       		.byte	0
 3620 0045 00       		.byte	0
 3621 0046 07       		.uleb128 0x7
 3622 0047 15       		.uleb128 0x15
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 117


 3623 0048 00       		.byte	0
 3624 0049 27       		.uleb128 0x27
 3625 004a 19       		.uleb128 0x19
 3626 004b 00       		.byte	0
 3627 004c 00       		.byte	0
 3628 004d 08       		.uleb128 0x8
 3629 004e 16       		.uleb128 0x16
 3630 004f 00       		.byte	0
 3631 0050 03       		.uleb128 0x3
 3632 0051 0E       		.uleb128 0xe
 3633 0052 3A       		.uleb128 0x3a
 3634 0053 0B       		.uleb128 0xb
 3635 0054 3B       		.uleb128 0x3b
 3636 0055 0B       		.uleb128 0xb
 3637 0056 49       		.uleb128 0x49
 3638 0057 13       		.uleb128 0x13
 3639 0058 00       		.byte	0
 3640 0059 00       		.byte	0
 3641 005a 09       		.uleb128 0x9
 3642 005b 2E       		.uleb128 0x2e
 3643 005c 00       		.byte	0
 3644 005d 3F       		.uleb128 0x3f
 3645 005e 19       		.uleb128 0x19
 3646 005f 03       		.uleb128 0x3
 3647 0060 0E       		.uleb128 0xe
 3648 0061 3A       		.uleb128 0x3a
 3649 0062 0B       		.uleb128 0xb
 3650 0063 3B       		.uleb128 0x3b
 3651 0064 0B       		.uleb128 0xb
 3652 0065 27       		.uleb128 0x27
 3653 0066 19       		.uleb128 0x19
 3654 0067 11       		.uleb128 0x11
 3655 0068 01       		.uleb128 0x1
 3656 0069 12       		.uleb128 0x12
 3657 006a 06       		.uleb128 0x6
 3658 006b 40       		.uleb128 0x40
 3659 006c 18       		.uleb128 0x18
 3660 006d 9742     		.uleb128 0x2117
 3661 006f 19       		.uleb128 0x19
 3662 0070 00       		.byte	0
 3663 0071 00       		.byte	0
 3664 0072 0A       		.uleb128 0xa
 3665 0073 2E       		.uleb128 0x2e
 3666 0074 01       		.byte	0x1
 3667 0075 3F       		.uleb128 0x3f
 3668 0076 19       		.uleb128 0x19
 3669 0077 03       		.uleb128 0x3
 3670 0078 0E       		.uleb128 0xe
 3671 0079 3A       		.uleb128 0x3a
 3672 007a 0B       		.uleb128 0xb
 3673 007b 3B       		.uleb128 0x3b
 3674 007c 05       		.uleb128 0x5
 3675 007d 27       		.uleb128 0x27
 3676 007e 19       		.uleb128 0x19
 3677 007f 11       		.uleb128 0x11
 3678 0080 01       		.uleb128 0x1
 3679 0081 12       		.uleb128 0x12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 118


 3680 0082 06       		.uleb128 0x6
 3681 0083 40       		.uleb128 0x40
 3682 0084 18       		.uleb128 0x18
 3683 0085 9742     		.uleb128 0x2117
 3684 0087 19       		.uleb128 0x19
 3685 0088 01       		.uleb128 0x1
 3686 0089 13       		.uleb128 0x13
 3687 008a 00       		.byte	0
 3688 008b 00       		.byte	0
 3689 008c 0B       		.uleb128 0xb
 3690 008d 05       		.uleb128 0x5
 3691 008e 00       		.byte	0
 3692 008f 03       		.uleb128 0x3
 3693 0090 0E       		.uleb128 0xe
 3694 0091 3A       		.uleb128 0x3a
 3695 0092 0B       		.uleb128 0xb
 3696 0093 3B       		.uleb128 0x3b
 3697 0094 05       		.uleb128 0x5
 3698 0095 49       		.uleb128 0x49
 3699 0096 13       		.uleb128 0x13
 3700 0097 02       		.uleb128 0x2
 3701 0098 17       		.uleb128 0x17
 3702 0099 00       		.byte	0
 3703 009a 00       		.byte	0
 3704 009b 0C       		.uleb128 0xc
 3705 009c 34       		.uleb128 0x34
 3706 009d 00       		.byte	0
 3707 009e 03       		.uleb128 0x3
 3708 009f 0E       		.uleb128 0xe
 3709 00a0 3A       		.uleb128 0x3a
 3710 00a1 0B       		.uleb128 0xb
 3711 00a2 3B       		.uleb128 0x3b
 3712 00a3 05       		.uleb128 0x5
 3713 00a4 49       		.uleb128 0x49
 3714 00a5 13       		.uleb128 0x13
 3715 00a6 02       		.uleb128 0x2
 3716 00a7 17       		.uleb128 0x17
 3717 00a8 00       		.byte	0
 3718 00a9 00       		.byte	0
 3719 00aa 0D       		.uleb128 0xd
 3720 00ab 898201   		.uleb128 0x4109
 3721 00ae 00       		.byte	0
 3722 00af 11       		.uleb128 0x11
 3723 00b0 01       		.uleb128 0x1
 3724 00b1 31       		.uleb128 0x31
 3725 00b2 13       		.uleb128 0x13
 3726 00b3 00       		.byte	0
 3727 00b4 00       		.byte	0
 3728 00b5 0E       		.uleb128 0xe
 3729 00b6 2E       		.uleb128 0x2e
 3730 00b7 01       		.byte	0x1
 3731 00b8 3F       		.uleb128 0x3f
 3732 00b9 19       		.uleb128 0x19
 3733 00ba 03       		.uleb128 0x3
 3734 00bb 0E       		.uleb128 0xe
 3735 00bc 3A       		.uleb128 0x3a
 3736 00bd 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 119


 3737 00be 3B       		.uleb128 0x3b
 3738 00bf 05       		.uleb128 0x5
 3739 00c0 27       		.uleb128 0x27
 3740 00c1 19       		.uleb128 0x19
 3741 00c2 49       		.uleb128 0x49
 3742 00c3 13       		.uleb128 0x13
 3743 00c4 11       		.uleb128 0x11
 3744 00c5 01       		.uleb128 0x1
 3745 00c6 12       		.uleb128 0x12
 3746 00c7 06       		.uleb128 0x6
 3747 00c8 40       		.uleb128 0x40
 3748 00c9 18       		.uleb128 0x18
 3749 00ca 9742     		.uleb128 0x2117
 3750 00cc 19       		.uleb128 0x19
 3751 00cd 01       		.uleb128 0x1
 3752 00ce 13       		.uleb128 0x13
 3753 00cf 00       		.byte	0
 3754 00d0 00       		.byte	0
 3755 00d1 0F       		.uleb128 0xf
 3756 00d2 2E       		.uleb128 0x2e
 3757 00d3 00       		.byte	0
 3758 00d4 3F       		.uleb128 0x3f
 3759 00d5 19       		.uleb128 0x19
 3760 00d6 03       		.uleb128 0x3
 3761 00d7 0E       		.uleb128 0xe
 3762 00d8 3A       		.uleb128 0x3a
 3763 00d9 0B       		.uleb128 0xb
 3764 00da 3B       		.uleb128 0x3b
 3765 00db 05       		.uleb128 0x5
 3766 00dc 27       		.uleb128 0x27
 3767 00dd 19       		.uleb128 0x19
 3768 00de 11       		.uleb128 0x11
 3769 00df 01       		.uleb128 0x1
 3770 00e0 12       		.uleb128 0x12
 3771 00e1 06       		.uleb128 0x6
 3772 00e2 40       		.uleb128 0x40
 3773 00e3 18       		.uleb128 0x18
 3774 00e4 9742     		.uleb128 0x2117
 3775 00e6 19       		.uleb128 0x19
 3776 00e7 00       		.byte	0
 3777 00e8 00       		.byte	0
 3778 00e9 10       		.uleb128 0x10
 3779 00ea 34       		.uleb128 0x34
 3780 00eb 00       		.byte	0
 3781 00ec 03       		.uleb128 0x3
 3782 00ed 0E       		.uleb128 0xe
 3783 00ee 3A       		.uleb128 0x3a
 3784 00ef 0B       		.uleb128 0xb
 3785 00f0 3B       		.uleb128 0x3b
 3786 00f1 05       		.uleb128 0x5
 3787 00f2 49       		.uleb128 0x49
 3788 00f3 13       		.uleb128 0x13
 3789 00f4 02       		.uleb128 0x2
 3790 00f5 18       		.uleb128 0x18
 3791 00f6 00       		.byte	0
 3792 00f7 00       		.byte	0
 3793 00f8 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 120


 3794 00f9 2E       		.uleb128 0x2e
 3795 00fa 00       		.byte	0
 3796 00fb 3F       		.uleb128 0x3f
 3797 00fc 19       		.uleb128 0x19
 3798 00fd 03       		.uleb128 0x3
 3799 00fe 0E       		.uleb128 0xe
 3800 00ff 3A       		.uleb128 0x3a
 3801 0100 0B       		.uleb128 0xb
 3802 0101 3B       		.uleb128 0x3b
 3803 0102 05       		.uleb128 0x5
 3804 0103 27       		.uleb128 0x27
 3805 0104 19       		.uleb128 0x19
 3806 0105 49       		.uleb128 0x49
 3807 0106 13       		.uleb128 0x13
 3808 0107 11       		.uleb128 0x11
 3809 0108 01       		.uleb128 0x1
 3810 0109 12       		.uleb128 0x12
 3811 010a 06       		.uleb128 0x6
 3812 010b 40       		.uleb128 0x40
 3813 010c 18       		.uleb128 0x18
 3814 010d 9742     		.uleb128 0x2117
 3815 010f 19       		.uleb128 0x19
 3816 0110 00       		.byte	0
 3817 0111 00       		.byte	0
 3818 0112 12       		.uleb128 0x12
 3819 0113 05       		.uleb128 0x5
 3820 0114 00       		.byte	0
 3821 0115 03       		.uleb128 0x3
 3822 0116 0E       		.uleb128 0xe
 3823 0117 3A       		.uleb128 0x3a
 3824 0118 0B       		.uleb128 0xb
 3825 0119 3B       		.uleb128 0x3b
 3826 011a 05       		.uleb128 0x5
 3827 011b 49       		.uleb128 0x49
 3828 011c 13       		.uleb128 0x13
 3829 011d 02       		.uleb128 0x2
 3830 011e 18       		.uleb128 0x18
 3831 011f 00       		.byte	0
 3832 0120 00       		.byte	0
 3833 0121 13       		.uleb128 0x13
 3834 0122 898201   		.uleb128 0x4109
 3835 0125 01       		.byte	0x1
 3836 0126 11       		.uleb128 0x11
 3837 0127 01       		.uleb128 0x1
 3838 0128 31       		.uleb128 0x31
 3839 0129 13       		.uleb128 0x13
 3840 012a 00       		.byte	0
 3841 012b 00       		.byte	0
 3842 012c 14       		.uleb128 0x14
 3843 012d 8A8201   		.uleb128 0x410a
 3844 0130 00       		.byte	0
 3845 0131 02       		.uleb128 0x2
 3846 0132 18       		.uleb128 0x18
 3847 0133 9142     		.uleb128 0x2111
 3848 0135 18       		.uleb128 0x18
 3849 0136 00       		.byte	0
 3850 0137 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 121


 3851 0138 15       		.uleb128 0x15
 3852 0139 34       		.uleb128 0x34
 3853 013a 00       		.byte	0
 3854 013b 03       		.uleb128 0x3
 3855 013c 0E       		.uleb128 0xe
 3856 013d 3A       		.uleb128 0x3a
 3857 013e 0B       		.uleb128 0xb
 3858 013f 3B       		.uleb128 0x3b
 3859 0140 05       		.uleb128 0x5
 3860 0141 49       		.uleb128 0x49
 3861 0142 13       		.uleb128 0x13
 3862 0143 1C       		.uleb128 0x1c
 3863 0144 06       		.uleb128 0x6
 3864 0145 00       		.byte	0
 3865 0146 00       		.byte	0
 3866 0147 16       		.uleb128 0x16
 3867 0148 898201   		.uleb128 0x4109
 3868 014b 01       		.byte	0x1
 3869 014c 11       		.uleb128 0x11
 3870 014d 01       		.uleb128 0x1
 3871 014e 31       		.uleb128 0x31
 3872 014f 13       		.uleb128 0x13
 3873 0150 01       		.uleb128 0x1
 3874 0151 13       		.uleb128 0x13
 3875 0152 00       		.byte	0
 3876 0153 00       		.byte	0
 3877 0154 17       		.uleb128 0x17
 3878 0155 2E       		.uleb128 0x2e
 3879 0156 01       		.byte	0x1
 3880 0157 3F       		.uleb128 0x3f
 3881 0158 19       		.uleb128 0x19
 3882 0159 03       		.uleb128 0x3
 3883 015a 0E       		.uleb128 0xe
 3884 015b 3A       		.uleb128 0x3a
 3885 015c 0B       		.uleb128 0xb
 3886 015d 3B       		.uleb128 0x3b
 3887 015e 05       		.uleb128 0x5
 3888 015f 27       		.uleb128 0x27
 3889 0160 19       		.uleb128 0x19
 3890 0161 11       		.uleb128 0x11
 3891 0162 01       		.uleb128 0x1
 3892 0163 12       		.uleb128 0x12
 3893 0164 06       		.uleb128 0x6
 3894 0165 40       		.uleb128 0x40
 3895 0166 18       		.uleb128 0x18
 3896 0167 9642     		.uleb128 0x2116
 3897 0169 19       		.uleb128 0x19
 3898 016a 01       		.uleb128 0x1
 3899 016b 13       		.uleb128 0x13
 3900 016c 00       		.byte	0
 3901 016d 00       		.byte	0
 3902 016e 18       		.uleb128 0x18
 3903 016f 2E       		.uleb128 0x2e
 3904 0170 01       		.byte	0x1
 3905 0171 03       		.uleb128 0x3
 3906 0172 0E       		.uleb128 0xe
 3907 0173 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 122


 3908 0174 0B       		.uleb128 0xb
 3909 0175 3B       		.uleb128 0x3b
 3910 0176 05       		.uleb128 0x5
 3911 0177 27       		.uleb128 0x27
 3912 0178 19       		.uleb128 0x19
 3913 0179 11       		.uleb128 0x11
 3914 017a 01       		.uleb128 0x1
 3915 017b 12       		.uleb128 0x12
 3916 017c 06       		.uleb128 0x6
 3917 017d 40       		.uleb128 0x40
 3918 017e 18       		.uleb128 0x18
 3919 017f 9642     		.uleb128 0x2116
 3920 0181 19       		.uleb128 0x19
 3921 0182 01       		.uleb128 0x1
 3922 0183 13       		.uleb128 0x13
 3923 0184 00       		.byte	0
 3924 0185 00       		.byte	0
 3925 0186 19       		.uleb128 0x19
 3926 0187 34       		.uleb128 0x34
 3927 0188 00       		.byte	0
 3928 0189 03       		.uleb128 0x3
 3929 018a 08       		.uleb128 0x8
 3930 018b 3A       		.uleb128 0x3a
 3931 018c 0B       		.uleb128 0xb
 3932 018d 3B       		.uleb128 0x3b
 3933 018e 05       		.uleb128 0x5
 3934 018f 49       		.uleb128 0x49
 3935 0190 13       		.uleb128 0x13
 3936 0191 02       		.uleb128 0x2
 3937 0192 17       		.uleb128 0x17
 3938 0193 00       		.byte	0
 3939 0194 00       		.byte	0
 3940 0195 1A       		.uleb128 0x1a
 3941 0196 01       		.uleb128 0x1
 3942 0197 01       		.byte	0x1
 3943 0198 49       		.uleb128 0x49
 3944 0199 13       		.uleb128 0x13
 3945 019a 01       		.uleb128 0x1
 3946 019b 13       		.uleb128 0x13
 3947 019c 00       		.byte	0
 3948 019d 00       		.byte	0
 3949 019e 1B       		.uleb128 0x1b
 3950 019f 21       		.uleb128 0x21
 3951 01a0 00       		.byte	0
 3952 01a1 49       		.uleb128 0x49
 3953 01a2 13       		.uleb128 0x13
 3954 01a3 2F       		.uleb128 0x2f
 3955 01a4 0B       		.uleb128 0xb
 3956 01a5 00       		.byte	0
 3957 01a6 00       		.byte	0
 3958 01a7 1C       		.uleb128 0x1c
 3959 01a8 34       		.uleb128 0x34
 3960 01a9 00       		.byte	0
 3961 01aa 03       		.uleb128 0x3
 3962 01ab 0E       		.uleb128 0xe
 3963 01ac 3A       		.uleb128 0x3a
 3964 01ad 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 123


 3965 01ae 3B       		.uleb128 0x3b
 3966 01af 0B       		.uleb128 0xb
 3967 01b0 49       		.uleb128 0x49
 3968 01b1 13       		.uleb128 0x13
 3969 01b2 02       		.uleb128 0x2
 3970 01b3 18       		.uleb128 0x18
 3971 01b4 00       		.byte	0
 3972 01b5 00       		.byte	0
 3973 01b6 1D       		.uleb128 0x1d
 3974 01b7 34       		.uleb128 0x34
 3975 01b8 00       		.byte	0
 3976 01b9 03       		.uleb128 0x3
 3977 01ba 0E       		.uleb128 0xe
 3978 01bb 3A       		.uleb128 0x3a
 3979 01bc 0B       		.uleb128 0xb
 3980 01bd 3B       		.uleb128 0x3b
 3981 01be 0B       		.uleb128 0xb
 3982 01bf 49       		.uleb128 0x49
 3983 01c0 13       		.uleb128 0x13
 3984 01c1 3F       		.uleb128 0x3f
 3985 01c2 19       		.uleb128 0x19
 3986 01c3 02       		.uleb128 0x2
 3987 01c4 18       		.uleb128 0x18
 3988 01c5 00       		.byte	0
 3989 01c6 00       		.byte	0
 3990 01c7 1E       		.uleb128 0x1e
 3991 01c8 26       		.uleb128 0x26
 3992 01c9 00       		.byte	0
 3993 01ca 49       		.uleb128 0x49
 3994 01cb 13       		.uleb128 0x13
 3995 01cc 00       		.byte	0
 3996 01cd 00       		.byte	0
 3997 01ce 1F       		.uleb128 0x1f
 3998 01cf 2E       		.uleb128 0x2e
 3999 01d0 00       		.byte	0
 4000 01d1 3F       		.uleb128 0x3f
 4001 01d2 19       		.uleb128 0x19
 4002 01d3 03       		.uleb128 0x3
 4003 01d4 0E       		.uleb128 0xe
 4004 01d5 3A       		.uleb128 0x3a
 4005 01d6 0B       		.uleb128 0xb
 4006 01d7 3B       		.uleb128 0x3b
 4007 01d8 0B       		.uleb128 0xb
 4008 01d9 27       		.uleb128 0x27
 4009 01da 19       		.uleb128 0x19
 4010 01db 49       		.uleb128 0x49
 4011 01dc 13       		.uleb128 0x13
 4012 01dd 3C       		.uleb128 0x3c
 4013 01de 19       		.uleb128 0x19
 4014 01df 00       		.byte	0
 4015 01e0 00       		.byte	0
 4016 01e1 20       		.uleb128 0x20
 4017 01e2 2E       		.uleb128 0x2e
 4018 01e3 01       		.byte	0x1
 4019 01e4 3F       		.uleb128 0x3f
 4020 01e5 19       		.uleb128 0x19
 4021 01e6 03       		.uleb128 0x3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 124


 4022 01e7 0E       		.uleb128 0xe
 4023 01e8 3A       		.uleb128 0x3a
 4024 01e9 0B       		.uleb128 0xb
 4025 01ea 3B       		.uleb128 0x3b
 4026 01eb 0B       		.uleb128 0xb
 4027 01ec 27       		.uleb128 0x27
 4028 01ed 19       		.uleb128 0x19
 4029 01ee 3C       		.uleb128 0x3c
 4030 01ef 19       		.uleb128 0x19
 4031 01f0 01       		.uleb128 0x1
 4032 01f1 13       		.uleb128 0x13
 4033 01f2 00       		.byte	0
 4034 01f3 00       		.byte	0
 4035 01f4 21       		.uleb128 0x21
 4036 01f5 05       		.uleb128 0x5
 4037 01f6 00       		.byte	0
 4038 01f7 49       		.uleb128 0x49
 4039 01f8 13       		.uleb128 0x13
 4040 01f9 00       		.byte	0
 4041 01fa 00       		.byte	0
 4042 01fb 22       		.uleb128 0x22
 4043 01fc 2E       		.uleb128 0x2e
 4044 01fd 01       		.byte	0x1
 4045 01fe 3F       		.uleb128 0x3f
 4046 01ff 19       		.uleb128 0x19
 4047 0200 03       		.uleb128 0x3
 4048 0201 0E       		.uleb128 0xe
 4049 0202 3A       		.uleb128 0x3a
 4050 0203 0B       		.uleb128 0xb
 4051 0204 3B       		.uleb128 0x3b
 4052 0205 0B       		.uleb128 0xb
 4053 0206 27       		.uleb128 0x27
 4054 0207 19       		.uleb128 0x19
 4055 0208 3C       		.uleb128 0x3c
 4056 0209 19       		.uleb128 0x19
 4057 020a 00       		.byte	0
 4058 020b 00       		.byte	0
 4059 020c 00       		.byte	0
 4060              		.section	.debug_loc,"",%progbits
 4061              	.Ldebug_loc0:
 4062              	.LLST0:
 4063 0000 00000000 		.4byte	.LVL0
 4064 0004 07000000 		.4byte	.LVL1-1
 4065 0008 0100     		.2byte	0x1
 4066 000a 50       		.byte	0x50
 4067 000b 07000000 		.4byte	.LVL1-1
 4068 000f 1A000000 		.4byte	.LVL5
 4069 0013 0100     		.2byte	0x1
 4070 0015 54       		.byte	0x54
 4071 0016 1A000000 		.4byte	.LVL5
 4072 001a 20000000 		.4byte	.LFE4
 4073 001e 0400     		.2byte	0x4
 4074 0020 F3       		.byte	0xf3
 4075 0021 01       		.uleb128 0x1
 4076 0022 50       		.byte	0x50
 4077 0023 9F       		.byte	0x9f
 4078 0024 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 125


 4079 0028 00000000 		.4byte	0
 4080              	.LLST1:
 4081 002c 08000000 		.4byte	.LVL1
 4082 0030 19000000 		.4byte	.LVL4-1
 4083 0034 0100     		.2byte	0x1
 4084 0036 50       		.byte	0x50
 4085 0037 00000000 		.4byte	0
 4086 003b 00000000 		.4byte	0
 4087              	.LLST2:
 4088 003f 10000000 		.4byte	.LVL2
 4089 0043 14000000 		.4byte	.LVL3
 4090 0047 0100     		.2byte	0x1
 4091 0049 52       		.byte	0x52
 4092 004a 14000000 		.4byte	.LVL3
 4093 004e 19000000 		.4byte	.LVL4-1
 4094 0052 0100     		.2byte	0x1
 4095 0054 53       		.byte	0x53
 4096 0055 00000000 		.4byte	0
 4097 0059 00000000 		.4byte	0
 4098              	.LLST3:
 4099 005d 06000000 		.4byte	.LVL6
 4100 0061 11000000 		.4byte	.LVL8-1
 4101 0065 0100     		.2byte	0x1
 4102 0067 50       		.byte	0x50
 4103 0068 00000000 		.4byte	0
 4104 006c 00000000 		.4byte	0
 4105              	.LLST4:
 4106 0070 0E000000 		.4byte	.LVL7
 4107 0074 14000000 		.4byte	.LVL9
 4108 0078 0100     		.2byte	0x1
 4109 007a 54       		.byte	0x54
 4110 007b 14000000 		.4byte	.LVL9
 4111 007f 1C000000 		.4byte	.LFE5
 4112 0083 0100     		.2byte	0x1
 4113 0085 50       		.byte	0x50
 4114 0086 00000000 		.4byte	0
 4115 008a 00000000 		.4byte	0
 4116              	.LLST5:
 4117 008e 00000000 		.4byte	.LVL10
 4118 0092 07000000 		.4byte	.LVL11-1
 4119 0096 0100     		.2byte	0x1
 4120 0098 50       		.byte	0x50
 4121 0099 07000000 		.4byte	.LVL11-1
 4122 009d 0C000000 		.4byte	.LVL12
 4123 00a1 0100     		.2byte	0x1
 4124 00a3 54       		.byte	0x54
 4125 00a4 0C000000 		.4byte	.LVL12
 4126 00a8 28000000 		.4byte	.LFE6
 4127 00ac 0400     		.2byte	0x4
 4128 00ae F3       		.byte	0xf3
 4129 00af 01       		.uleb128 0x1
 4130 00b0 50       		.byte	0x50
 4131 00b1 9F       		.byte	0x9f
 4132 00b2 00000000 		.4byte	0
 4133 00b6 00000000 		.4byte	0
 4134              	.LLST6:
 4135 00ba 08000000 		.4byte	.LVL11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 126


 4136 00be 1D000000 		.4byte	.LVL13-1
 4137 00c2 0100     		.2byte	0x1
 4138 00c4 50       		.byte	0x50
 4139 00c5 00000000 		.4byte	0
 4140 00c9 00000000 		.4byte	0
 4141              	.LLST7:
 4142 00cd 00000000 		.4byte	.LVL15
 4143 00d1 04000000 		.4byte	.LVL16
 4144 00d5 0100     		.2byte	0x1
 4145 00d7 50       		.byte	0x50
 4146 00d8 04000000 		.4byte	.LVL16
 4147 00dc 14000000 		.4byte	.LFE16
 4148 00e0 0100     		.2byte	0x1
 4149 00e2 52       		.byte	0x52
 4150 00e3 00000000 		.4byte	0
 4151 00e7 00000000 		.4byte	0
 4152              	.LLST8:
 4153 00eb 00000000 		.4byte	.LVL21
 4154 00ef 04000000 		.4byte	.LVL22
 4155 00f3 0100     		.2byte	0x1
 4156 00f5 50       		.byte	0x50
 4157 00f6 04000000 		.4byte	.LVL22
 4158 00fa 14000000 		.4byte	.LFE25
 4159 00fe 0400     		.2byte	0x4
 4160 0100 F3       		.byte	0xf3
 4161 0101 01       		.uleb128 0x1
 4162 0102 50       		.byte	0x50
 4163 0103 9F       		.byte	0x9f
 4164 0104 00000000 		.4byte	0
 4165 0108 00000000 		.4byte	0
 4166              	.LLST9:
 4167 010c 00000000 		.4byte	.LVL23
 4168 0110 08000000 		.4byte	.LVL24
 4169 0114 0100     		.2byte	0x1
 4170 0116 50       		.byte	0x50
 4171 0117 08000000 		.4byte	.LVL24
 4172 011b 18000000 		.4byte	.LFE26
 4173 011f 0400     		.2byte	0x4
 4174 0121 F3       		.byte	0xf3
 4175 0122 01       		.uleb128 0x1
 4176 0123 50       		.byte	0x50
 4177 0124 9F       		.byte	0x9f
 4178 0125 00000000 		.4byte	0
 4179 0129 00000000 		.4byte	0
 4180              	.LLST10:
 4181 012d 00000000 		.4byte	.LVL25
 4182 0131 04000000 		.4byte	.LVL26
 4183 0135 0100     		.2byte	0x1
 4184 0137 50       		.byte	0x50
 4185 0138 04000000 		.4byte	.LVL26
 4186 013c 14000000 		.4byte	.LFE27
 4187 0140 0400     		.2byte	0x4
 4188 0142 F3       		.byte	0xf3
 4189 0143 01       		.uleb128 0x1
 4190 0144 50       		.byte	0x50
 4191 0145 9F       		.byte	0x9f
 4192 0146 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 127


 4193 014a 00000000 		.4byte	0
 4194              	.LLST11:
 4195 014e 00000000 		.4byte	.LVL27
 4196 0152 04000000 		.4byte	.LVL28
 4197 0156 0100     		.2byte	0x1
 4198 0158 50       		.byte	0x50
 4199 0159 04000000 		.4byte	.LVL28
 4200 015d 14000000 		.4byte	.LFE28
 4201 0161 0400     		.2byte	0x4
 4202 0163 F3       		.byte	0xf3
 4203 0164 01       		.uleb128 0x1
 4204 0165 50       		.byte	0x50
 4205 0166 9F       		.byte	0x9f
 4206 0167 00000000 		.4byte	0
 4207 016b 00000000 		.4byte	0
 4208              	.LLST12:
 4209 016f 00000000 		.4byte	.LVL29
 4210 0173 04000000 		.4byte	.LVL30
 4211 0177 0100     		.2byte	0x1
 4212 0179 50       		.byte	0x50
 4213 017a 04000000 		.4byte	.LVL30
 4214 017e 14000000 		.4byte	.LFE29
 4215 0182 0400     		.2byte	0x4
 4216 0184 F3       		.byte	0xf3
 4217 0185 01       		.uleb128 0x1
 4218 0186 50       		.byte	0x50
 4219 0187 9F       		.byte	0x9f
 4220 0188 00000000 		.4byte	0
 4221 018c 00000000 		.4byte	0
 4222              	.LLST13:
 4223 0190 00000000 		.4byte	.LVL32
 4224 0194 13000000 		.4byte	.LVL33-1
 4225 0198 0100     		.2byte	0x1
 4226 019a 50       		.byte	0x50
 4227 019b 13000000 		.4byte	.LVL33-1
 4228 019f 18000000 		.4byte	.LVL34
 4229 01a3 0100     		.2byte	0x1
 4230 01a5 54       		.byte	0x54
 4231 01a6 18000000 		.4byte	.LVL34
 4232 01aa 28000000 		.4byte	.LVL36
 4233 01ae 0400     		.2byte	0x4
 4234 01b0 F3       		.byte	0xf3
 4235 01b1 01       		.uleb128 0x1
 4236 01b2 50       		.byte	0x50
 4237 01b3 9F       		.byte	0x9f
 4238 01b4 28000000 		.4byte	.LVL36
 4239 01b8 2A000000 		.4byte	.LVL37
 4240 01bc 0100     		.2byte	0x1
 4241 01be 50       		.byte	0x50
 4242 01bf 2A000000 		.4byte	.LVL37
 4243 01c3 2E000000 		.4byte	.LVL38
 4244 01c7 0100     		.2byte	0x1
 4245 01c9 54       		.byte	0x54
 4246 01ca 2E000000 		.4byte	.LVL38
 4247 01ce 38000000 		.4byte	.LFE11
 4248 01d2 0400     		.2byte	0x4
 4249 01d4 F3       		.byte	0xf3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 128


 4250 01d5 01       		.uleb128 0x1
 4251 01d6 50       		.byte	0x50
 4252 01d7 9F       		.byte	0x9f
 4253 01d8 00000000 		.4byte	0
 4254 01dc 00000000 		.4byte	0
 4255              	.LLST14:
 4256 01e0 14000000 		.4byte	.LVL33
 4257 01e4 25000000 		.4byte	.LVL35-1
 4258 01e8 0100     		.2byte	0x1
 4259 01ea 50       		.byte	0x50
 4260 01eb 00000000 		.4byte	0
 4261 01ef 00000000 		.4byte	0
 4262              	.LLST15:
 4263 01f3 00000000 		.4byte	.LVL39
 4264 01f7 0C000000 		.4byte	.LVL41
 4265 01fb 0100     		.2byte	0x1
 4266 01fd 50       		.byte	0x50
 4267 01fe 0C000000 		.4byte	.LVL41
 4268 0202 20000000 		.4byte	.LFE19
 4269 0206 0400     		.2byte	0x4
 4270 0208 F3       		.byte	0xf3
 4271 0209 01       		.uleb128 0x1
 4272 020a 50       		.byte	0x50
 4273 020b 9F       		.byte	0x9f
 4274 020c 00000000 		.4byte	0
 4275 0210 00000000 		.4byte	0
 4276              	.LLST16:
 4277 0214 00000000 		.4byte	.LVL39
 4278 0218 0F000000 		.4byte	.LVL42-1
 4279 021c 0100     		.2byte	0x1
 4280 021e 51       		.byte	0x51
 4281 021f 0F000000 		.4byte	.LVL42-1
 4282 0223 1E000000 		.4byte	.LVL44
 4283 0227 0100     		.2byte	0x1
 4284 0229 55       		.byte	0x55
 4285 022a 1E000000 		.4byte	.LVL44
 4286 022e 20000000 		.4byte	.LFE19
 4287 0232 0400     		.2byte	0x4
 4288 0234 F3       		.byte	0xf3
 4289 0235 01       		.uleb128 0x1
 4290 0236 51       		.byte	0x51
 4291 0237 9F       		.byte	0x9f
 4292 0238 00000000 		.4byte	0
 4293 023c 00000000 		.4byte	0
 4294              	.LLST17:
 4295 0240 00000000 		.4byte	.LVL45
 4296 0244 0A000000 		.4byte	.LVL47
 4297 0248 0100     		.2byte	0x1
 4298 024a 50       		.byte	0x50
 4299 024b 0A000000 		.4byte	.LVL47
 4300 024f 1C000000 		.4byte	.LFE20
 4301 0253 0400     		.2byte	0x4
 4302 0255 F3       		.byte	0xf3
 4303 0256 01       		.uleb128 0x1
 4304 0257 50       		.byte	0x50
 4305 0258 9F       		.byte	0x9f
 4306 0259 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 129


 4307 025d 00000000 		.4byte	0
 4308              	.LLST18:
 4309 0261 00000000 		.4byte	.LVL49
 4310 0265 0C000000 		.4byte	.LVL51
 4311 0269 0100     		.2byte	0x1
 4312 026b 50       		.byte	0x50
 4313 026c 0C000000 		.4byte	.LVL51
 4314 0270 24000000 		.4byte	.LFE21
 4315 0274 0400     		.2byte	0x4
 4316 0276 F3       		.byte	0xf3
 4317 0277 01       		.uleb128 0x1
 4318 0278 50       		.byte	0x50
 4319 0279 9F       		.byte	0x9f
 4320 027a 00000000 		.4byte	0
 4321 027e 00000000 		.4byte	0
 4322              	.LLST19:
 4323 0282 00000000 		.4byte	.LVL49
 4324 0286 0F000000 		.4byte	.LVL52-1
 4325 028a 0100     		.2byte	0x1
 4326 028c 51       		.byte	0x51
 4327 028d 0F000000 		.4byte	.LVL52-1
 4328 0291 1C000000 		.4byte	.LVL54
 4329 0295 0100     		.2byte	0x1
 4330 0297 55       		.byte	0x55
 4331 0298 1C000000 		.4byte	.LVL54
 4332 029c 24000000 		.4byte	.LFE21
 4333 02a0 0400     		.2byte	0x4
 4334 02a2 F3       		.byte	0xf3
 4335 02a3 01       		.uleb128 0x1
 4336 02a4 51       		.byte	0x51
 4337 02a5 9F       		.byte	0x9f
 4338 02a6 00000000 		.4byte	0
 4339 02aa 00000000 		.4byte	0
 4340              	.LLST20:
 4341 02ae 00000000 		.4byte	.LVL55
 4342 02b2 0A000000 		.4byte	.LVL57
 4343 02b6 0100     		.2byte	0x1
 4344 02b8 50       		.byte	0x50
 4345 02b9 0A000000 		.4byte	.LVL57
 4346 02bd 20000000 		.4byte	.LFE22
 4347 02c1 0400     		.2byte	0x4
 4348 02c3 F3       		.byte	0xf3
 4349 02c4 01       		.uleb128 0x1
 4350 02c5 50       		.byte	0x50
 4351 02c6 9F       		.byte	0x9f
 4352 02c7 00000000 		.4byte	0
 4353 02cb 00000000 		.4byte	0
 4354              	.LLST21:
 4355 02cf 00000000 		.4byte	.LVL59
 4356 02d3 0C000000 		.4byte	.LVL60
 4357 02d7 0100     		.2byte	0x1
 4358 02d9 50       		.byte	0x50
 4359 02da 0C000000 		.4byte	.LVL60
 4360 02de 4C000000 		.4byte	.LFE23
 4361 02e2 0400     		.2byte	0x4
 4362 02e4 F3       		.byte	0xf3
 4363 02e5 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 130


 4364 02e6 50       		.byte	0x50
 4365 02e7 9F       		.byte	0x9f
 4366 02e8 00000000 		.4byte	0
 4367 02ec 00000000 		.4byte	0
 4368              	.LLST22:
 4369 02f0 00000000 		.4byte	.LVL59
 4370 02f4 0F000000 		.4byte	.LVL61-1
 4371 02f8 0100     		.2byte	0x1
 4372 02fa 51       		.byte	0x51
 4373 02fb 0F000000 		.4byte	.LVL61-1
 4374 02ff 4C000000 		.4byte	.LFE23
 4375 0303 0400     		.2byte	0x4
 4376 0305 F3       		.byte	0xf3
 4377 0306 01       		.uleb128 0x1
 4378 0307 51       		.byte	0x51
 4379 0308 9F       		.byte	0x9f
 4380 0309 00000000 		.4byte	0
 4381 030d 00000000 		.4byte	0
 4382              	.LLST23:
 4383 0311 26000000 		.4byte	.LVL64
 4384 0315 43000000 		.4byte	.LVL69-1
 4385 0319 0100     		.2byte	0x1
 4386 031b 50       		.byte	0x50
 4387 031c 00000000 		.4byte	0
 4388 0320 00000000 		.4byte	0
 4389              	.LLST24:
 4390 0324 22000000 		.4byte	.LVL63
 4391 0328 3C000000 		.4byte	.LVL67
 4392 032c 0100     		.2byte	0x1
 4393 032e 55       		.byte	0x55
 4394 032f 00000000 		.4byte	0
 4395 0333 00000000 		.4byte	0
 4396              	.LLST25:
 4397 0337 32000000 		.4byte	.LVL65
 4398 033b 3E000000 		.4byte	.LVL68
 4399 033f 0100     		.2byte	0x1
 4400 0341 53       		.byte	0x53
 4401 0342 3E000000 		.4byte	.LVL68
 4402 0346 44000000 		.4byte	.LVL70
 4403 034a 0100     		.2byte	0x1
 4404 034c 55       		.byte	0x55
 4405 034d 00000000 		.4byte	0
 4406 0351 00000000 		.4byte	0
 4407              	.LLST26:
 4408 0355 00000000 		.4byte	.LVL71
 4409 0359 0A000000 		.4byte	.LVL72
 4410 035d 0100     		.2byte	0x1
 4411 035f 50       		.byte	0x50
 4412 0360 0A000000 		.4byte	.LVL72
 4413 0364 2C000000 		.4byte	.LFE24
 4414 0368 0400     		.2byte	0x4
 4415 036a F3       		.byte	0xf3
 4416 036b 01       		.uleb128 0x1
 4417 036c 50       		.byte	0x50
 4418 036d 9F       		.byte	0x9f
 4419 036e 00000000 		.4byte	0
 4420 0372 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 131


 4421              	.LLST27:
 4422 0376 24000000 		.4byte	.LVL74
 4423 037a 26000000 		.4byte	.LVL75
 4424 037e 0100     		.2byte	0x1
 4425 0380 50       		.byte	0x50
 4426 0381 00000000 		.4byte	0
 4427 0385 00000000 		.4byte	0
 4428              	.LLST28:
 4429 0389 00000000 		.4byte	.LVL76
 4430 038d 06000000 		.4byte	.LVL77
 4431 0391 0100     		.2byte	0x1
 4432 0393 50       		.byte	0x50
 4433 0394 06000000 		.4byte	.LVL77
 4434 0398 26000000 		.4byte	.LVL81
 4435 039c 0100     		.2byte	0x1
 4436 039e 54       		.byte	0x54
 4437 039f 00000000 		.4byte	0
 4438 03a3 00000000 		.4byte	0
 4439              	.LLST29:
 4440 03a7 00000000 		.4byte	.LVL82
 4441 03ab 08000000 		.4byte	.LVL83
 4442 03af 0100     		.2byte	0x1
 4443 03b1 50       		.byte	0x50
 4444 03b2 08000000 		.4byte	.LVL83
 4445 03b6 14000000 		.4byte	.LFE33
 4446 03ba 0400     		.2byte	0x4
 4447 03bc F3       		.byte	0xf3
 4448 03bd 01       		.uleb128 0x1
 4449 03be 50       		.byte	0x50
 4450 03bf 9F       		.byte	0x9f
 4451 03c0 00000000 		.4byte	0
 4452 03c4 00000000 		.4byte	0
 4453              	.LLST30:
 4454 03c8 00000000 		.4byte	.LVL85
 4455 03cc 0F000000 		.4byte	.LVL86-1
 4456 03d0 0100     		.2byte	0x1
 4457 03d2 50       		.byte	0x50
 4458 03d3 0F000000 		.4byte	.LVL86-1
 4459 03d7 D4000000 		.4byte	.LVL108
 4460 03db 0100     		.2byte	0x1
 4461 03dd 54       		.byte	0x54
 4462 03de D4000000 		.4byte	.LVL108
 4463 03e2 02010000 		.4byte	.LVL115
 4464 03e6 0700     		.2byte	0x7
 4465 03e8 74       		.byte	0x74
 4466 03e9 B3998080 		.sleb128 -268432205
 4466      7F
 4467 03ee 9F       		.byte	0x9f
 4468 03ef 02010000 		.4byte	.LVL115
 4469 03f3 08010000 		.4byte	.LVL116
 4470 03f7 0100     		.2byte	0x1
 4471 03f9 54       		.byte	0x54
 4472 03fa 08010000 		.4byte	.LVL116
 4473 03fe 10010000 		.4byte	.LVL118
 4474 0402 0300     		.2byte	0x3
 4475 0404 77       		.byte	0x77
 4476 0405 03       		.sleb128 3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 132


 4477 0406 9F       		.byte	0x9f
 4478 0407 10010000 		.4byte	.LVL118
 4479 040b 64010000 		.4byte	.LFE7
 4480 040f 0400     		.2byte	0x4
 4481 0411 F3       		.byte	0xf3
 4482 0412 01       		.uleb128 0x1
 4483 0413 50       		.byte	0x50
 4484 0414 9F       		.byte	0x9f
 4485 0415 00000000 		.4byte	0
 4486 0419 00000000 		.4byte	0
 4487              	.LLST31:
 4488 041d 2A000000 		.4byte	.LVL88
 4489 0421 34000000 		.4byte	.LVL90
 4490 0425 0100     		.2byte	0x1
 4491 0427 5A       		.byte	0x5a
 4492 0428 46000000 		.4byte	.LVL91
 4493 042c 50000000 		.4byte	.LVL93
 4494 0430 0100     		.2byte	0x1
 4495 0432 5A       		.byte	0x5a
 4496 0433 62000000 		.4byte	.LVL94
 4497 0437 6C000000 		.4byte	.LVL96
 4498 043b 0100     		.2byte	0x1
 4499 043d 5A       		.byte	0x5a
 4500 043e 7E000000 		.4byte	.LVL97
 4501 0442 88000000 		.4byte	.LVL99
 4502 0446 0100     		.2byte	0x1
 4503 0448 5A       		.byte	0x5a
 4504 0449 90000000 		.4byte	.LVL100
 4505 044d 02010000 		.4byte	.LVL115
 4506 0451 0100     		.2byte	0x1
 4507 0453 5A       		.byte	0x5a
 4508 0454 00000000 		.4byte	0
 4509 0458 00000000 		.4byte	0
 4510              	.LLST32:
 4511 045c 32000000 		.4byte	.LVL89
 4512 0460 34000000 		.4byte	.LVL90
 4513 0464 0100     		.2byte	0x1
 4514 0466 59       		.byte	0x59
 4515 0467 4E000000 		.4byte	.LVL92
 4516 046b 50000000 		.4byte	.LVL93
 4517 046f 0100     		.2byte	0x1
 4518 0471 59       		.byte	0x59
 4519 0472 6A000000 		.4byte	.LVL95
 4520 0476 6C000000 		.4byte	.LVL96
 4521 047a 0100     		.2byte	0x1
 4522 047c 59       		.byte	0x59
 4523 047d 86000000 		.4byte	.LVL98
 4524 0481 88000000 		.4byte	.LVL99
 4525 0485 0100     		.2byte	0x1
 4526 0487 59       		.byte	0x59
 4527 0488 98000000 		.4byte	.LVL101
 4528 048c 02010000 		.4byte	.LVL115
 4529 0490 0100     		.2byte	0x1
 4530 0492 59       		.byte	0x59
 4531 0493 00000000 		.4byte	0
 4532 0497 00000000 		.4byte	0
 4533              	.LLST33:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 133


 4534 049b 9C000000 		.4byte	.LVL102
 4535 049f 02010000 		.4byte	.LVL115
 4536 04a3 0100     		.2byte	0x1
 4537 04a5 56       		.byte	0x56
 4538 04a6 00000000 		.4byte	0
 4539 04aa 00000000 		.4byte	0
 4540              	.LLST34:
 4541 04ae B0000000 		.4byte	.LVL104
 4542 04b2 B4000000 		.4byte	.LVL105
 4543 04b6 0200     		.2byte	0x2
 4544 04b8 49       		.byte	0x49
 4545 04b9 9F       		.byte	0x9f
 4546 04ba BC000000 		.4byte	.LVL106
 4547 04be 02010000 		.4byte	.LVL115
 4548 04c2 0100     		.2byte	0x1
 4549 04c4 55       		.byte	0x55
 4550 04c5 00000000 		.4byte	0
 4551 04c9 00000000 		.4byte	0
 4552              	.LLST35:
 4553 04cd D8000000 		.4byte	.LVL109
 4554 04d1 DE000000 		.4byte	.LVL110
 4555 04d5 0100     		.2byte	0x1
 4556 04d7 53       		.byte	0x53
 4557 04d8 DE000000 		.4byte	.LVL110
 4558 04dc E0000000 		.4byte	.LVL111
 4559 04e0 0400     		.2byte	0x4
 4560 04e2 72       		.byte	0x72
 4561 04e3 00       		.sleb128 0
 4562 04e4 06       		.byte	0x6
 4563 04e5 9F       		.byte	0x9f
 4564 04e6 E0000000 		.4byte	.LVL111
 4565 04ea E2000000 		.4byte	.LVL112
 4566 04ee 0700     		.2byte	0x7
 4567 04f0 0C       		.byte	0xc
 4568 04f1 28FF0B40 		.4byte	0x400bff28
 4569 04f5 06       		.byte	0x6
 4570 04f6 9F       		.byte	0x9f
 4571 04f7 00000000 		.4byte	0
 4572 04fb 00000000 		.4byte	0
 4573              	.LLST36:
 4574 04ff 12000000 		.4byte	.LVL87
 4575 0503 AA000000 		.4byte	.LVL103
 4576 0507 0200     		.2byte	0x2
 4577 0509 91       		.byte	0x91
 4578 050a 5C       		.sleb128 -36
 4579 050b B4000000 		.4byte	.LVL105
 4580 050f BC000000 		.4byte	.LVL106
 4581 0513 0200     		.2byte	0x2
 4582 0515 91       		.byte	0x91
 4583 0516 5C       		.sleb128 -36
 4584 0517 02010000 		.4byte	.LVL115
 4585 051b 08010000 		.4byte	.LVL116
 4586 051f 0200     		.2byte	0x2
 4587 0521 91       		.byte	0x91
 4588 0522 5C       		.sleb128 -36
 4589 0523 00000000 		.4byte	0
 4590 0527 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 134


 4591              	.LLST37:
 4592 052b 00000000 		.4byte	.LVL119
 4593 052f 26000000 		.4byte	.LVL121
 4594 0533 0100     		.2byte	0x1
 4595 0535 50       		.byte	0x50
 4596 0536 26000000 		.4byte	.LVL121
 4597 053a 42000000 		.4byte	.LVL126
 4598 053e 0100     		.2byte	0x1
 4599 0540 54       		.byte	0x54
 4600 0541 00000000 		.4byte	0
 4601 0545 00000000 		.4byte	0
 4602              	.LLST38:
 4603 0549 04000000 		.4byte	.LVL120
 4604 054d 42000000 		.4byte	.LVL125
 4605 0551 0200     		.2byte	0x2
 4606 0553 30       		.byte	0x30
 4607 0554 9F       		.byte	0x9f
 4608 0555 42000000 		.4byte	.LVL125
 4609 0559 54000000 		.4byte	.LFE8
 4610 055d 0100     		.2byte	0x1
 4611 055f 50       		.byte	0x50
 4612 0560 00000000 		.4byte	0
 4613 0564 00000000 		.4byte	0
 4614              	.LLST39:
 4615 0568 00000000 		.4byte	.LVL127
 4616 056c 14000000 		.4byte	.LVL128
 4617 0570 0100     		.2byte	0x1
 4618 0572 50       		.byte	0x50
 4619 0573 14000000 		.4byte	.LVL128
 4620 0577 18000000 		.4byte	.LVL129
 4621 057b 0100     		.2byte	0x1
 4622 057d 53       		.byte	0x53
 4623 057e 18000000 		.4byte	.LVL129
 4624 0582 44000000 		.4byte	.LFE12
 4625 0586 0400     		.2byte	0x4
 4626 0588 F3       		.byte	0xf3
 4627 0589 01       		.uleb128 0x1
 4628 058a 50       		.byte	0x50
 4629 058b 9F       		.byte	0x9f
 4630 058c 00000000 		.4byte	0
 4631 0590 00000000 		.4byte	0
 4632              	.LLST40:
 4633 0594 00000000 		.4byte	.LVL132
 4634 0598 1A000000 		.4byte	.LVL133
 4635 059c 0100     		.2byte	0x1
 4636 059e 50       		.byte	0x50
 4637 059f 1A000000 		.4byte	.LVL133
 4638 05a3 4C000000 		.4byte	.LFE34
 4639 05a7 0400     		.2byte	0x4
 4640 05a9 F3       		.byte	0xf3
 4641 05aa 01       		.uleb128 0x1
 4642 05ab 50       		.byte	0x50
 4643 05ac 9F       		.byte	0x9f
 4644 05ad 00000000 		.4byte	0
 4645 05b1 00000000 		.4byte	0
 4646              	.LLST41:
 4647 05b5 00000000 		.4byte	.LVL137
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 135


 4648 05b9 02000000 		.4byte	.LVL138
 4649 05bd 0100     		.2byte	0x1
 4650 05bf 50       		.byte	0x50
 4651 05c0 02000000 		.4byte	.LVL138
 4652 05c4 10000000 		.4byte	.LFE41
 4653 05c8 0400     		.2byte	0x4
 4654 05ca F3       		.byte	0xf3
 4655 05cb 01       		.uleb128 0x1
 4656 05cc 50       		.byte	0x50
 4657 05cd 9F       		.byte	0x9f
 4658 05ce 00000000 		.4byte	0
 4659 05d2 00000000 		.4byte	0
 4660              	.LLST42:
 4661 05d6 0C000000 		.4byte	.LVL141
 4662 05da 1C000000 		.4byte	.LVL144
 4663 05de 0100     		.2byte	0x1
 4664 05e0 54       		.byte	0x54
 4665 05e1 1E000000 		.4byte	.LVL145
 4666 05e5 22000000 		.4byte	.LVL146
 4667 05e9 0100     		.2byte	0x1
 4668 05eb 54       		.byte	0x54
 4669 05ec 00000000 		.4byte	0
 4670 05f0 00000000 		.4byte	0
 4671              	.LLST43:
 4672 05f4 02000000 		.4byte	.LVL147
 4673 05f8 06000000 		.4byte	.LVL148
 4674 05fc 0200     		.2byte	0x2
 4675 05fe 30       		.byte	0x30
 4676 05ff 9F       		.byte	0x9f
 4677 0600 06000000 		.4byte	.LVL148
 4678 0604 1B000000 		.4byte	.LVL150-1
 4679 0608 0100     		.2byte	0x1
 4680 060a 53       		.byte	0x53
 4681 060b 00000000 		.4byte	0
 4682 060f 00000000 		.4byte	0
 4683              	.LLST44:
 4684 0613 00000000 		.4byte	.LVL158
 4685 0617 06000000 		.4byte	.LVL159
 4686 061b 0100     		.2byte	0x1
 4687 061d 50       		.byte	0x50
 4688 061e 06000000 		.4byte	.LVL159
 4689 0622 10000000 		.4byte	.LFE47
 4690 0626 0400     		.2byte	0x4
 4691 0628 F3       		.byte	0xf3
 4692 0629 01       		.uleb128 0x1
 4693 062a 50       		.byte	0x50
 4694 062b 9F       		.byte	0x9f
 4695 062c 00000000 		.4byte	0
 4696 0630 00000000 		.4byte	0
 4697              	.LLST45:
 4698 0634 00000000 		.4byte	.LVL160
 4699 0638 02000000 		.4byte	.LVL161
 4700 063c 0100     		.2byte	0x1
 4701 063e 50       		.byte	0x50
 4702 063f 02000000 		.4byte	.LVL161
 4703 0643 0C000000 		.4byte	.LFE48
 4704 0647 0400     		.2byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 136


 4705 0649 F3       		.byte	0xf3
 4706 064a 01       		.uleb128 0x1
 4707 064b 50       		.byte	0x50
 4708 064c 9F       		.byte	0x9f
 4709 064d 00000000 		.4byte	0
 4710 0651 00000000 		.4byte	0
 4711              		.section	.debug_aranges,"",%progbits
 4712 0000 9C010000 		.4byte	0x19c
 4713 0004 0200     		.2byte	0x2
 4714 0006 00000000 		.4byte	.Ldebug_info0
 4715 000a 04       		.byte	0x4
 4716 000b 00       		.byte	0
 4717 000c 0000     		.2byte	0
 4718 000e 0000     		.2byte	0
 4719 0010 00000000 		.4byte	.LFB2
 4720 0014 14000000 		.4byte	.LFE2-.LFB2
 4721 0018 00000000 		.4byte	.LFB3
 4722 001c 10000000 		.4byte	.LFE3-.LFB3
 4723 0020 00000000 		.4byte	.LFB4
 4724 0024 20000000 		.4byte	.LFE4-.LFB4
 4725 0028 00000000 		.4byte	.LFB5
 4726 002c 1C000000 		.4byte	.LFE5-.LFB5
 4727 0030 00000000 		.4byte	.LFB6
 4728 0034 28000000 		.4byte	.LFE6-.LFB6
 4729 0038 00000000 		.4byte	.LFB9
 4730 003c 24000000 		.4byte	.LFE9-.LFB9
 4731 0040 00000000 		.4byte	.LFB10
 4732 0044 10000000 		.4byte	.LFE10-.LFB10
 4733 0048 00000000 		.4byte	.LFB13
 4734 004c 20000000 		.4byte	.LFE13-.LFB13
 4735 0050 00000000 		.4byte	.LFB14
 4736 0054 10000000 		.4byte	.LFE14-.LFB14
 4737 0058 00000000 		.4byte	.LFB15
 4738 005c 0C000000 		.4byte	.LFE15-.LFB15
 4739 0060 00000000 		.4byte	.LFB16
 4740 0064 14000000 		.4byte	.LFE16-.LFB16
 4741 0068 00000000 		.4byte	.LFB17
 4742 006c 10000000 		.4byte	.LFE17-.LFB17
 4743 0070 00000000 		.4byte	.LFB18
 4744 0074 0C000000 		.4byte	.LFE18-.LFB18
 4745 0078 00000000 		.4byte	.LFB25
 4746 007c 14000000 		.4byte	.LFE25-.LFB25
 4747 0080 00000000 		.4byte	.LFB26
 4748 0084 18000000 		.4byte	.LFE26-.LFB26
 4749 0088 00000000 		.4byte	.LFB27
 4750 008c 14000000 		.4byte	.LFE27-.LFB27
 4751 0090 00000000 		.4byte	.LFB28
 4752 0094 14000000 		.4byte	.LFE28-.LFB28
 4753 0098 00000000 		.4byte	.LFB29
 4754 009c 14000000 		.4byte	.LFE29-.LFB29
 4755 00a0 00000000 		.4byte	.LFB30
 4756 00a4 04000000 		.4byte	.LFE30-.LFB30
 4757 00a8 00000000 		.4byte	.LFB11
 4758 00ac 38000000 		.4byte	.LFE11-.LFB11
 4759 00b0 00000000 		.4byte	.LFB19
 4760 00b4 20000000 		.4byte	.LFE19-.LFB19
 4761 00b8 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 137


 4762 00bc 1C000000 		.4byte	.LFE20-.LFB20
 4763 00c0 00000000 		.4byte	.LFB21
 4764 00c4 24000000 		.4byte	.LFE21-.LFB21
 4765 00c8 00000000 		.4byte	.LFB22
 4766 00cc 20000000 		.4byte	.LFE22-.LFB22
 4767 00d0 00000000 		.4byte	.LFB23
 4768 00d4 4C000000 		.4byte	.LFE23-.LFB23
 4769 00d8 00000000 		.4byte	.LFB24
 4770 00dc 2C000000 		.4byte	.LFE24-.LFB24
 4771 00e0 00000000 		.4byte	.LFB31
 4772 00e4 18000000 		.4byte	.LFE31-.LFB31
 4773 00e8 00000000 		.4byte	.LFB32
 4774 00ec 30000000 		.4byte	.LFE32-.LFB32
 4775 00f0 00000000 		.4byte	.LFB33
 4776 00f4 14000000 		.4byte	.LFE33-.LFB33
 4777 00f8 00000000 		.4byte	.LFB7
 4778 00fc 64010000 		.4byte	.LFE7-.LFB7
 4779 0100 00000000 		.4byte	.LFB8
 4780 0104 54000000 		.4byte	.LFE8-.LFB8
 4781 0108 00000000 		.4byte	.LFB12
 4782 010c 44000000 		.4byte	.LFE12-.LFB12
 4783 0110 00000000 		.4byte	.LFB34
 4784 0114 4C000000 		.4byte	.LFE34-.LFB34
 4785 0118 00000000 		.4byte	.LFB38
 4786 011c 10000000 		.4byte	.LFE38-.LFB38
 4787 0120 00000000 		.4byte	.LFB39
 4788 0124 10000000 		.4byte	.LFE39-.LFB39
 4789 0128 00000000 		.4byte	.LFB37
 4790 012c 18000000 		.4byte	.LFE37-.LFB37
 4791 0130 00000000 		.4byte	.LFB40
 4792 0134 10000000 		.4byte	.LFE40-.LFB40
 4793 0138 00000000 		.4byte	.LFB41
 4794 013c 10000000 		.4byte	.LFE41-.LFB41
 4795 0140 00000000 		.4byte	.LFB42
 4796 0144 10000000 		.4byte	.LFE42-.LFB42
 4797 0148 00000000 		.4byte	.LFB43
 4798 014c 10000000 		.4byte	.LFE43-.LFB43
 4799 0150 00000000 		.4byte	.LFB44
 4800 0154 20000000 		.4byte	.LFE44-.LFB44
 4801 0158 00000000 		.4byte	.LFB45
 4802 015c 10000000 		.4byte	.LFE45-.LFB45
 4803 0160 00000000 		.4byte	.LFB49
 4804 0164 28000000 		.4byte	.LFE49-.LFB49
 4805 0168 00000000 		.4byte	.LFB46
 4806 016c 0C000000 		.4byte	.LFE46-.LFB46
 4807 0170 00000000 		.4byte	.LFB36
 4808 0174 4C000000 		.4byte	.LFE36-.LFB36
 4809 0178 00000000 		.4byte	.LFB35
 4810 017c 20000000 		.4byte	.LFE35-.LFB35
 4811 0180 00000000 		.4byte	.LFB47
 4812 0184 10000000 		.4byte	.LFE47-.LFB47
 4813 0188 00000000 		.4byte	.LFB48
 4814 018c 0C000000 		.4byte	.LFE48-.LFB48
 4815 0190 00000000 		.4byte	.LFB50
 4816 0194 70000000 		.4byte	.LFE50-.LFB50
 4817 0198 00000000 		.4byte	0
 4818 019c 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 138


 4819              		.section	.debug_ranges,"",%progbits
 4820              	.Ldebug_ranges0:
 4821 0000 00000000 		.4byte	.LFB2
 4822 0004 14000000 		.4byte	.LFE2
 4823 0008 00000000 		.4byte	.LFB3
 4824 000c 10000000 		.4byte	.LFE3
 4825 0010 00000000 		.4byte	.LFB4
 4826 0014 20000000 		.4byte	.LFE4
 4827 0018 00000000 		.4byte	.LFB5
 4828 001c 1C000000 		.4byte	.LFE5
 4829 0020 00000000 		.4byte	.LFB6
 4830 0024 28000000 		.4byte	.LFE6
 4831 0028 00000000 		.4byte	.LFB9
 4832 002c 24000000 		.4byte	.LFE9
 4833 0030 00000000 		.4byte	.LFB10
 4834 0034 10000000 		.4byte	.LFE10
 4835 0038 00000000 		.4byte	.LFB13
 4836 003c 20000000 		.4byte	.LFE13
 4837 0040 00000000 		.4byte	.LFB14
 4838 0044 10000000 		.4byte	.LFE14
 4839 0048 00000000 		.4byte	.LFB15
 4840 004c 0C000000 		.4byte	.LFE15
 4841 0050 00000000 		.4byte	.LFB16
 4842 0054 14000000 		.4byte	.LFE16
 4843 0058 00000000 		.4byte	.LFB17
 4844 005c 10000000 		.4byte	.LFE17
 4845 0060 00000000 		.4byte	.LFB18
 4846 0064 0C000000 		.4byte	.LFE18
 4847 0068 00000000 		.4byte	.LFB25
 4848 006c 14000000 		.4byte	.LFE25
 4849 0070 00000000 		.4byte	.LFB26
 4850 0074 18000000 		.4byte	.LFE26
 4851 0078 00000000 		.4byte	.LFB27
 4852 007c 14000000 		.4byte	.LFE27
 4853 0080 00000000 		.4byte	.LFB28
 4854 0084 14000000 		.4byte	.LFE28
 4855 0088 00000000 		.4byte	.LFB29
 4856 008c 14000000 		.4byte	.LFE29
 4857 0090 00000000 		.4byte	.LFB30
 4858 0094 04000000 		.4byte	.LFE30
 4859 0098 00000000 		.4byte	.LFB11
 4860 009c 38000000 		.4byte	.LFE11
 4861 00a0 00000000 		.4byte	.LFB19
 4862 00a4 20000000 		.4byte	.LFE19
 4863 00a8 00000000 		.4byte	.LFB20
 4864 00ac 1C000000 		.4byte	.LFE20
 4865 00b0 00000000 		.4byte	.LFB21
 4866 00b4 24000000 		.4byte	.LFE21
 4867 00b8 00000000 		.4byte	.LFB22
 4868 00bc 20000000 		.4byte	.LFE22
 4869 00c0 00000000 		.4byte	.LFB23
 4870 00c4 4C000000 		.4byte	.LFE23
 4871 00c8 00000000 		.4byte	.LFB24
 4872 00cc 2C000000 		.4byte	.LFE24
 4873 00d0 00000000 		.4byte	.LFB31
 4874 00d4 18000000 		.4byte	.LFE31
 4875 00d8 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 139


 4876 00dc 30000000 		.4byte	.LFE32
 4877 00e0 00000000 		.4byte	.LFB33
 4878 00e4 14000000 		.4byte	.LFE33
 4879 00e8 00000000 		.4byte	.LFB7
 4880 00ec 64010000 		.4byte	.LFE7
 4881 00f0 00000000 		.4byte	.LFB8
 4882 00f4 54000000 		.4byte	.LFE8
 4883 00f8 00000000 		.4byte	.LFB12
 4884 00fc 44000000 		.4byte	.LFE12
 4885 0100 00000000 		.4byte	.LFB34
 4886 0104 4C000000 		.4byte	.LFE34
 4887 0108 00000000 		.4byte	.LFB38
 4888 010c 10000000 		.4byte	.LFE38
 4889 0110 00000000 		.4byte	.LFB39
 4890 0114 10000000 		.4byte	.LFE39
 4891 0118 00000000 		.4byte	.LFB37
 4892 011c 18000000 		.4byte	.LFE37
 4893 0120 00000000 		.4byte	.LFB40
 4894 0124 10000000 		.4byte	.LFE40
 4895 0128 00000000 		.4byte	.LFB41
 4896 012c 10000000 		.4byte	.LFE41
 4897 0130 00000000 		.4byte	.LFB42
 4898 0134 10000000 		.4byte	.LFE42
 4899 0138 00000000 		.4byte	.LFB43
 4900 013c 10000000 		.4byte	.LFE43
 4901 0140 00000000 		.4byte	.LFB44
 4902 0144 20000000 		.4byte	.LFE44
 4903 0148 00000000 		.4byte	.LFB45
 4904 014c 10000000 		.4byte	.LFE45
 4905 0150 00000000 		.4byte	.LFB49
 4906 0154 28000000 		.4byte	.LFE49
 4907 0158 00000000 		.4byte	.LFB46
 4908 015c 0C000000 		.4byte	.LFE46
 4909 0160 00000000 		.4byte	.LFB36
 4910 0164 4C000000 		.4byte	.LFE36
 4911 0168 00000000 		.4byte	.LFB35
 4912 016c 20000000 		.4byte	.LFE35
 4913 0170 00000000 		.4byte	.LFB47
 4914 0174 10000000 		.4byte	.LFE47
 4915 0178 00000000 		.4byte	.LFB48
 4916 017c 0C000000 		.4byte	.LFE48
 4917 0180 00000000 		.4byte	.LFB50
 4918 0184 70000000 		.4byte	.LFE50
 4919 0188 00000000 		.4byte	0
 4920 018c 00000000 		.4byte	0
 4921              		.section	.debug_line,"",%progbits
 4922              	.Ldebug_line0:
 4923 0000 C3040000 		.section	.debug_str,"MS",%progbits,1
 4923      02004F00 
 4923      00000201 
 4923      FB0E0D00 
 4923      01010101 
 4924              	.LASF54:
 4925 0000 72616D56 		.ascii	"ramVectorTable\000"
 4925      6563746F 
 4925      72546162 
 4925      6C6500
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 140


 4926              	.LASF70:
 4927 000f 62675472 		.ascii	"bgTrim4\000"
 4927      696D3400 
 4928              	.LASF10:
 4929 0017 75696E74 		.ascii	"uint16\000"
 4929      313600
 4930              	.LASF40:
 4931 001e 696E7453 		.ascii	"intState\000"
 4931      74617465 
 4931      00
 4932              	.LASF26:
 4933 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4933      73436C6B 
 4933      57726974 
 4933      65486663 
 4933      6C6B4469 
 4934              	.LASF53:
 4935 0040 6F6C6449 		.ascii	"oldIsr\000"
 4935      737200
 4936              	.LASF96:
 4937 0047 72657456 		.ascii	"retVal\000"
 4937      616C00
 4938              	.LASF39:
 4939 004e 43794469 		.ascii	"CyDisableInts\000"
 4939      7361626C 
 4939      65496E74 
 4939      7300
 4940              	.LASF73:
 4941 005c 63757272 		.ascii	"currentImoTrim2Value\000"
 4941      656E7449 
 4941      6D6F5472 
 4941      696D3256 
 4941      616C7565 
 4942              	.LASF7:
 4943 0071 6C6F6E67 		.ascii	"long long unsigned int\000"
 4943      206C6F6E 
 4943      6720756E 
 4943      7369676E 
 4943      65642069 
 4944              	.LASF105:
 4945 0088 43795379 		.ascii	"CySysTickInitVar\000"
 4945      73546963 
 4945      6B496E69 
 4945      74566172 
 4945      00
 4946              	.LASF41:
 4947 0099 4379456E 		.ascii	"CyEnableInts\000"
 4947      61626C65 
 4947      496E7473 
 4947      00
 4948              	.LASF63:
 4949 00a6 4379536F 		.ascii	"CySoftwareReset\000"
 4949      66747761 
 4949      72655265 
 4949      73657400 
 4950              	.LASF81:
 4951 00b6 43795379 		.ascii	"CySysTickEnableInterrupt\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 141


 4951      73546963 
 4951      6B456E61 
 4951      626C6549 
 4951      6E746572 
 4952              	.LASF45:
 4953 00cf 4379496E 		.ascii	"CyIntGetState\000"
 4953      74476574 
 4953      53746174 
 4953      6500
 4954              	.LASF6:
 4955 00dd 6C6F6E67 		.ascii	"long long int\000"
 4955      206C6F6E 
 4955      6720696E 
 4955      7400
 4956              	.LASF0:
 4957 00eb 7369676E 		.ascii	"signed char\000"
 4957      65642063 
 4957      68617200 
 4958              	.LASF69:
 4959 00f7 66726571 		.ascii	"freq\000"
 4959      00
 4960              	.LASF79:
 4961 00fc 43794465 		.ascii	"CyDelayFreq\000"
 4961      6C617946 
 4961      72657100 
 4962              	.LASF23:
 4963 0108 696E7465 		.ascii	"interruptState\000"
 4963      72727570 
 4963      74537461 
 4963      746500
 4964              	.LASF86:
 4965 0117 43795379 		.ascii	"CySysTickGetReload\000"
 4965      73546963 
 4965      6B476574 
 4965      52656C6F 
 4965      616400
 4966              	.LASF4:
 4967 012a 6C6F6E67 		.ascii	"long int\000"
 4967      20696E74 
 4967      00
 4968              	.LASF46:
 4969 0133 4379496E 		.ascii	"CyIntDisable\000"
 4969      74446973 
 4969      61626C65 
 4969      00
 4970              	.LASF97:
 4971 0140 43795379 		.ascii	"CySysTickGetCallback\000"
 4971      73546963 
 4971      6B476574 
 4971      43616C6C 
 4971      6261636B 
 4972              	.LASF9:
 4973 0155 75696E74 		.ascii	"uint8\000"
 4973      3800
 4974              	.LASF102:
 4975 015b 63796465 		.ascii	"cydelayFreqKhz\000"
 4975      6C617946 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 142


 4975      7265714B 
 4975      687A00
 4976              	.LASF66:
 4977 016a 43794465 		.ascii	"CyDelayUs\000"
 4977      6C617955 
 4977      7300
 4978              	.LASF13:
 4979 0174 646F7562 		.ascii	"double\000"
 4979      6C6500
 4980              	.LASF60:
 4981 017b 73686966 		.ascii	"shift\000"
 4981      7400
 4982              	.LASF35:
 4983 0181 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4983      734C7664 
 4983      436C6561 
 4983      72496E74 
 4983      65727275 
 4984              	.LASF11:
 4985 0198 75696E74 		.ascii	"uint32\000"
 4985      333200
 4986              	.LASF32:
 4987 019f 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 4987      73436C6B 
 4987      45636F52 
 4987      65616453 
 4987      74617475 
 4988              	.LASF44:
 4989 01b5 6E756D62 		.ascii	"number\000"
 4989      657200
 4990              	.LASF42:
 4991 01bc 6D61736B 		.ascii	"mask\000"
 4991      00
 4992              	.LASF31:
 4993 01c1 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4993      73436C6B 
 4993      47657453 
 4993      7973636C 
 4993      6B536F75 
 4994              	.LASF62:
 4995 01d9 4379496E 		.ascii	"CyIntGetPriority\000"
 4995      74476574 
 4995      5072696F 
 4995      72697479 
 4995      00
 4996              	.LASF104:
 4997 01ea 63796465 		.ascii	"cydelay32kMs\000"
 4997      6C617933 
 4997      326B4D73 
 4997      00
 4998              	.LASF92:
 4999 01f7 43795379 		.ascii	"CySysTickInit\000"
 4999      73546963 
 4999      6B496E69 
 4999      7400
 5000              	.LASF61:
 5001 0205 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 143


 5001      6500
 5002              	.LASF89:
 5003 020b 636C6F63 		.ascii	"clockSource\000"
 5003      6B536F75 
 5003      72636500 
 5004              	.LASF98:
 5005 0217 43794765 		.ascii	"CyGetUniqueId\000"
 5005      74556E69 
 5005      71756549 
 5005      6400
 5006              	.LASF90:
 5007 0225 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5007      73546963 
 5007      6B476574 
 5007      436F756E 
 5007      74466C61 
 5008              	.LASF8:
 5009 023b 756E7369 		.ascii	"unsigned int\000"
 5009      676E6564 
 5009      20696E74 
 5009      00
 5010              	.LASF91:
 5011 0248 43795379 		.ascii	"CySysTickClear\000"
 5011      73546963 
 5011      6B436C65 
 5011      617200
 5012              	.LASF5:
 5013 0257 6C6F6E67 		.ascii	"long unsigned int\000"
 5013      20756E73 
 5013      69676E65 
 5013      6420696E 
 5013      7400
 5014              	.LASF85:
 5015 0269 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5015      734C7664 
 5015      47657449 
 5015      6E746572 
 5015      72757074 
 5016              	.LASF22:
 5017 0284 43795379 		.ascii	"CySysClkImoStop\000"
 5017      73436C6B 
 5017      496D6F53 
 5017      746F7000 
 5018              	.LASF111:
 5019 0294 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5019      74657243 
 5019      72697469 
 5019      63616C53 
 5019      65637469 
 5020              	.LASF47:
 5021 02ab 4379496E 		.ascii	"CyIntSetPending\000"
 5021      74536574 
 5021      50656E64 
 5021      696E6700 
 5022              	.LASF36:
 5023 02bb 43795379 		.ascii	"CySysGetResetReason\000"
 5023      73476574 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 144


 5023      52657365 
 5023      74526561 
 5023      736F6E00 
 5024              	.LASF3:
 5025 02cf 73686F72 		.ascii	"short unsigned int\000"
 5025      7420756E 
 5025      7369676E 
 5025      65642069 
 5025      6E7400
 5026              	.LASF88:
 5027 02e2 43795379 		.ascii	"CySysTickSetClockSource\000"
 5027      73546963 
 5027      6B536574 
 5027      436C6F63 
 5027      6B536F75 
 5028              	.LASF56:
 5029 02fa 4379496E 		.ascii	"CyIntSetVector\000"
 5029      74536574 
 5029      56656374 
 5029      6F7200
 5030              	.LASF108:
 5031 0309 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CyLib.c\000"
 5031      6E657261 
 5031      7465645F 
 5031      536F7572 
 5031      63655C50 
 5032              	.LASF59:
 5033 032a 7072696F 		.ascii	"priority\000"
 5033      72697479 
 5033      00
 5034              	.LASF68:
 5035 0333 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5035      73436C6B 
 5035      57726974 
 5035      65496D6F 
 5035      46726571 
 5036              	.LASF51:
 5037 0348 4379496E 		.ascii	"CyIntSetSysVector\000"
 5037      74536574 
 5037      53797356 
 5037      6563746F 
 5037      7200
 5038              	.LASF17:
 5039 035a 72656733 		.ascii	"reg32\000"
 5039      3200
 5040              	.LASF93:
 5041 0360 43795379 		.ascii	"CySysTickStart\000"
 5041      73546963 
 5041      6B537461 
 5041      727400
 5042              	.LASF38:
 5043 036f 72657475 		.ascii	"returnStatus\000"
 5043      726E5374 
 5043      61747573 
 5043      00
 5044              	.LASF19:
 5045 037c 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 145


 5045      74797065 
 5045      00
 5046              	.LASF48:
 5047 0385 4379496E 		.ascii	"CyIntClearPending\000"
 5047      74436C65 
 5047      61725065 
 5047      6E64696E 
 5047      6700
 5048              	.LASF52:
 5049 0397 61646472 		.ascii	"address\000"
 5049      65737300 
 5050              	.LASF71:
 5051 039f 62675472 		.ascii	"bgTrim5\000"
 5051      696D3500 
 5052              	.LASF25:
 5053 03a7 73797363 		.ascii	"sysclkSource\000"
 5053      6C6B536F 
 5053      75726365 
 5053      00
 5054              	.LASF95:
 5055 03b4 66756E63 		.ascii	"function\000"
 5055      74696F6E 
 5055      00
 5056              	.LASF106:
 5057 03bd 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5057      6F467265 
 5057      714D687A 
 5057      32526567 
 5057      00
 5058              	.LASF87:
 5059 03ce 43795379 		.ascii	"CySysTickGetValue\000"
 5059      73546963 
 5059      6B476574 
 5059      56616C75 
 5059      6500
 5060              	.LASF107:
 5061 03e0 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5061      4320342E 
 5061      392E3320 
 5061      32303135 
 5061      30333033 
 5062 0413 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5062      20726576 
 5062      6973696F 
 5062      6E203232 
 5062      31323230 
 5063 0446 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5063      66756E63 
 5063      74696F6E 
 5063      2D736563 
 5063      74696F6E 
 5064              	.LASF101:
 5065 046e 63796465 		.ascii	"cydelayFreqHz\000"
 5065      6C617946 
 5065      72657148 
 5065      7A00
 5066              	.LASF58:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 146


 5067 047c 4379496E 		.ascii	"CyIntSetPriority\000"
 5067      74536574 
 5067      5072696F 
 5067      72697479 
 5067      00
 5068              	.LASF12:
 5069 048d 666C6F61 		.ascii	"float\000"
 5069      7400
 5070              	.LASF112:
 5071 0493 43794578 		.ascii	"CyExitCriticalSection\000"
 5071      69744372 
 5071      69746963 
 5071      616C5365 
 5071      6374696F 
 5072              	.LASF77:
 5073 04a9 43795379 		.ascii	"CySysLvdEnable\000"
 5073      734C7664 
 5073      456E6162 
 5073      6C6500
 5074              	.LASF20:
 5075 04b8 63795379 		.ascii	"cySysTickCallback\000"
 5075      73546963 
 5075      6B43616C 
 5075      6C626163 
 5075      6B00
 5076              	.LASF57:
 5077 04ca 4379496E 		.ascii	"CyIntGetVector\000"
 5077      74476574 
 5077      56656374 
 5077      6F7200
 5078              	.LASF65:
 5079 04d9 6D696C6C 		.ascii	"milliseconds\000"
 5079      69736563 
 5079      6F6E6473 
 5079      00
 5080              	.LASF113:
 5081 04e6 43794465 		.ascii	"CyDelayCycles\000"
 5081      6C617943 
 5081      79636C65 
 5081      7300
 5082              	.LASF16:
 5083 04f4 72656738 		.ascii	"reg8\000"
 5083      00
 5084              	.LASF78:
 5085 04f9 74687265 		.ascii	"threshold\000"
 5085      73686F6C 
 5085      6400
 5086              	.LASF49:
 5087 0503 43794861 		.ascii	"CyHalt\000"
 5087      6C7400
 5088              	.LASF1:
 5089 050a 756E7369 		.ascii	"unsigned char\000"
 5089      676E6564 
 5089      20636861 
 5089      7200
 5090              	.LASF2:
 5091 0518 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 147


 5091      7420696E 
 5091      7400
 5092              	.LASF43:
 5093 0522 4379496E 		.ascii	"CyIntEnable\000"
 5093      74456E61 
 5093      626C6500 
 5094              	.LASF55:
 5095 052e 4379496E 		.ascii	"CyIntGetSysVector\000"
 5095      74476574 
 5095      53797356 
 5095      6563746F 
 5095      7200
 5096              	.LASF28:
 5097 0540 636C6B53 		.ascii	"clkSelect\000"
 5097      656C6563 
 5097      7400
 5098              	.LASF75:
 5099 054a 43795379 		.ascii	"CySysClkEcoStart\000"
 5099      73436C6B 
 5099      45636F53 
 5099      74617274 
 5099      00
 5100              	.LASF37:
 5101 055b 72656173 		.ascii	"reason\000"
 5101      6F6E00
 5102              	.LASF14:
 5103 0562 63686172 		.ascii	"char\000"
 5103      00
 5104              	.LASF18:
 5105 0567 63796973 		.ascii	"cyisraddress\000"
 5105      72616464 
 5105      72657373 
 5105      00
 5106              	.LASF82:
 5107 0574 43795379 		.ascii	"CySysTickEnable\000"
 5107      73546963 
 5107      6B456E61 
 5107      626C6500 
 5108              	.LASF27:
 5109 0584 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5109      73436C6B 
 5109      57726974 
 5109      65537973 
 5109      636C6B44 
 5110              	.LASF94:
 5111 059b 43795379 		.ascii	"CySysTickSetCallback\000"
 5111      73546963 
 5111      6B536574 
 5111      43616C6C 
 5111      6261636B 
 5112              	.LASF100:
 5113 05b0 43795379 		.ascii	"CySysTickCallbacks\000"
 5113      73546963 
 5113      6B43616C 
 5113      6C626163 
 5113      6B7300
 5114              	.LASF74:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 148


 5115 05c3 696D6F54 		.ascii	"imoTrim1Value\000"
 5115      72696D31 
 5115      56616C75 
 5115      6500
 5116              	.LASF99:
 5117 05d1 756E6971 		.ascii	"uniqueId\000"
 5117      75654964 
 5117      00
 5118              	.LASF109:
 5119 05da 433A5C44 		.ascii	"C:\\Dropbox\\Projects\\George Posture Correction Pr"
 5119      726F7062 
 5119      6F785C50 
 5119      726F6A65 
 5119      6374735C 
 5120 060a 6F6A6563 		.ascii	"oject\\BackBone\\BLE_OTA_FixedStack_Bootloader01.cy"
 5120      745C4261 
 5120      636B426F 
 5120      6E655C42 
 5120      4C455F4F 
 5121 063b 64736E00 		.ascii	"dsn\000"
 5122              	.LASF64:
 5123 063f 43794465 		.ascii	"CyDelay\000"
 5123      6C617900 
 5124              	.LASF83:
 5125 0647 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5125      73546963 
 5125      6B446973 
 5125      61626C65 
 5125      496E7465 
 5126              	.LASF34:
 5127 0661 43795379 		.ascii	"CySysLvdDisable\000"
 5127      734C7664 
 5127      44697361 
 5127      626C6500 
 5128              	.LASF103:
 5129 0671 63796465 		.ascii	"cydelayFreqMhz\000"
 5129      6C617946 
 5129      7265714D 
 5129      687A00
 5130              	.LASF30:
 5131 0680 43795379 		.ascii	"CySysClkEcoStop\000"
 5131      73436C6B 
 5131      45636F53 
 5131      746F7000 
 5132              	.LASF80:
 5133 0690 43795379 		.ascii	"CySysTickStop\000"
 5133      73546963 
 5133      6B53746F 
 5133      7000
 5134              	.LASF76:
 5135 069e 74696D65 		.ascii	"timeoutUs\000"
 5135      6F757455 
 5135      7300
 5136              	.LASF29:
 5137 06a8 64697669 		.ascii	"divider\000"
 5137      64657200 
 5138              	.LASF50:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccn6izwD.s 			page 149


 5139 06b0 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5139      73436C6B 
 5139      57726974 
 5139      6545636F 
 5139      44697600 
 5140              	.LASF15:
 5141 06c4 63797374 		.ascii	"cystatus\000"
 5141      61747573 
 5141      00
 5142              	.LASF21:
 5143 06cd 43795379 		.ascii	"CySysClkImoStart\000"
 5143      73436C6B 
 5143      496D6F53 
 5143      74617274 
 5143      00
 5144              	.LASF72:
 5145 06de 6E657749 		.ascii	"newImoTrim2Value\000"
 5145      6D6F5472 
 5145      696D3256 
 5145      616C7565 
 5145      00
 5146              	.LASF67:
 5147 06ef 6D696372 		.ascii	"microseconds\000"
 5147      6F736563 
 5147      6F6E6473 
 5147      00
 5148              	.LASF24:
 5149 06fc 746D7052 		.ascii	"tmpReg\000"
 5149      656700
 5150              	.LASF84:
 5151 0703 43795379 		.ascii	"CySysTickSetReload\000"
 5151      73546963 
 5151      6B536574 
 5151      52656C6F 
 5151      616400
 5152              	.LASF110:
 5153 0716 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5153      73546963 
 5153      6B536572 
 5153      76696365 
 5153      43616C6C 
 5154              	.LASF33:
 5155 0730 72657475 		.ascii	"returnValue\000"
 5155      726E5661 
 5155      6C756500 
 5156              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
