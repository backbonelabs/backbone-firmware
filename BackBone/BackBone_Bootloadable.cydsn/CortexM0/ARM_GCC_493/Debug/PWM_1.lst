ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Start, %function
  29              	PWM_1_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_1.c **** *
  15:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_1.c **** *
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC4/PWM_1.c **** 
  26:.\Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_1.c **** 
  32:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_1.c **** 
  34:.\Generated_Source\PSoC4/PWM_1.c **** 
  35:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_1.c **** *
  39:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_1.c **** *
  44:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_1.c **** *
  47:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_1.c **** *
  50:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_1.c **** *
  54:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_1_Init
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:.\Generated_Source\PSoC4/PWM_1.c **** 
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_1_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	PWM_1_Start, .-PWM_1_Start
  65              		.section	.text.PWM_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_1_Init, %function
  71              	PWM_1_Init:
  72              	.LFB3:
  66:.\Generated_Source\PSoC4/PWM_1.c **** 
  67:.\Generated_Source\PSoC4/PWM_1.c **** 
  68:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_1.c **** *
  72:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC4/PWM_1.c **** *
  77:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_1.c **** *
  80:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_1.c **** *
  83:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 4


  89:.\Generated_Source\PSoC4/PWM_1.c **** 
  90:.\Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_1.c **** 
  97:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_1.c **** 
 104:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 224B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1E4A     		ldr	r2, .L6
  94 0016 FB1D     		add	r3, r7, #7
  95 0018 1B78     		ldrb	r3, [r3]
  96 001a 0921     		mov	r1, #9
  97 001c 0B43     		orr	r3, r1
  98 001e DBB2     		uxtb	r3, r3
  99 0020 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_1.c **** 
 123:.\Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 5


 100              		.loc 1 129 0
 101 0022 1C4A     		ldr	r2, .L6+4
 102 0024 1B4B     		ldr	r3, .L6+4
 103 0026 1B78     		ldrb	r3, [r3]
 104 0028 DBB2     		uxtb	r3, r3
 105 002a 0121     		mov	r1, #1
 106 002c 0B43     		orr	r3, r1
 107 002e DBB2     		uxtb	r3, r3
 108 0030 1370     		strb	r3, [r2]
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 109              		.loc 1 130 0
 110 0032 194A     		ldr	r2, .L6+8
 111 0034 184B     		ldr	r3, .L6+8
 112 0036 1B78     		ldrb	r3, [r3]
 113 0038 DBB2     		uxtb	r3, r3
 114 003a 0121     		mov	r1, #1
 115 003c 0B43     		orr	r3, r1
 116 003e DBB2     		uxtb	r3, r3
 117 0040 1370     		strb	r3, [r2]
 131:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_1.c **** 
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 118              		.loc 1 133 0
 119 0042 FA23     		mov	r3, #250
 120 0044 9B00     		lsl	r3, r3, #2
 121 0046 181C     		mov	r0, r3
 122 0048 FFF7FEFF 		bl	PWM_1_WriteCounter
 134:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 123              		.loc 1 136 0
 124 004c FA23     		mov	r3, #250
 125 004e 9B00     		lsl	r3, r3, #2
 126 0050 181C     		mov	r0, r3
 127 0052 FFF7FEFF 		bl	PWM_1_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_1.c **** 
 138:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 128              		.loc 1 139 0
 129 0056 C820     		mov	r0, #200
 130 0058 FFF7FEFF 		bl	PWM_1_WriteCompare
 140:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_1.c **** 
 153:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 131              		.loc 1 154 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 6


 132 005c 0020     		mov	r0, #0
 133 005e FFF7FEFF 		bl	PWM_1_SetInterruptMode
 155:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_1.c **** 
 157:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_1.c **** 
 165:.\Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 134              		.loc 1 167 0
 135 0062 BC1D     		add	r4, r7, #6
 136 0064 FFF7FEFF 		bl	CyEnterCriticalSection
 137 0068 031C     		mov	r3, r0
 138 006a 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 139              		.loc 1 169 0
 140 006c 0A4A     		ldr	r2, .L6+8
 141 006e 0A4B     		ldr	r3, .L6+8
 142 0070 1B78     		ldrb	r3, [r3]
 143 0072 DBB2     		uxtb	r3, r3
 144 0074 1021     		mov	r1, #16
 145 0076 0B43     		orr	r3, r1
 146 0078 DBB2     		uxtb	r3, r3
 147 007a 1370     		strb	r3, [r2]
 170:.\Generated_Source\PSoC4/PWM_1.c **** 
 171:.\Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 148              		.loc 1 172 0
 149 007c BB1D     		add	r3, r7, #6
 150 007e 1B78     		ldrb	r3, [r3]
 151 0080 181C     		mov	r0, r3
 152 0082 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/PWM_1.c **** 
 174:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 153              		.loc 1 176 0
 154 0086 FFF7FEFF 		bl	PWM_1_ClearFIFO
 177:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 155              		.loc 1 179 0
 156 008a BD46     		mov	sp, r7
 157 008c 03B0     		add	sp, sp, #12
 158              		@ sp needed
 159 008e 90BD     		pop	{r4, r7, pc}
 160              	.L7:
 161              		.align	2
 162              	.L6:
 163 0090 73000F40 		.word	1074724979
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 7


 164 0094 92000F40 		.word	1074725010
 165 0098 93000F40 		.word	1074725011
 166              		.cfi_endproc
 167              	.LFE3:
 168              		.size	PWM_1_Init, .-PWM_1_Init
 169              		.section	.text.PWM_1_Enable,"ax",%progbits
 170              		.align	2
 171              		.global	PWM_1_Enable
 172              		.code	16
 173              		.thumb_func
 174              		.type	PWM_1_Enable, %function
 175              	PWM_1_Enable:
 176              	.LFB4:
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c **** 
 182:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_1.c **** *
 186:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_1.c **** *
 189:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_1.c **** *
 192:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_1.c **** *
 195:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_1.c **** *
 198:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_1.c **** {
 177              		.loc 1 200 0
 178              		.cfi_startproc
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_1.c **** 
 207:.\Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 185              		.loc 1 209 0
 186 0004 0549     		ldr	r1, .L9
 187 0006 054B     		ldr	r3, .L9
 188 0008 1B78     		ldrb	r3, [r3]
 189 000a DBB2     		uxtb	r3, r3
 190 000c 8022     		mov	r2, #128
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 8


 191 000e 5242     		neg	r2, r2
 192 0010 1343     		orr	r3, r2
 193 0012 DBB2     		uxtb	r3, r3
 194 0014 0B70     		strb	r3, [r1]
 210:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_1.c **** }
 195              		.loc 1 211 0
 196 0016 BD46     		mov	sp, r7
 197              		@ sp needed
 198 0018 80BD     		pop	{r7, pc}
 199              	.L10:
 200 001a C046     		.align	2
 201              	.L9:
 202 001c 73000F40 		.word	1074724979
 203              		.cfi_endproc
 204              	.LFE4:
 205              		.size	PWM_1_Enable, .-PWM_1_Enable
 206              		.section	.text.PWM_1_Stop,"ax",%progbits
 207              		.align	2
 208              		.global	PWM_1_Stop
 209              		.code	16
 210              		.thumb_func
 211              		.type	PWM_1_Stop, %function
 212              	PWM_1_Stop:
 213              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_1.c **** 
 213:.\Generated_Source\PSoC4/PWM_1.c **** 
 214:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_1.c **** *
 218:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_1.c **** *
 225:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_1.c **** *
 228:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_1.c **** *
 232:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_1.c **** {
 214              		.loc 1 234 0
 215              		.cfi_startproc
 216 0000 80B5     		push	{r7, lr}
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 7, -8
 219              		.cfi_offset 14, -4
 220 0002 00AF     		add	r7, sp, #0
 221              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 9


 236:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 222              		.loc 1 236 0
 223 0004 044A     		ldr	r2, .L12
 224 0006 044B     		ldr	r3, .L12
 225 0008 1B78     		ldrb	r3, [r3]
 226 000a DBB2     		uxtb	r3, r3
 227 000c 7F21     		mov	r1, #127
 228 000e 0B40     		and	r3, r1
 229 0010 DBB2     		uxtb	r3, r3
 230 0012 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_1.c **** 
 239:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_1.c **** }
 231              		.loc 1 244 0
 232 0014 BD46     		mov	sp, r7
 233              		@ sp needed
 234 0016 80BD     		pop	{r7, pc}
 235              	.L13:
 236              		.align	2
 237              	.L12:
 238 0018 73000F40 		.word	1074724979
 239              		.cfi_endproc
 240              	.LFE5:
 241              		.size	PWM_1_Stop, .-PWM_1_Stop
 242              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_1_WriteCounter
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_1_WriteCounter, %function
 248              	PWM_1_WriteCounter:
 249              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_1.c **** 
 246:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_1.c **** 
 249:.\Generated_Source\PSoC4/PWM_1.c **** 
 250:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_1.c ****         *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 10


 265:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_1.c **** 
 270:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_1.c **** 
 276:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_1.c **** 
 279:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_1.c **** 
 281:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_1.c **** 
 288:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_1.c **** 
 295:.\Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_1.c **** 
 308:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_1.c **** 
 310:.\Generated_Source\PSoC4/PWM_1.c **** 
 311:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_1.c ****         *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 11


 322:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 323:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
 335:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_1.c **** 
 342:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_1.c **** 
 344:.\Generated_Source\PSoC4/PWM_1.c **** 
 345:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_1.c **** 
 377:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 12


 379:.\Generated_Source\PSoC4/PWM_1.c **** 
 380:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_1.c **** 
 382:.\Generated_Source\PSoC4/PWM_1.c **** 
 383:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_1.c ****     {
 250              		.loc 1 405 0
 251              		.cfi_startproc
 252 0000 80B5     		push	{r7, lr}
 253              		.cfi_def_cfa_offset 8
 254              		.cfi_offset 7, -8
 255              		.cfi_offset 14, -4
 256 0002 82B0     		sub	sp, sp, #8
 257              		.cfi_def_cfa_offset 16
 258 0004 00AF     		add	r7, sp, #0
 259              		.cfi_def_cfa_register 7
 260 0006 021C     		mov	r2, r0
 261 0008 BB1D     		add	r3, r7, #6
 262 000a 1A80     		strh	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
 263              		.loc 1 406 0
 264 000c 034A     		ldr	r2, .L15
 265 000e BB1D     		add	r3, r7, #6
 266 0010 1B88     		ldrh	r3, [r3]
 267 0012 1380     		strh	r3, [r2]
 407:.\Generated_Source\PSoC4/PWM_1.c ****     }
 268              		.loc 1 407 0
 269 0014 BD46     		mov	sp, r7
 270 0016 02B0     		add	sp, sp, #8
 271              		@ sp needed
 272 0018 80BD     		pop	{r7, pc}
 273              	.L16:
 274 001a C046     		.align	2
 275              	.L15:
 276 001c 04100F40 		.word	1074728964
 277              		.cfi_endproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 13


 278              	.LFE6:
 279              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 280              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 281              		.align	2
 282              		.global	PWM_1_ReadCounter
 283              		.code	16
 284              		.thumb_func
 285              		.type	PWM_1_ReadCounter, %function
 286              	PWM_1_ReadCounter:
 287              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_1.c **** 
 409:.\Generated_Source\PSoC4/PWM_1.c **** 
 410:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_1.c ****     {
 288              		.loc 1 426 0
 289              		.cfi_startproc
 290 0000 80B5     		push	{r7, lr}
 291              		.cfi_def_cfa_offset 8
 292              		.cfi_offset 7, -8
 293              		.cfi_offset 14, -4
 294 0002 00AF     		add	r7, sp, #0
 295              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 296              		.loc 1 430 0
 297 0004 034B     		ldr	r3, .L19
 298 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_1.c **** 
 432:.\Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 299              		.loc 1 433 0
 300 0008 034B     		ldr	r3, .L19+4
 301 000a 1B88     		ldrh	r3, [r3]
 302 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC4/PWM_1.c ****     }
 303              		.loc 1 434 0
 304 000e 181C     		mov	r0, r3
 305 0010 BD46     		mov	sp, r7
 306              		@ sp needed
 307 0012 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 14


 308              	.L20:
 309              		.align	2
 310              	.L19:
 311 0014 12000F40 		.word	1074724882
 312 0018 A4100F40 		.word	1074729124
 313              		.cfi_endproc
 314              	.LFE7:
 315              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 316              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 317              		.align	2
 318              		.global	PWM_1_ClearFIFO
 319              		.code	16
 320              		.thumb_func
 321              		.type	PWM_1_ClearFIFO, %function
 322              	PWM_1_ClearFIFO:
 323              	.LFB8:
 435:.\Generated_Source\PSoC4/PWM_1.c **** 
 436:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_1.c **** 
 438:.\Generated_Source\PSoC4/PWM_1.c **** 
 439:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_1.c ****         {
 324              		.loc 1 454 0
 325              		.cfi_startproc
 326 0000 80B5     		push	{r7, lr}
 327              		.cfi_def_cfa_offset 8
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 00AF     		add	r7, sp, #0
 331              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 332              		.loc 1 455 0
 333 0004 01E0     		b	.L22
 334              	.L23:
 456:.\Generated_Source\PSoC4/PWM_1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 335              		.loc 1 457 0
 336 0006 FFF7FEFF 		bl	PWM_1_ReadCapture
 337              	.L22:
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 338              		.loc 1 455 0
 339 000a FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 340 000e 031C     		mov	r3, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 15


 341 0010 1A1C     		mov	r2, r3
 342 0012 1023     		mov	r3, #16
 343 0014 1340     		and	r3, r2
 344 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/PWM_1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_1.c ****         }
 345              		.loc 1 459 0
 346 0018 BD46     		mov	sp, r7
 347              		@ sp needed
 348 001a 80BD     		pop	{r7, pc}
 349              		.cfi_endproc
 350              	.LFE8:
 351              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 352              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_1_WritePeriod
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_1_WritePeriod, %function
 358              	PWM_1_WritePeriod:
 359              	.LFB9:
 460:.\Generated_Source\PSoC4/PWM_1.c **** 
 461:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_1.c **** 
 463:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_1.c **** 
 465:.\Generated_Source\PSoC4/PWM_1.c **** 
 466:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_1.c **** *
 470:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_1.c **** *
 474:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM_1.c **** {
 360              		.loc 1 483 0
 361              		.cfi_startproc
 362 0000 80B5     		push	{r7, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 82B0     		sub	sp, sp, #8
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 021C     		mov	r2, r0
 371 0008 BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 16


 372 000a 1A80     		strh	r2, [r3]
 484:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 373              		.loc 1 487 0
 374 000c 034A     		ldr	r2, .L25
 375 000e BB1D     		add	r3, r7, #6
 376 0010 1B88     		ldrh	r3, [r3]
 377 0012 1380     		strh	r3, [r2]
 488:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_1.c **** }
 378              		.loc 1 489 0
 379 0014 BD46     		mov	sp, r7
 380 0016 02B0     		add	sp, sp, #8
 381              		@ sp needed
 382 0018 80BD     		pop	{r7, pc}
 383              	.L26:
 384 001a C046     		.align	2
 385              	.L25:
 386 001c 84100F40 		.word	1074729092
 387              		.cfi_endproc
 388              	.LFE9:
 389              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 390              		.section	.text.PWM_1_WriteCompare,"ax",%progbits
 391              		.align	2
 392              		.global	PWM_1_WriteCompare
 393              		.code	16
 394              		.thumb_func
 395              		.type	PWM_1_WriteCompare, %function
 396              	PWM_1_WriteCompare:
 397              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** 
 494:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 17


 515:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_1.c ****     {
 398              		.loc 1 518 0
 399              		.cfi_startproc
 400 0000 80B5     		push	{r7, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 82B0     		sub	sp, sp, #8
 405              		.cfi_def_cfa_offset 16
 406 0004 00AF     		add	r7, sp, #0
 407              		.cfi_def_cfa_register 7
 408 0006 021C     		mov	r2, r0
 409 0008 BB1D     		add	r3, r7, #6
 410 000a 1A80     		strh	r2, [r3]
 519:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 411              		.loc 1 522 0
 412 000c 034A     		ldr	r2, .L28
 413 000e BB1D     		add	r3, r7, #6
 414 0010 1B88     		ldrh	r3, [r3]
 415 0012 1380     		strh	r3, [r2]
 523:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
 525:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_1.c ****     }
 416              		.loc 1 532 0
 417 0014 BD46     		mov	sp, r7
 418 0016 02B0     		add	sp, sp, #8
 419              		@ sp needed
 420 0018 80BD     		pop	{r7, pc}
 421              	.L29:
 422 001a C046     		.align	2
 423              	.L28:
 424 001c 44100F40 		.word	1074729028
 425              		.cfi_endproc
 426              	.LFE10:
 427              		.size	PWM_1_WriteCompare, .-PWM_1_WriteCompare
 428              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 429              		.align	2
 430              		.global	PWM_1_SetInterruptMode
 431              		.code	16
 432              		.thumb_func
 433              		.type	PWM_1_SetInterruptMode, %function
 434              	PWM_1_SetInterruptMode:
 435              	.LFB11:
 533:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 18


 534:.\Generated_Source\PSoC4/PWM_1.c **** 
 535:.\Generated_Source\PSoC4/PWM_1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** 
 538:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_1.c ****     {
 558:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_1.c ****     }
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_1.c ****     {
 587:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 19


 591:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_1.c ****     }
 593:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_1.c **** 
 595:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
 598:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_1.c **** 
 622:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_1.c **** 
 630:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_1.c **** 
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 20


 648:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_1.c **** 
 655:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_1.c **** 
 666:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c **** 
 669:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_1.c ****     {
 436              		.loc 1 685 0
 437              		.cfi_startproc
 438 0000 80B5     		push	{r7, lr}
 439              		.cfi_def_cfa_offset 8
 440              		.cfi_offset 7, -8
 441              		.cfi_offset 14, -4
 442 0002 82B0     		sub	sp, sp, #8
 443              		.cfi_def_cfa_offset 16
 444 0004 00AF     		add	r7, sp, #0
 445              		.cfi_def_cfa_register 7
 446 0006 021C     		mov	r2, r0
 447 0008 FB1D     		add	r3, r7, #7
 448 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 449              		.loc 1 686 0
 450 000c 034A     		ldr	r2, .L31
 451 000e FB1D     		add	r3, r7, #7
 452 0010 1B78     		ldrb	r3, [r3]
 453 0012 1370     		strb	r3, [r2]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 21


 687:.\Generated_Source\PSoC4/PWM_1.c ****     }
 454              		.loc 1 687 0
 455 0014 BD46     		mov	sp, r7
 456 0016 02B0     		add	sp, sp, #8
 457              		@ sp needed
 458 0018 80BD     		pop	{r7, pc}
 459              	.L32:
 460 001a C046     		.align	2
 461              	.L31:
 462 001c 83000F40 		.word	1074724995
 463              		.cfi_endproc
 464              	.LFE11:
 465              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 466              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 467              		.align	2
 468              		.global	PWM_1_ReadStatusRegister
 469              		.code	16
 470              		.thumb_func
 471              		.type	PWM_1_ReadStatusRegister, %function
 472              	PWM_1_ReadStatusRegister:
 473              	.LFB12:
 688:.\Generated_Source\PSoC4/PWM_1.c **** 
 689:.\Generated_Source\PSoC4/PWM_1.c **** 
 690:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_1.c ****     {
 474              		.loc 1 712 0
 475              		.cfi_startproc
 476 0000 80B5     		push	{r7, lr}
 477              		.cfi_def_cfa_offset 8
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 482              		.loc 1 713 0
 483 0004 024B     		ldr	r3, .L35
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 22


 484 0006 1B78     		ldrb	r3, [r3]
 485 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/PWM_1.c ****     }
 486              		.loc 1 714 0
 487 000a 181C     		mov	r0, r3
 488 000c BD46     		mov	sp, r7
 489              		@ sp needed
 490 000e 80BD     		pop	{r7, pc}
 491              	.L36:
 492              		.align	2
 493              	.L35:
 494 0010 63000F40 		.word	1074724963
 495              		.cfi_endproc
 496              	.LFE12:
 497              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 498              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 499              		.align	2
 500              		.global	PWM_1_ReadControlRegister
 501              		.code	16
 502              		.thumb_func
 503              		.type	PWM_1_ReadControlRegister, %function
 504              	PWM_1_ReadControlRegister:
 505              	.LFB13:
 715:.\Generated_Source\PSoC4/PWM_1.c **** 
 716:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_1.c **** 
 721:.\Generated_Source\PSoC4/PWM_1.c **** 
 722:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_1.c ****     {
 506              		.loc 1 738 0
 507              		.cfi_startproc
 508 0000 80B5     		push	{r7, lr}
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 7, -8
 511              		.cfi_offset 14, -4
 512 0002 82B0     		sub	sp, sp, #8
 513              		.cfi_def_cfa_offset 16
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 23


 739:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_1.c **** 
 741:.\Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 516              		.loc 1 741 0
 517 0006 054A     		ldr	r2, .L39
 518 0008 FB1D     		add	r3, r7, #7
 519 000a 1278     		ldrb	r2, [r2]
 520 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM_1.c ****         return (result);
 521              		.loc 1 742 0
 522 000e FB1D     		add	r3, r7, #7
 523 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/PWM_1.c ****     }
 524              		.loc 1 743 0
 525 0012 181C     		mov	r0, r3
 526 0014 BD46     		mov	sp, r7
 527 0016 02B0     		add	sp, sp, #8
 528              		@ sp needed
 529 0018 80BD     		pop	{r7, pc}
 530              	.L40:
 531 001a C046     		.align	2
 532              	.L39:
 533 001c 73000F40 		.word	1074724979
 534              		.cfi_endproc
 535              	.LFE13:
 536              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 537              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 538              		.align	2
 539              		.global	PWM_1_WriteControlRegister
 540              		.code	16
 541              		.thumb_func
 542              		.type	PWM_1_WriteControlRegister, %function
 543              	PWM_1_WriteControlRegister:
 544              	.LFB14:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_1.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 24


 545              		.loc 1 766 0
 546              		.cfi_startproc
 547 0000 80B5     		push	{r7, lr}
 548              		.cfi_def_cfa_offset 8
 549              		.cfi_offset 7, -8
 550              		.cfi_offset 14, -4
 551 0002 82B0     		sub	sp, sp, #8
 552              		.cfi_def_cfa_offset 16
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 555 0006 021C     		mov	r2, r0
 556 0008 FB1D     		add	r3, r7, #7
 557 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 558              		.loc 1 767 0
 559 000c 034A     		ldr	r2, .L42
 560 000e FB1D     		add	r3, r7, #7
 561 0010 1B78     		ldrb	r3, [r3]
 562 0012 1370     		strb	r3, [r2]
 768:.\Generated_Source\PSoC4/PWM_1.c ****     }
 563              		.loc 1 768 0
 564 0014 BD46     		mov	sp, r7
 565 0016 02B0     		add	sp, sp, #8
 566              		@ sp needed
 567 0018 80BD     		pop	{r7, pc}
 568              	.L43:
 569 001a C046     		.align	2
 570              	.L42:
 571 001c 73000F40 		.word	1074724979
 572              		.cfi_endproc
 573              	.LFE14:
 574              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 575              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 576              		.align	2
 577              		.global	PWM_1_ReadCapture
 578              		.code	16
 579              		.thumb_func
 580              		.type	PWM_1_ReadCapture, %function
 581              	PWM_1_ReadCapture:
 582              	.LFB15:
 769:.\Generated_Source\PSoC4/PWM_1.c **** 
 770:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** 
 773:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_1.c **** 
 775:.\Generated_Source\PSoC4/PWM_1.c **** 
 776:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 25


 786:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_1.c ****     {
 583              		.loc 1 791 0
 584              		.cfi_startproc
 585 0000 80B5     		push	{r7, lr}
 586              		.cfi_def_cfa_offset 8
 587              		.cfi_offset 7, -8
 588              		.cfi_offset 14, -4
 589 0002 00AF     		add	r7, sp, #0
 590              		.cfi_def_cfa_register 7
 792:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 591              		.loc 1 792 0
 592 0004 024B     		ldr	r3, .L46
 593 0006 1B88     		ldrh	r3, [r3]
 594 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC4/PWM_1.c ****     }
 595              		.loc 1 793 0
 596 000a 181C     		mov	r0, r3
 597 000c BD46     		mov	sp, r7
 598              		@ sp needed
 599 000e 80BD     		pop	{r7, pc}
 600              	.L47:
 601              		.align	2
 602              	.L46:
 603 0010 A4100F40 		.word	1074729124
 604              		.cfi_endproc
 605              	.LFE15:
 606              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 607              		.section	.text.PWM_1_ReadCompare,"ax",%progbits
 608              		.align	2
 609              		.global	PWM_1_ReadCompare
 610              		.code	16
 611              		.thumb_func
 612              		.type	PWM_1_ReadCompare, %function
 613              	PWM_1_ReadCompare:
 614              	.LFB16:
 794:.\Generated_Source\PSoC4/PWM_1.c **** 
 795:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_1.c **** 
 797:.\Generated_Source\PSoC4/PWM_1.c **** 
 798:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_1.c **** 
 800:.\Generated_Source\PSoC4/PWM_1.c **** 
 801:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 26


 811:.\Generated_Source\PSoC4/PWM_1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_1.c ****     {
 615              		.loc 1 817 0
 616              		.cfi_startproc
 617 0000 80B5     		push	{r7, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 00AF     		add	r7, sp, #0
 622              		.cfi_def_cfa_register 7
 818:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 623              		.loc 1 821 0
 624 0004 024B     		ldr	r3, .L50
 625 0006 1B88     		ldrh	r3, [r3]
 626 0008 9BB2     		uxth	r3, r3
 822:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_1.c ****     }
 627              		.loc 1 823 0
 628 000a 181C     		mov	r0, r3
 629 000c BD46     		mov	sp, r7
 630              		@ sp needed
 631 000e 80BD     		pop	{r7, pc}
 632              	.L51:
 633              		.align	2
 634              	.L50:
 635 0010 44100F40 		.word	1074729028
 636              		.cfi_endproc
 637              	.LFE16:
 638              		.size	PWM_1_ReadCompare, .-PWM_1_ReadCompare
 639              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 640              		.align	2
 641              		.global	PWM_1_ReadPeriod
 642              		.code	16
 643              		.thumb_func
 644              		.type	PWM_1_ReadPeriod, %function
 645              	PWM_1_ReadPeriod:
 646              	.LFB17:
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_1.c **** 
 827:.\Generated_Source\PSoC4/PWM_1.c **** 
 828:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 27


 836:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_1.c ****     {
 844:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM_1.c ****     }
 846:.\Generated_Source\PSoC4/PWM_1.c **** 
 847:.\Generated_Source\PSoC4/PWM_1.c **** 
 848:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_1.c ****     {
 864:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM_1.c ****     }
 866:.\Generated_Source\PSoC4/PWM_1.c **** 
 867:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_1.c **** 
 869:.\Generated_Source\PSoC4/PWM_1.c **** 
 870:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_1.c **** *
 880:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_1.c **** *
 883:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_1.c **** {
 647              		.loc 1 885 0
 648              		.cfi_startproc
 649 0000 80B5     		push	{r7, lr}
 650              		.cfi_def_cfa_offset 8
 651              		.cfi_offset 7, -8
 652              		.cfi_offset 14, -4
 653 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 28


 654              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 655              		.loc 1 889 0
 656 0004 024B     		ldr	r3, .L54
 657 0006 1B88     		ldrh	r3, [r3]
 658 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_1.c **** }
 659              		.loc 1 891 0
 660 000a 181C     		mov	r0, r3
 661 000c BD46     		mov	sp, r7
 662              		@ sp needed
 663 000e 80BD     		pop	{r7, pc}
 664              	.L55:
 665              		.align	2
 666              	.L54:
 667 0010 84100F40 		.word	1074729092
 668              		.cfi_endproc
 669              	.LFE17:
 670              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 671              		.text
 672              	.Letext0:
 673              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 674              		.section	.debug_info,"",%progbits
 675              	.Ldebug_info0:
 676 0000 9C020000 		.4byte	0x29c
 677 0004 0400     		.2byte	0x4
 678 0006 00000000 		.4byte	.Ldebug_abbrev0
 679 000a 04       		.byte	0x4
 680 000b 01       		.uleb128 0x1
 681 000c 13000000 		.4byte	.LASF40
 682 0010 01       		.byte	0x1
 683 0011 D3020000 		.4byte	.LASF41
 684 0015 10020000 		.4byte	.LASF42
 685 0019 00000000 		.4byte	.Ldebug_ranges0+0
 686 001d 00000000 		.4byte	0
 687 0021 00000000 		.4byte	.Ldebug_line0
 688 0025 02       		.uleb128 0x2
 689 0026 01       		.byte	0x1
 690 0027 06       		.byte	0x6
 691 0028 1F030000 		.4byte	.LASF0
 692 002c 02       		.uleb128 0x2
 693 002d 01       		.byte	0x1
 694 002e 08       		.byte	0x8
 695 002f 20010000 		.4byte	.LASF1
 696 0033 02       		.uleb128 0x2
 697 0034 02       		.byte	0x2
 698 0035 05       		.byte	0x5
 699 0036 B7010000 		.4byte	.LASF2
 700 003a 02       		.uleb128 0x2
 701 003b 02       		.byte	0x2
 702 003c 07       		.byte	0x7
 703 003d CB000000 		.4byte	.LASF3
 704 0041 02       		.uleb128 0x2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 29


 705 0042 04       		.byte	0x4
 706 0043 05       		.byte	0x5
 707 0044 11030000 		.4byte	.LASF4
 708 0048 02       		.uleb128 0x2
 709 0049 04       		.byte	0x4
 710 004a 07       		.byte	0x7
 711 004b 44010000 		.4byte	.LASF5
 712 004f 02       		.uleb128 0x2
 713 0050 08       		.byte	0x8
 714 0051 05       		.byte	0x5
 715 0052 8B020000 		.4byte	.LASF6
 716 0056 02       		.uleb128 0x2
 717 0057 08       		.byte	0x8
 718 0058 07       		.byte	0x7
 719 0059 F2010000 		.4byte	.LASF7
 720 005d 03       		.uleb128 0x3
 721 005e 04       		.byte	0x4
 722 005f 05       		.byte	0x5
 723 0060 696E7400 		.ascii	"int\000"
 724 0064 02       		.uleb128 0x2
 725 0065 04       		.byte	0x4
 726 0066 07       		.byte	0x7
 727 0067 E5010000 		.4byte	.LASF8
 728 006b 04       		.uleb128 0x4
 729 006c 56010000 		.4byte	.LASF9
 730 0070 02       		.byte	0x2
 731 0071 9801     		.2byte	0x198
 732 0073 2C000000 		.4byte	0x2c
 733 0077 04       		.uleb128 0x4
 734 0078 D3010000 		.4byte	.LASF10
 735 007c 02       		.byte	0x2
 736 007d 9901     		.2byte	0x199
 737 007f 3A000000 		.4byte	0x3a
 738 0083 02       		.uleb128 0x2
 739 0084 04       		.byte	0x4
 740 0085 04       		.byte	0x4
 741 0086 F7000000 		.4byte	.LASF11
 742 008a 02       		.uleb128 0x2
 743 008b 08       		.byte	0x8
 744 008c 04       		.byte	0x4
 745 008d 8D010000 		.4byte	.LASF12
 746 0091 02       		.uleb128 0x2
 747 0092 01       		.byte	0x1
 748 0093 08       		.byte	0x8
 749 0094 1A030000 		.4byte	.LASF13
 750 0098 04       		.uleb128 0x4
 751 0099 2E010000 		.4byte	.LASF14
 752 009d 02       		.byte	0x2
 753 009e 4202     		.2byte	0x242
 754 00a0 A4000000 		.4byte	0xa4
 755 00a4 05       		.uleb128 0x5
 756 00a5 6B000000 		.4byte	0x6b
 757 00a9 04       		.uleb128 0x4
 758 00aa 00000000 		.4byte	.LASF15
 759 00ae 02       		.byte	0x2
 760 00af 4302     		.2byte	0x243
 761 00b1 B5000000 		.4byte	0xb5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 30


 762 00b5 05       		.uleb128 0x5
 763 00b6 77000000 		.4byte	0x77
 764 00ba 02       		.uleb128 0x2
 765 00bb 04       		.byte	0x4
 766 00bc 07       		.byte	0x7
 767 00bd 6F020000 		.4byte	.LASF16
 768 00c1 06       		.uleb128 0x6
 769 00c2 33030000 		.4byte	.LASF19
 770 00c6 01       		.byte	0x1
 771 00c7 37       		.byte	0x37
 772 00c8 00000000 		.4byte	.LFB2
 773 00cc 24000000 		.4byte	.LFE2-.LFB2
 774 00d0 01       		.uleb128 0x1
 775 00d1 9C       		.byte	0x9c
 776 00d2 07       		.uleb128 0x7
 777 00d3 DA010000 		.4byte	.LASF22
 778 00d7 01       		.byte	0x1
 779 00d8 54       		.byte	0x54
 780 00d9 00000000 		.4byte	.LFB3
 781 00dd 9C000000 		.4byte	.LFE3-.LFB3
 782 00e1 01       		.uleb128 0x1
 783 00e2 9C       		.byte	0x9c
 784 00e3 04010000 		.4byte	0x104
 785 00e7 08       		.uleb128 0x8
 786 00e8 6A020000 		.4byte	.LASF17
 787 00ec 01       		.byte	0x1
 788 00ed 57       		.byte	0x57
 789 00ee 6B000000 		.4byte	0x6b
 790 00f2 02       		.uleb128 0x2
 791 00f3 91       		.byte	0x91
 792 00f4 6F       		.sleb128 -17
 793 00f5 08       		.uleb128 0x8
 794 00f6 94010000 		.4byte	.LASF18
 795 00fa 01       		.byte	0x1
 796 00fb 5D       		.byte	0x5d
 797 00fc 6B000000 		.4byte	0x6b
 798 0100 02       		.uleb128 0x2
 799 0101 91       		.byte	0x91
 800 0102 6E       		.sleb128 -18
 801 0103 00       		.byte	0
 802 0104 09       		.uleb128 0x9
 803 0105 06000000 		.4byte	.LASF20
 804 0109 01       		.byte	0x1
 805 010a C7       		.byte	0xc7
 806 010b 00000000 		.4byte	.LFB4
 807 010f 20000000 		.4byte	.LFE4-.LFB4
 808 0113 01       		.uleb128 0x1
 809 0114 9C       		.byte	0x9c
 810 0115 09       		.uleb128 0x9
 811 0116 06030000 		.4byte	.LASF21
 812 011a 01       		.byte	0x1
 813 011b E9       		.byte	0xe9
 814 011c 00000000 		.4byte	.LFB5
 815 0120 1C000000 		.4byte	.LFE5-.LFB5
 816 0124 01       		.uleb128 0x1
 817 0125 9C       		.byte	0x9c
 818 0126 0A       		.uleb128 0xa
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 31


 819 0127 A1000000 		.4byte	.LASF23
 820 012b 01       		.byte	0x1
 821 012c 9301     		.2byte	0x193
 822 012e 00000000 		.4byte	.LFB6
 823 0132 20000000 		.4byte	.LFE6-.LFB6
 824 0136 01       		.uleb128 0x1
 825 0137 9C       		.byte	0x9c
 826 0138 4C010000 		.4byte	0x14c
 827 013c 0B       		.uleb128 0xb
 828 013d FD000000 		.4byte	.LASF26
 829 0141 01       		.byte	0x1
 830 0142 9301     		.2byte	0x193
 831 0144 77000000 		.4byte	0x77
 832 0148 02       		.uleb128 0x2
 833 0149 91       		.byte	0x91
 834 014a 76       		.sleb128 -10
 835 014b 00       		.byte	0
 836 014c 0C       		.uleb128 0xc
 837 014d F4020000 		.4byte	.LASF32
 838 0151 01       		.byte	0x1
 839 0152 A901     		.2byte	0x1a9
 840 0154 77000000 		.4byte	0x77
 841 0158 00000000 		.4byte	.LFB7
 842 015c 1C000000 		.4byte	.LFE7-.LFB7
 843 0160 01       		.uleb128 0x1
 844 0161 9C       		.byte	0x9c
 845 0162 0D       		.uleb128 0xd
 846 0163 BB000000 		.4byte	.LASF24
 847 0167 01       		.byte	0x1
 848 0168 C501     		.2byte	0x1c5
 849 016a 00000000 		.4byte	.LFB8
 850 016e 1C000000 		.4byte	.LFE8-.LFB8
 851 0172 01       		.uleb128 0x1
 852 0173 9C       		.byte	0x9c
 853 0174 0A       		.uleb128 0xa
 854 0175 C1020000 		.4byte	.LASF25
 855 0179 01       		.byte	0x1
 856 017a E201     		.2byte	0x1e2
 857 017c 00000000 		.4byte	.LFB9
 858 0180 20000000 		.4byte	.LFE9-.LFB9
 859 0184 01       		.uleb128 0x1
 860 0185 9C       		.byte	0x9c
 861 0186 9A010000 		.4byte	0x19a
 862 018a 0B       		.uleb128 0xb
 863 018b B4000000 		.4byte	.LASF27
 864 018f 01       		.byte	0x1
 865 0190 E201     		.2byte	0x1e2
 866 0192 77000000 		.4byte	0x77
 867 0196 02       		.uleb128 0x2
 868 0197 91       		.byte	0x91
 869 0198 76       		.sleb128 -10
 870 0199 00       		.byte	0
 871 019a 0A       		.uleb128 0xa
 872 019b 78020000 		.4byte	.LASF28
 873 019f 01       		.byte	0x1
 874 01a0 0402     		.2byte	0x204
 875 01a2 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 32


 876 01a6 20000000 		.4byte	.LFE10-.LFB10
 877 01aa 01       		.uleb128 0x1
 878 01ab 9C       		.byte	0x9c
 879 01ac C0010000 		.4byte	0x1c0
 880 01b0 0B       		.uleb128 0xb
 881 01b1 2B030000 		.4byte	.LASF29
 882 01b5 01       		.byte	0x1
 883 01b6 0402     		.2byte	0x204
 884 01b8 77000000 		.4byte	0x77
 885 01bc 02       		.uleb128 0x2
 886 01bd 91       		.byte	0x91
 887 01be 76       		.sleb128 -10
 888 01bf 00       		.byte	0
 889 01c0 0A       		.uleb128 0xa
 890 01c1 64010000 		.4byte	.LASF30
 891 01c5 01       		.byte	0x1
 892 01c6 AC02     		.2byte	0x2ac
 893 01c8 00000000 		.4byte	.LFB11
 894 01cc 20000000 		.4byte	.LFE11-.LFB11
 895 01d0 01       		.uleb128 0x1
 896 01d1 9C       		.byte	0x9c
 897 01d2 E6010000 		.4byte	0x1e6
 898 01d6 0B       		.uleb128 0xb
 899 01d7 B3020000 		.4byte	.LASF31
 900 01db 01       		.byte	0x1
 901 01dc AC02     		.2byte	0x2ac
 902 01de 6B000000 		.4byte	0x6b
 903 01e2 02       		.uleb128 0x2
 904 01e3 91       		.byte	0x91
 905 01e4 77       		.sleb128 -9
 906 01e5 00       		.byte	0
 907 01e6 0C       		.uleb128 0xc
 908 01e7 DE000000 		.4byte	.LASF33
 909 01eb 01       		.byte	0x1
 910 01ec C702     		.2byte	0x2c7
 911 01ee 6B000000 		.4byte	0x6b
 912 01f2 00000000 		.4byte	.LFB12
 913 01f6 14000000 		.4byte	.LFE12-.LFB12
 914 01fa 01       		.uleb128 0x1
 915 01fb 9C       		.byte	0x9c
 916 01fc 0E       		.uleb128 0xe
 917 01fd 99020000 		.4byte	.LASF43
 918 0201 01       		.byte	0x1
 919 0202 E102     		.2byte	0x2e1
 920 0204 6B000000 		.4byte	0x6b
 921 0208 00000000 		.4byte	.LFB13
 922 020c 20000000 		.4byte	.LFE13-.LFB13
 923 0210 01       		.uleb128 0x1
 924 0211 9C       		.byte	0x9c
 925 0212 26020000 		.4byte	0x226
 926 0216 0F       		.uleb128 0xf
 927 0217 09020000 		.4byte	.LASF34
 928 021b 01       		.byte	0x1
 929 021c E302     		.2byte	0x2e3
 930 021e 6B000000 		.4byte	0x6b
 931 0222 02       		.uleb128 0x2
 932 0223 91       		.byte	0x91
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 33


 933 0224 77       		.sleb128 -9
 934 0225 00       		.byte	0
 935 0226 0A       		.uleb128 0xa
 936 0227 05010000 		.4byte	.LASF35
 937 022b 01       		.byte	0x1
 938 022c FD02     		.2byte	0x2fd
 939 022e 00000000 		.4byte	.LFB14
 940 0232 20000000 		.4byte	.LFE14-.LFB14
 941 0236 01       		.uleb128 0x1
 942 0237 9C       		.byte	0x9c
 943 0238 4C020000 		.4byte	0x24c
 944 023c 0B       		.uleb128 0xb
 945 023d 5C010000 		.4byte	.LASF36
 946 0241 01       		.byte	0x1
 947 0242 FD02     		.2byte	0x2fd
 948 0244 6B000000 		.4byte	0x6b
 949 0248 02       		.uleb128 0x2
 950 0249 91       		.byte	0x91
 951 024a 77       		.sleb128 -9
 952 024b 00       		.byte	0
 953 024c 0C       		.uleb128 0xc
 954 024d C1010000 		.4byte	.LASF37
 955 0251 01       		.byte	0x1
 956 0252 1603     		.2byte	0x316
 957 0254 77000000 		.4byte	0x77
 958 0258 00000000 		.4byte	.LFB15
 959 025c 14000000 		.4byte	.LFE15-.LFB15
 960 0260 01       		.uleb128 0x1
 961 0261 9C       		.byte	0x9c
 962 0262 0C       		.uleb128 0xc
 963 0263 7B010000 		.4byte	.LASF38
 964 0267 01       		.byte	0x1
 965 0268 3003     		.2byte	0x330
 966 026a 77000000 		.4byte	0x77
 967 026e 00000000 		.4byte	.LFB16
 968 0272 14000000 		.4byte	.LFE16-.LFB16
 969 0276 01       		.uleb128 0x1
 970 0277 9C       		.byte	0x9c
 971 0278 0C       		.uleb128 0xc
 972 0279 33010000 		.4byte	.LASF39
 973 027d 01       		.byte	0x1
 974 027e 7403     		.2byte	0x374
 975 0280 77000000 		.4byte	0x77
 976 0284 00000000 		.4byte	.LFB17
 977 0288 14000000 		.4byte	.LFE17-.LFB17
 978 028c 01       		.uleb128 0x1
 979 028d 9C       		.byte	0x9c
 980 028e 10       		.uleb128 0x10
 981 028f A9010000 		.4byte	.LASF44
 982 0293 01       		.byte	0x1
 983 0294 20       		.byte	0x20
 984 0295 6B000000 		.4byte	0x6b
 985 0299 05       		.uleb128 0x5
 986 029a 03       		.byte	0x3
 987 029b 00000000 		.4byte	PWM_1_initVar
 988 029f 00       		.byte	0
 989              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 34


 990              	.Ldebug_abbrev0:
 991 0000 01       		.uleb128 0x1
 992 0001 11       		.uleb128 0x11
 993 0002 01       		.byte	0x1
 994 0003 25       		.uleb128 0x25
 995 0004 0E       		.uleb128 0xe
 996 0005 13       		.uleb128 0x13
 997 0006 0B       		.uleb128 0xb
 998 0007 03       		.uleb128 0x3
 999 0008 0E       		.uleb128 0xe
 1000 0009 1B       		.uleb128 0x1b
 1001 000a 0E       		.uleb128 0xe
 1002 000b 55       		.uleb128 0x55
 1003 000c 17       		.uleb128 0x17
 1004 000d 11       		.uleb128 0x11
 1005 000e 01       		.uleb128 0x1
 1006 000f 10       		.uleb128 0x10
 1007 0010 17       		.uleb128 0x17
 1008 0011 00       		.byte	0
 1009 0012 00       		.byte	0
 1010 0013 02       		.uleb128 0x2
 1011 0014 24       		.uleb128 0x24
 1012 0015 00       		.byte	0
 1013 0016 0B       		.uleb128 0xb
 1014 0017 0B       		.uleb128 0xb
 1015 0018 3E       		.uleb128 0x3e
 1016 0019 0B       		.uleb128 0xb
 1017 001a 03       		.uleb128 0x3
 1018 001b 0E       		.uleb128 0xe
 1019 001c 00       		.byte	0
 1020 001d 00       		.byte	0
 1021 001e 03       		.uleb128 0x3
 1022 001f 24       		.uleb128 0x24
 1023 0020 00       		.byte	0
 1024 0021 0B       		.uleb128 0xb
 1025 0022 0B       		.uleb128 0xb
 1026 0023 3E       		.uleb128 0x3e
 1027 0024 0B       		.uleb128 0xb
 1028 0025 03       		.uleb128 0x3
 1029 0026 08       		.uleb128 0x8
 1030 0027 00       		.byte	0
 1031 0028 00       		.byte	0
 1032 0029 04       		.uleb128 0x4
 1033 002a 16       		.uleb128 0x16
 1034 002b 00       		.byte	0
 1035 002c 03       		.uleb128 0x3
 1036 002d 0E       		.uleb128 0xe
 1037 002e 3A       		.uleb128 0x3a
 1038 002f 0B       		.uleb128 0xb
 1039 0030 3B       		.uleb128 0x3b
 1040 0031 05       		.uleb128 0x5
 1041 0032 49       		.uleb128 0x49
 1042 0033 13       		.uleb128 0x13
 1043 0034 00       		.byte	0
 1044 0035 00       		.byte	0
 1045 0036 05       		.uleb128 0x5
 1046 0037 35       		.uleb128 0x35
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 35


 1047 0038 00       		.byte	0
 1048 0039 49       		.uleb128 0x49
 1049 003a 13       		.uleb128 0x13
 1050 003b 00       		.byte	0
 1051 003c 00       		.byte	0
 1052 003d 06       		.uleb128 0x6
 1053 003e 2E       		.uleb128 0x2e
 1054 003f 00       		.byte	0
 1055 0040 3F       		.uleb128 0x3f
 1056 0041 19       		.uleb128 0x19
 1057 0042 03       		.uleb128 0x3
 1058 0043 0E       		.uleb128 0xe
 1059 0044 3A       		.uleb128 0x3a
 1060 0045 0B       		.uleb128 0xb
 1061 0046 3B       		.uleb128 0x3b
 1062 0047 0B       		.uleb128 0xb
 1063 0048 27       		.uleb128 0x27
 1064 0049 19       		.uleb128 0x19
 1065 004a 11       		.uleb128 0x11
 1066 004b 01       		.uleb128 0x1
 1067 004c 12       		.uleb128 0x12
 1068 004d 06       		.uleb128 0x6
 1069 004e 40       		.uleb128 0x40
 1070 004f 18       		.uleb128 0x18
 1071 0050 9642     		.uleb128 0x2116
 1072 0052 19       		.uleb128 0x19
 1073 0053 00       		.byte	0
 1074 0054 00       		.byte	0
 1075 0055 07       		.uleb128 0x7
 1076 0056 2E       		.uleb128 0x2e
 1077 0057 01       		.byte	0x1
 1078 0058 3F       		.uleb128 0x3f
 1079 0059 19       		.uleb128 0x19
 1080 005a 03       		.uleb128 0x3
 1081 005b 0E       		.uleb128 0xe
 1082 005c 3A       		.uleb128 0x3a
 1083 005d 0B       		.uleb128 0xb
 1084 005e 3B       		.uleb128 0x3b
 1085 005f 0B       		.uleb128 0xb
 1086 0060 27       		.uleb128 0x27
 1087 0061 19       		.uleb128 0x19
 1088 0062 11       		.uleb128 0x11
 1089 0063 01       		.uleb128 0x1
 1090 0064 12       		.uleb128 0x12
 1091 0065 06       		.uleb128 0x6
 1092 0066 40       		.uleb128 0x40
 1093 0067 18       		.uleb128 0x18
 1094 0068 9642     		.uleb128 0x2116
 1095 006a 19       		.uleb128 0x19
 1096 006b 01       		.uleb128 0x1
 1097 006c 13       		.uleb128 0x13
 1098 006d 00       		.byte	0
 1099 006e 00       		.byte	0
 1100 006f 08       		.uleb128 0x8
 1101 0070 34       		.uleb128 0x34
 1102 0071 00       		.byte	0
 1103 0072 03       		.uleb128 0x3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 36


 1104 0073 0E       		.uleb128 0xe
 1105 0074 3A       		.uleb128 0x3a
 1106 0075 0B       		.uleb128 0xb
 1107 0076 3B       		.uleb128 0x3b
 1108 0077 0B       		.uleb128 0xb
 1109 0078 49       		.uleb128 0x49
 1110 0079 13       		.uleb128 0x13
 1111 007a 02       		.uleb128 0x2
 1112 007b 18       		.uleb128 0x18
 1113 007c 00       		.byte	0
 1114 007d 00       		.byte	0
 1115 007e 09       		.uleb128 0x9
 1116 007f 2E       		.uleb128 0x2e
 1117 0080 00       		.byte	0
 1118 0081 3F       		.uleb128 0x3f
 1119 0082 19       		.uleb128 0x19
 1120 0083 03       		.uleb128 0x3
 1121 0084 0E       		.uleb128 0xe
 1122 0085 3A       		.uleb128 0x3a
 1123 0086 0B       		.uleb128 0xb
 1124 0087 3B       		.uleb128 0x3b
 1125 0088 0B       		.uleb128 0xb
 1126 0089 27       		.uleb128 0x27
 1127 008a 19       		.uleb128 0x19
 1128 008b 11       		.uleb128 0x11
 1129 008c 01       		.uleb128 0x1
 1130 008d 12       		.uleb128 0x12
 1131 008e 06       		.uleb128 0x6
 1132 008f 40       		.uleb128 0x40
 1133 0090 18       		.uleb128 0x18
 1134 0091 9742     		.uleb128 0x2117
 1135 0093 19       		.uleb128 0x19
 1136 0094 00       		.byte	0
 1137 0095 00       		.byte	0
 1138 0096 0A       		.uleb128 0xa
 1139 0097 2E       		.uleb128 0x2e
 1140 0098 01       		.byte	0x1
 1141 0099 3F       		.uleb128 0x3f
 1142 009a 19       		.uleb128 0x19
 1143 009b 03       		.uleb128 0x3
 1144 009c 0E       		.uleb128 0xe
 1145 009d 3A       		.uleb128 0x3a
 1146 009e 0B       		.uleb128 0xb
 1147 009f 3B       		.uleb128 0x3b
 1148 00a0 05       		.uleb128 0x5
 1149 00a1 27       		.uleb128 0x27
 1150 00a2 19       		.uleb128 0x19
 1151 00a3 11       		.uleb128 0x11
 1152 00a4 01       		.uleb128 0x1
 1153 00a5 12       		.uleb128 0x12
 1154 00a6 06       		.uleb128 0x6
 1155 00a7 40       		.uleb128 0x40
 1156 00a8 18       		.uleb128 0x18
 1157 00a9 9742     		.uleb128 0x2117
 1158 00ab 19       		.uleb128 0x19
 1159 00ac 01       		.uleb128 0x1
 1160 00ad 13       		.uleb128 0x13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 37


 1161 00ae 00       		.byte	0
 1162 00af 00       		.byte	0
 1163 00b0 0B       		.uleb128 0xb
 1164 00b1 05       		.uleb128 0x5
 1165 00b2 00       		.byte	0
 1166 00b3 03       		.uleb128 0x3
 1167 00b4 0E       		.uleb128 0xe
 1168 00b5 3A       		.uleb128 0x3a
 1169 00b6 0B       		.uleb128 0xb
 1170 00b7 3B       		.uleb128 0x3b
 1171 00b8 05       		.uleb128 0x5
 1172 00b9 49       		.uleb128 0x49
 1173 00ba 13       		.uleb128 0x13
 1174 00bb 02       		.uleb128 0x2
 1175 00bc 18       		.uleb128 0x18
 1176 00bd 00       		.byte	0
 1177 00be 00       		.byte	0
 1178 00bf 0C       		.uleb128 0xc
 1179 00c0 2E       		.uleb128 0x2e
 1180 00c1 00       		.byte	0
 1181 00c2 3F       		.uleb128 0x3f
 1182 00c3 19       		.uleb128 0x19
 1183 00c4 03       		.uleb128 0x3
 1184 00c5 0E       		.uleb128 0xe
 1185 00c6 3A       		.uleb128 0x3a
 1186 00c7 0B       		.uleb128 0xb
 1187 00c8 3B       		.uleb128 0x3b
 1188 00c9 05       		.uleb128 0x5
 1189 00ca 27       		.uleb128 0x27
 1190 00cb 19       		.uleb128 0x19
 1191 00cc 49       		.uleb128 0x49
 1192 00cd 13       		.uleb128 0x13
 1193 00ce 11       		.uleb128 0x11
 1194 00cf 01       		.uleb128 0x1
 1195 00d0 12       		.uleb128 0x12
 1196 00d1 06       		.uleb128 0x6
 1197 00d2 40       		.uleb128 0x40
 1198 00d3 18       		.uleb128 0x18
 1199 00d4 9742     		.uleb128 0x2117
 1200 00d6 19       		.uleb128 0x19
 1201 00d7 00       		.byte	0
 1202 00d8 00       		.byte	0
 1203 00d9 0D       		.uleb128 0xd
 1204 00da 2E       		.uleb128 0x2e
 1205 00db 00       		.byte	0
 1206 00dc 3F       		.uleb128 0x3f
 1207 00dd 19       		.uleb128 0x19
 1208 00de 03       		.uleb128 0x3
 1209 00df 0E       		.uleb128 0xe
 1210 00e0 3A       		.uleb128 0x3a
 1211 00e1 0B       		.uleb128 0xb
 1212 00e2 3B       		.uleb128 0x3b
 1213 00e3 05       		.uleb128 0x5
 1214 00e4 27       		.uleb128 0x27
 1215 00e5 19       		.uleb128 0x19
 1216 00e6 11       		.uleb128 0x11
 1217 00e7 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 38


 1218 00e8 12       		.uleb128 0x12
 1219 00e9 06       		.uleb128 0x6
 1220 00ea 40       		.uleb128 0x40
 1221 00eb 18       		.uleb128 0x18
 1222 00ec 9642     		.uleb128 0x2116
 1223 00ee 19       		.uleb128 0x19
 1224 00ef 00       		.byte	0
 1225 00f0 00       		.byte	0
 1226 00f1 0E       		.uleb128 0xe
 1227 00f2 2E       		.uleb128 0x2e
 1228 00f3 01       		.byte	0x1
 1229 00f4 3F       		.uleb128 0x3f
 1230 00f5 19       		.uleb128 0x19
 1231 00f6 03       		.uleb128 0x3
 1232 00f7 0E       		.uleb128 0xe
 1233 00f8 3A       		.uleb128 0x3a
 1234 00f9 0B       		.uleb128 0xb
 1235 00fa 3B       		.uleb128 0x3b
 1236 00fb 05       		.uleb128 0x5
 1237 00fc 27       		.uleb128 0x27
 1238 00fd 19       		.uleb128 0x19
 1239 00fe 49       		.uleb128 0x49
 1240 00ff 13       		.uleb128 0x13
 1241 0100 11       		.uleb128 0x11
 1242 0101 01       		.uleb128 0x1
 1243 0102 12       		.uleb128 0x12
 1244 0103 06       		.uleb128 0x6
 1245 0104 40       		.uleb128 0x40
 1246 0105 18       		.uleb128 0x18
 1247 0106 9742     		.uleb128 0x2117
 1248 0108 19       		.uleb128 0x19
 1249 0109 01       		.uleb128 0x1
 1250 010a 13       		.uleb128 0x13
 1251 010b 00       		.byte	0
 1252 010c 00       		.byte	0
 1253 010d 0F       		.uleb128 0xf
 1254 010e 34       		.uleb128 0x34
 1255 010f 00       		.byte	0
 1256 0110 03       		.uleb128 0x3
 1257 0111 0E       		.uleb128 0xe
 1258 0112 3A       		.uleb128 0x3a
 1259 0113 0B       		.uleb128 0xb
 1260 0114 3B       		.uleb128 0x3b
 1261 0115 05       		.uleb128 0x5
 1262 0116 49       		.uleb128 0x49
 1263 0117 13       		.uleb128 0x13
 1264 0118 02       		.uleb128 0x2
 1265 0119 18       		.uleb128 0x18
 1266 011a 00       		.byte	0
 1267 011b 00       		.byte	0
 1268 011c 10       		.uleb128 0x10
 1269 011d 34       		.uleb128 0x34
 1270 011e 00       		.byte	0
 1271 011f 03       		.uleb128 0x3
 1272 0120 0E       		.uleb128 0xe
 1273 0121 3A       		.uleb128 0x3a
 1274 0122 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 39


 1275 0123 3B       		.uleb128 0x3b
 1276 0124 0B       		.uleb128 0xb
 1277 0125 49       		.uleb128 0x49
 1278 0126 13       		.uleb128 0x13
 1279 0127 3F       		.uleb128 0x3f
 1280 0128 19       		.uleb128 0x19
 1281 0129 02       		.uleb128 0x2
 1282 012a 18       		.uleb128 0x18
 1283 012b 00       		.byte	0
 1284 012c 00       		.byte	0
 1285 012d 00       		.byte	0
 1286              		.section	.debug_aranges,"",%progbits
 1287 0000 94000000 		.4byte	0x94
 1288 0004 0200     		.2byte	0x2
 1289 0006 00000000 		.4byte	.Ldebug_info0
 1290 000a 04       		.byte	0x4
 1291 000b 00       		.byte	0
 1292 000c 0000     		.2byte	0
 1293 000e 0000     		.2byte	0
 1294 0010 00000000 		.4byte	.LFB2
 1295 0014 24000000 		.4byte	.LFE2-.LFB2
 1296 0018 00000000 		.4byte	.LFB3
 1297 001c 9C000000 		.4byte	.LFE3-.LFB3
 1298 0020 00000000 		.4byte	.LFB4
 1299 0024 20000000 		.4byte	.LFE4-.LFB4
 1300 0028 00000000 		.4byte	.LFB5
 1301 002c 1C000000 		.4byte	.LFE5-.LFB5
 1302 0030 00000000 		.4byte	.LFB6
 1303 0034 20000000 		.4byte	.LFE6-.LFB6
 1304 0038 00000000 		.4byte	.LFB7
 1305 003c 1C000000 		.4byte	.LFE7-.LFB7
 1306 0040 00000000 		.4byte	.LFB8
 1307 0044 1C000000 		.4byte	.LFE8-.LFB8
 1308 0048 00000000 		.4byte	.LFB9
 1309 004c 20000000 		.4byte	.LFE9-.LFB9
 1310 0050 00000000 		.4byte	.LFB10
 1311 0054 20000000 		.4byte	.LFE10-.LFB10
 1312 0058 00000000 		.4byte	.LFB11
 1313 005c 20000000 		.4byte	.LFE11-.LFB11
 1314 0060 00000000 		.4byte	.LFB12
 1315 0064 14000000 		.4byte	.LFE12-.LFB12
 1316 0068 00000000 		.4byte	.LFB13
 1317 006c 20000000 		.4byte	.LFE13-.LFB13
 1318 0070 00000000 		.4byte	.LFB14
 1319 0074 20000000 		.4byte	.LFE14-.LFB14
 1320 0078 00000000 		.4byte	.LFB15
 1321 007c 14000000 		.4byte	.LFE15-.LFB15
 1322 0080 00000000 		.4byte	.LFB16
 1323 0084 14000000 		.4byte	.LFE16-.LFB16
 1324 0088 00000000 		.4byte	.LFB17
 1325 008c 14000000 		.4byte	.LFE17-.LFB17
 1326 0090 00000000 		.4byte	0
 1327 0094 00000000 		.4byte	0
 1328              		.section	.debug_ranges,"",%progbits
 1329              	.Ldebug_ranges0:
 1330 0000 00000000 		.4byte	.LFB2
 1331 0004 24000000 		.4byte	.LFE2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 40


 1332 0008 00000000 		.4byte	.LFB3
 1333 000c 9C000000 		.4byte	.LFE3
 1334 0010 00000000 		.4byte	.LFB4
 1335 0014 20000000 		.4byte	.LFE4
 1336 0018 00000000 		.4byte	.LFB5
 1337 001c 1C000000 		.4byte	.LFE5
 1338 0020 00000000 		.4byte	.LFB6
 1339 0024 20000000 		.4byte	.LFE6
 1340 0028 00000000 		.4byte	.LFB7
 1341 002c 1C000000 		.4byte	.LFE7
 1342 0030 00000000 		.4byte	.LFB8
 1343 0034 1C000000 		.4byte	.LFE8
 1344 0038 00000000 		.4byte	.LFB9
 1345 003c 20000000 		.4byte	.LFE9
 1346 0040 00000000 		.4byte	.LFB10
 1347 0044 20000000 		.4byte	.LFE10
 1348 0048 00000000 		.4byte	.LFB11
 1349 004c 20000000 		.4byte	.LFE11
 1350 0050 00000000 		.4byte	.LFB12
 1351 0054 14000000 		.4byte	.LFE12
 1352 0058 00000000 		.4byte	.LFB13
 1353 005c 20000000 		.4byte	.LFE13
 1354 0060 00000000 		.4byte	.LFB14
 1355 0064 20000000 		.4byte	.LFE14
 1356 0068 00000000 		.4byte	.LFB15
 1357 006c 14000000 		.4byte	.LFE15
 1358 0070 00000000 		.4byte	.LFB16
 1359 0074 14000000 		.4byte	.LFE16
 1360 0078 00000000 		.4byte	.LFB17
 1361 007c 14000000 		.4byte	.LFE17
 1362 0080 00000000 		.4byte	0
 1363 0084 00000000 		.4byte	0
 1364              		.section	.debug_line,"",%progbits
 1365              	.Ldebug_line0:
 1366 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 1366      02004400 
 1366      00000201 
 1366      FB0E0D00 
 1366      01010101 
 1367              	.LASF15:
 1368 0000 72656731 		.ascii	"reg16\000"
 1368      3600
 1369              	.LASF20:
 1370 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1370      315F456E 
 1370      61626C65 
 1370      00
 1371              	.LASF40:
 1372 0013 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1372      4320342E 
 1372      392E3320 
 1372      32303135 
 1372      30333033 
 1373 0046 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1373      20726576 
 1373      6973696F 
 1373      6E203232 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 41


 1373      31323230 
 1374 0079 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1374      66756E63 
 1374      74696F6E 
 1374      2D736563 
 1374      74696F6E 
 1375              	.LASF23:
 1376 00a1 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1376      315F5772 
 1376      69746543 
 1376      6F756E74 
 1376      657200
 1377              	.LASF27:
 1378 00b4 70657269 		.ascii	"period\000"
 1378      6F6400
 1379              	.LASF24:
 1380 00bb 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1380      315F436C 
 1380      65617246 
 1380      49464F00 
 1381              	.LASF3:
 1382 00cb 73686F72 		.ascii	"short unsigned int\000"
 1382      7420756E 
 1382      7369676E 
 1382      65642069 
 1382      6E7400
 1383              	.LASF33:
 1384 00de 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1384      315F5265 
 1384      61645374 
 1384      61747573 
 1384      52656769 
 1385              	.LASF11:
 1386 00f7 666C6F61 		.ascii	"float\000"
 1386      7400
 1387              	.LASF26:
 1388 00fd 636F756E 		.ascii	"counter\000"
 1388      74657200 
 1389              	.LASF35:
 1390 0105 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1390      315F5772 
 1390      69746543 
 1390      6F6E7472 
 1390      6F6C5265 
 1391              	.LASF1:
 1392 0120 756E7369 		.ascii	"unsigned char\000"
 1392      676E6564 
 1392      20636861 
 1392      7200
 1393              	.LASF14:
 1394 012e 72656738 		.ascii	"reg8\000"
 1394      00
 1395              	.LASF39:
 1396 0133 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1396      315F5265 
 1396      61645065 
 1396      72696F64 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 42


 1396      00
 1397              	.LASF5:
 1398 0144 6C6F6E67 		.ascii	"long unsigned int\000"
 1398      20756E73 
 1398      69676E65 
 1398      6420696E 
 1398      7400
 1399              	.LASF9:
 1400 0156 75696E74 		.ascii	"uint8\000"
 1400      3800
 1401              	.LASF36:
 1402 015c 636F6E74 		.ascii	"control\000"
 1402      726F6C00 
 1403              	.LASF30:
 1404 0164 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1404      315F5365 
 1404      74496E74 
 1404      65727275 
 1404      70744D6F 
 1405              	.LASF38:
 1406 017b 50574D5F 		.ascii	"PWM_1_ReadCompare\000"
 1406      315F5265 
 1406      6164436F 
 1406      6D706172 
 1406      6500
 1407              	.LASF12:
 1408 018d 646F7562 		.ascii	"double\000"
 1408      6C6500
 1409              	.LASF18:
 1410 0194 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1410      315F696E 
 1410      74657272 
 1410      75707453 
 1410      74617465 
 1411              	.LASF44:
 1412 01a9 50574D5F 		.ascii	"PWM_1_initVar\000"
 1412      315F696E 
 1412      69745661 
 1412      7200
 1413              	.LASF2:
 1414 01b7 73686F72 		.ascii	"short int\000"
 1414      7420696E 
 1414      7400
 1415              	.LASF37:
 1416 01c1 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1416      315F5265 
 1416      61644361 
 1416      70747572 
 1416      6500
 1417              	.LASF10:
 1418 01d3 75696E74 		.ascii	"uint16\000"
 1418      313600
 1419              	.LASF22:
 1420 01da 50574D5F 		.ascii	"PWM_1_Init\000"
 1420      315F496E 
 1420      697400
 1421              	.LASF8:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 43


 1422 01e5 756E7369 		.ascii	"unsigned int\000"
 1422      676E6564 
 1422      20696E74 
 1422      00
 1423              	.LASF7:
 1424 01f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1424      206C6F6E 
 1424      6720756E 
 1424      7369676E 
 1424      65642069 
 1425              	.LASF34:
 1426 0209 72657375 		.ascii	"result\000"
 1426      6C7400
 1427              	.LASF42:
 1428 0210 433A5C44 		.ascii	"C:\\Dropbox\\Projects\\George Posture Correction Pr"
 1428      726F7062 
 1428      6F785C50 
 1428      726F6A65 
 1428      6374735C 
 1429 0240 6F6A6563 		.ascii	"oject\\BLE_Battery_Level\\BackBone_v1.cydsn\000"
 1429      745C424C 
 1429      455F4261 
 1429      74746572 
 1429      795F4C65 
 1430              	.LASF17:
 1431 026a 6374726C 		.ascii	"ctrl\000"
 1431      00
 1432              	.LASF16:
 1433 026f 73697A65 		.ascii	"sizetype\000"
 1433      74797065 
 1433      00
 1434              	.LASF28:
 1435 0278 50574D5F 		.ascii	"PWM_1_WriteCompare\000"
 1435      315F5772 
 1435      69746543 
 1435      6F6D7061 
 1435      726500
 1436              	.LASF6:
 1437 028b 6C6F6E67 		.ascii	"long long int\000"
 1437      206C6F6E 
 1437      6720696E 
 1437      7400
 1438              	.LASF43:
 1439 0299 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1439      315F5265 
 1439      6164436F 
 1439      6E74726F 
 1439      6C526567 
 1440              	.LASF31:
 1441 02b3 696E7465 		.ascii	"interruptMode\000"
 1441      72727570 
 1441      744D6F64 
 1441      6500
 1442              	.LASF25:
 1443 02c1 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1443      315F5772 
 1443      69746550 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccpVN9HA.s 			page 44


 1443      6572696F 
 1443      6400
 1444              	.LASF41:
 1445 02d3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 1445      6E657261 
 1445      7465645F 
 1445      536F7572 
 1445      63655C50 
 1446              	.LASF32:
 1447 02f4 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1447      315F5265 
 1447      6164436F 
 1447      756E7465 
 1447      7200
 1448              	.LASF21:
 1449 0306 50574D5F 		.ascii	"PWM_1_Stop\000"
 1449      315F5374 
 1449      6F7000
 1450              	.LASF4:
 1451 0311 6C6F6E67 		.ascii	"long int\000"
 1451      20696E74 
 1451      00
 1452              	.LASF13:
 1453 031a 63686172 		.ascii	"char\000"
 1453      00
 1454              	.LASF0:
 1455 031f 7369676E 		.ascii	"signed char\000"
 1455      65642063 
 1455      68617200 
 1456              	.LASF29:
 1457 032b 636F6D70 		.ascii	"compare\000"
 1457      61726500 
 1458              	.LASF19:
 1459 0333 50574D5F 		.ascii	"PWM_1_Start\000"
 1459      315F5374 
 1459      61727400 
 1460              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
