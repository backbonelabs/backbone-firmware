ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"MotorPWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MotorPWM_Enable,"ax",%progbits
  18              		.align	1
  19              		.global	MotorPWM_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	MotorPWM_Enable, %function
  23              	MotorPWM_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\MotorPWM.c"
   1:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/MotorPWM.c **** * File Name: MotorPWM.c
   3:.\Generated_Source\PSoC4/MotorPWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/MotorPWM.c **** *
   5:.\Generated_Source\PSoC4/MotorPWM.c **** * Description:
   6:.\Generated_Source\PSoC4/MotorPWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/MotorPWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/MotorPWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/MotorPWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/MotorPWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/MotorPWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/MotorPWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/MotorPWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/MotorPWM.c **** *
  15:.\Generated_Source\PSoC4/MotorPWM.c **** * Note:
  16:.\Generated_Source\PSoC4/MotorPWM.c **** *
  17:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/MotorPWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/MotorPWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/MotorPWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/MotorPWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/MotorPWM.c **** 
  24:.\Generated_Source\PSoC4/MotorPWM.c **** #include "MotorPWM.h"
  25:.\Generated_Source\PSoC4/MotorPWM.c **** 
  26:.\Generated_Source\PSoC4/MotorPWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/MotorPWM.c **** #ifdef MotorPWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/MotorPWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/MotorPWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* MotorPWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/MotorPWM.c **** 
  32:.\Generated_Source\PSoC4/MotorPWM.c **** uint8 MotorPWM_initVar = 0u;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 2


  33:.\Generated_Source\PSoC4/MotorPWM.c **** 
  34:.\Generated_Source\PSoC4/MotorPWM.c **** 
  35:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Start
  37:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/MotorPWM.c **** *
  39:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
  40:.\Generated_Source\PSoC4/MotorPWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/MotorPWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/MotorPWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/MotorPWM.c **** *
  44:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
  45:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  46:.\Generated_Source\PSoC4/MotorPWM.c **** *
  47:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
  48:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  49:.\Generated_Source\PSoC4/MotorPWM.c **** *
  50:.\Generated_Source\PSoC4/MotorPWM.c **** * Global variables:
  51:.\Generated_Source\PSoC4/MotorPWM.c **** *  MotorPWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/MotorPWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/MotorPWM.c **** *
  54:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Start(void) 
  56:.\Generated_Source\PSoC4/MotorPWM.c **** {
  57:.\Generated_Source\PSoC4/MotorPWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/MotorPWM.c ****     if(MotorPWM_initVar == 0u)
  59:.\Generated_Source\PSoC4/MotorPWM.c ****     {
  60:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_Init();
  61:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_initVar = 1u;
  62:.\Generated_Source\PSoC4/MotorPWM.c ****     }
  63:.\Generated_Source\PSoC4/MotorPWM.c ****     MotorPWM_Enable();
  64:.\Generated_Source\PSoC4/MotorPWM.c **** 
  65:.\Generated_Source\PSoC4/MotorPWM.c **** }
  66:.\Generated_Source\PSoC4/MotorPWM.c **** 
  67:.\Generated_Source\PSoC4/MotorPWM.c **** 
  68:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Init
  70:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/MotorPWM.c **** *
  72:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
  73:.\Generated_Source\PSoC4/MotorPWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/MotorPWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/MotorPWM.c **** *  MotorPWM_Start().
  76:.\Generated_Source\PSoC4/MotorPWM.c **** *
  77:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
  78:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  79:.\Generated_Source\PSoC4/MotorPWM.c **** *
  80:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
  81:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
  82:.\Generated_Source\PSoC4/MotorPWM.c **** *
  83:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Init(void) 
  85:.\Generated_Source\PSoC4/MotorPWM.c **** {
  86:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction || MotorPWM_UseControl)
  87:.\Generated_Source\PSoC4/MotorPWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction || MotorPWM_UseControl) */
  89:.\Generated_Source\PSoC4/MotorPWM.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 3


  90:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(!MotorPWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UseStatus)
  92:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/MotorPWM.c ****             uint8 MotorPWM_interruptState;
  94:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseStatus) */
  95:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (!MotorPWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/MotorPWM.c **** 
  97:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/MotorPWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL |= MotorPWM_CFG0_MODE;
 100:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_DeadBand2_4)
 101:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_CONTROL |= MotorPWM_CFG0_DB;
 102:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/MotorPWM.c **** 
 104:.\Generated_Source\PSoC4/MotorPWM.c ****         ctrl = MotorPWM_CONTROL3 & ((uint8 )(~MotorPWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL3 = ctrl | MotorPWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/MotorPWM.c **** 
 107:.\Generated_Source\PSoC4/MotorPWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 &= ((uint8)(~MotorPWM_RT1_MASK));
 109:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 |= MotorPWM_SYNC;
 110:.\Generated_Source\PSoC4/MotorPWM.c **** 
 111:.\Generated_Source\PSoC4/MotorPWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 &= ((uint8)(~MotorPWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_RT1 |= MotorPWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/MotorPWM.c **** 
 115:.\Generated_Source\PSoC4/MotorPWM.c ****     #elif (MotorPWM_UseControl)
 116:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/MotorPWM.c ****         ctrl = MotorPWM_CONTROL & ((uint8)(~MotorPWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/MotorPWM.c ****                 ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL = ctrl | MotorPWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/MotorPWM.c ****                                    MotorPWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/MotorPWM.c **** 
 123:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (!MotorPWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_Resolution == 8)
 125:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP0 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/MotorPWM.c ****         #else /* (MotorPWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP0 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP1 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_Resolution == 8) */
 132:.\Generated_Source\PSoC4/MotorPWM.c **** 
 133:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_WriteCounter(MotorPWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (!MotorPWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/MotorPWM.c **** 
 136:.\Generated_Source\PSoC4/MotorPWM.c ****     MotorPWM_WritePeriod(MotorPWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/MotorPWM.c **** 
 138:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteCompare(MotorPWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 141:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteCompare1(MotorPWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteCompare2(MotorPWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/MotorPWM.c **** 
 145:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_KillModeMinTime)
 146:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteKillTime(MotorPWM_MinimumKillTime);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 4


 147:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/MotorPWM.c **** 
 149:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_DeadBandUsed)
 150:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_WriteDeadTime(MotorPWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/MotorPWM.c **** 
 153:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_SetInterruptMode(MotorPWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/MotorPWM.c **** 
 157:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_ENABLE |= MotorPWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL2 |= MotorPWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/MotorPWM.c ****     #else
 163:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UseStatus)
 164:.\Generated_Source\PSoC4/MotorPWM.c **** 
 165:.\Generated_Source\PSoC4/MotorPWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_STATUS_AUX_CTRL |= MotorPWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/MotorPWM.c **** 
 171:.\Generated_Source\PSoC4/MotorPWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/MotorPWM.c ****             CyExitCriticalSection(MotorPWM_interruptState);
 173:.\Generated_Source\PSoC4/MotorPWM.c **** 
 174:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Clear the FIFO to enable the MotorPWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/MotorPWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_ClearFIFO();
 177:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseStatus) */
 178:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/MotorPWM.c **** }
 180:.\Generated_Source\PSoC4/MotorPWM.c **** 
 181:.\Generated_Source\PSoC4/MotorPWM.c **** 
 182:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Enable
 184:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/MotorPWM.c **** *
 186:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 187:.\Generated_Source\PSoC4/MotorPWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/MotorPWM.c **** *
 189:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 190:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 191:.\Generated_Source\PSoC4/MotorPWM.c **** *
 192:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 193:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 194:.\Generated_Source\PSoC4/MotorPWM.c **** *
 195:.\Generated_Source\PSoC4/MotorPWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/MotorPWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/MotorPWM.c **** *
 198:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Enable(void) 
 200:.\Generated_Source\PSoC4/MotorPWM.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/MotorPWM.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 5


 202:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_ENABLE |= MotorPWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_STBY_ENABLE |= MotorPWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/MotorPWM.c **** 
 207:.\Generated_Source\PSoC4/MotorPWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseControl || MotorPWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL |= MotorPWM_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 8023     		mov	r3, #128
  30 0002 024A     		ldr	r2, .L2
 210:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseControl || MotorPWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/MotorPWM.c **** }
  31              		.loc 1 211 0
  32              		@ sp needed
 209:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseControl || MotorPWM_UsingFixedFunction) */
  33              		.loc 1 209 0
  34 0004 1178     		ldrb	r1, [r2]
  35 0006 0B43     		orr	r3, r1
  36 0008 1370     		strb	r3, [r2]
  37              		.loc 1 211 0
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 71000F40 		.word	1074724977
  43              		.cfi_endproc
  44              	.LFE4:
  45              		.size	MotorPWM_Enable, .-MotorPWM_Enable
  46              		.section	.text.MotorPWM_Stop,"ax",%progbits
  47              		.align	1
  48              		.global	MotorPWM_Stop
  49              		.code	16
  50              		.thumb_func
  51              		.type	MotorPWM_Stop, %function
  52              	MotorPWM_Stop:
  53              	.LFB5:
 212:.\Generated_Source\PSoC4/MotorPWM.c **** 
 213:.\Generated_Source\PSoC4/MotorPWM.c **** 
 214:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_Stop
 216:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/MotorPWM.c **** *
 218:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 219:.\Generated_Source\PSoC4/MotorPWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/MotorPWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/MotorPWM.c **** *
 222:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 223:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 224:.\Generated_Source\PSoC4/MotorPWM.c **** *
 225:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 226:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 227:.\Generated_Source\PSoC4/MotorPWM.c **** *
 228:.\Generated_Source\PSoC4/MotorPWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/MotorPWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/MotorPWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/MotorPWM.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 6


 232:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_Stop(void) 
 234:.\Generated_Source\PSoC4/MotorPWM.c **** {
  54              		.loc 1 234 0
  55              		.cfi_startproc
 235:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseControl || MotorPWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_CONTROL &= ((uint8)(~MotorPWM_CTRL_ENABLE));
  56              		.loc 1 236 0
  57 0000 7F23     		mov	r3, #127
  58 0002 024A     		ldr	r2, .L5
 237:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseControl || MotorPWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/MotorPWM.c **** 
 239:.\Generated_Source\PSoC4/MotorPWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_ENABLE &= ((uint8)(~MotorPWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_GLOBAL_STBY_ENABLE &= ((uint8)(~MotorPWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/MotorPWM.c **** }
  59              		.loc 1 244 0
  60              		@ sp needed
 236:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UseControl || MotorPWM_UsingFixedFunction) */
  61              		.loc 1 236 0
  62 0004 1178     		ldrb	r1, [r2]
  63 0006 0B40     		and	r3, r1
  64 0008 1370     		strb	r3, [r2]
  65              		.loc 1 244 0
  66 000a 7047     		bx	lr
  67              	.L6:
  68              		.align	2
  69              	.L5:
  70 000c 71000F40 		.word	1074724977
  71              		.cfi_endproc
  72              	.LFE5:
  73              		.size	MotorPWM_Stop, .-MotorPWM_Stop
  74              		.section	.text.MotorPWM_WriteCounter,"ax",%progbits
  75              		.align	1
  76              		.global	MotorPWM_WriteCounter
  77              		.code	16
  78              		.thumb_func
  79              		.type	MotorPWM_WriteCounter, %function
  80              	MotorPWM_WriteCounter:
  81              	.LFB6:
 245:.\Generated_Source\PSoC4/MotorPWM.c **** 
 246:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_CompareMode1SW)
 248:.\Generated_Source\PSoC4/MotorPWM.c **** 
 249:.\Generated_Source\PSoC4/MotorPWM.c **** 
 250:.\Generated_Source\PSoC4/MotorPWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/MotorPWM.c ****         * Function Name: MotorPWM_SetCompareMode
 252:.\Generated_Source\PSoC4/MotorPWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 254:.\Generated_Source\PSoC4/MotorPWM.c ****         * Summary:
 255:.\Generated_Source\PSoC4/MotorPWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/MotorPWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 258:.\Generated_Source\PSoC4/MotorPWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/MotorPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 7


 260:.\Generated_Source\PSoC4/MotorPWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 262:.\Generated_Source\PSoC4/MotorPWM.c ****         * Return:
 263:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 264:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 265:.\Generated_Source\PSoC4/MotorPWM.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/MotorPWM.c ****         void MotorPWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/MotorPWM.c ****         {
 268:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/MotorPWM.c **** 
 270:.\Generated_Source\PSoC4/MotorPWM.c ****                 #if(0 != MotorPWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE1
 272:.\Generated_Source\PSoC4/MotorPWM.c ****                 #else
 273:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/MotorPWM.c ****                 #endif /* (0 != MotorPWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/MotorPWM.c **** 
 276:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL3 &= ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data
 277:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/MotorPWM.c **** 
 279:.\Generated_Source\PSoC4/MotorPWM.c ****             #elif (MotorPWM_UseControl)
 280:.\Generated_Source\PSoC4/MotorPWM.c **** 
 281:.\Generated_Source\PSoC4/MotorPWM.c ****                 #if(0 != MotorPWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE
 283:.\Generated_Source\PSoC4/MotorPWM.c ****                                                 MotorPWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/MotorPWM.c ****                 #else
 285:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode1masked = comparemode & MotorPWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/MotorPWM.c ****                 #endif /* (0 != MotorPWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/MotorPWM.c **** 
 288:.\Generated_Source\PSoC4/MotorPWM.c ****                 #if(0 != MotorPWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE
 290:.\Generated_Source\PSoC4/MotorPWM.c ****                                                MotorPWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/MotorPWM.c ****                 #else
 292:.\Generated_Source\PSoC4/MotorPWM.c ****                     uint8 comparemode2masked = comparemode & MotorPWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/MotorPWM.c ****                 #endif /* (0 != MotorPWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/MotorPWM.c **** 
 295:.\Generated_Source\PSoC4/MotorPWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL &= ((uint8)(~(MotorPWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/MotorPWM.c ****                                             MotorPWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/MotorPWM.c **** 
 300:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 301:.\Generated_Source\PSoC4/MotorPWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/MotorPWM.c ****         }
 304:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* MotorPWM_CompareMode1SW */
 305:.\Generated_Source\PSoC4/MotorPWM.c **** 
 306:.\Generated_Source\PSoC4/MotorPWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/MotorPWM.c **** 
 308:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_CompareMode1SW)
 309:.\Generated_Source\PSoC4/MotorPWM.c **** 
 310:.\Generated_Source\PSoC4/MotorPWM.c **** 
 311:.\Generated_Source\PSoC4/MotorPWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/MotorPWM.c ****         * Function Name: MotorPWM_SetCompareMode1
 313:.\Generated_Source\PSoC4/MotorPWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 315:.\Generated_Source\PSoC4/MotorPWM.c ****         * Summary:
 316:.\Generated_Source\PSoC4/MotorPWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 8


 317:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 318:.\Generated_Source\PSoC4/MotorPWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/MotorPWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/MotorPWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 322:.\Generated_Source\PSoC4/MotorPWM.c ****         * Return:
 323:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 324:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 325:.\Generated_Source\PSoC4/MotorPWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/MotorPWM.c ****         void MotorPWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/MotorPWM.c ****         {
 328:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(0 != MotorPWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/MotorPWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE1_SHI
 330:.\Generated_Source\PSoC4/MotorPWM.c ****                                            MotorPWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 332:.\Generated_Source\PSoC4/MotorPWM.c ****                 uint8 comparemodemasked = comparemode & MotorPWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (0 != MotorPWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/MotorPWM.c **** 
 335:.\Generated_Source\PSoC4/MotorPWM.c ****             #if (MotorPWM_UseControl)
 336:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL &= ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode 
 337:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_UseControl) */
 339:.\Generated_Source\PSoC4/MotorPWM.c ****         }
 340:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* MotorPWM_CompareMode1SW */
 341:.\Generated_Source\PSoC4/MotorPWM.c **** 
 342:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_CompareMode2SW)
 343:.\Generated_Source\PSoC4/MotorPWM.c **** 
 344:.\Generated_Source\PSoC4/MotorPWM.c **** 
 345:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_SetCompareMode2
 347:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 349:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 350:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 352:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/MotorPWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/MotorPWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 356:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 357:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 358:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 359:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 362:.\Generated_Source\PSoC4/MotorPWM.c **** 
 363:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(0 != MotorPWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/MotorPWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << MotorPWM_CTRL_CMPMODE2_SHIFT))
 365:.\Generated_Source\PSoC4/MotorPWM.c ****                                                  MotorPWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 367:.\Generated_Source\PSoC4/MotorPWM.c ****             uint8 comparemodemasked = comparemode & MotorPWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (0 != MotorPWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/MotorPWM.c **** 
 370:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_UseControl)
 371:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_CONTROL &= ((uint8)(~MotorPWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseControl) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 9


 374:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 375:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /*MotorPWM_CompareMode2SW */
 376:.\Generated_Source\PSoC4/MotorPWM.c **** 
 377:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/MotorPWM.c **** 
 379:.\Generated_Source\PSoC4/MotorPWM.c **** 
 380:.\Generated_Source\PSoC4/MotorPWM.c **** #if (!MotorPWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/MotorPWM.c **** 
 382:.\Generated_Source\PSoC4/MotorPWM.c **** 
 383:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCounter
 385:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 387:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 388:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/MotorPWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/MotorPWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/MotorPWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 393:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/MotorPWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 396:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 397:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 398:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 399:.\Generated_Source\PSoC4/MotorPWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 402:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/MotorPWM.c ****                                        
 405:.\Generated_Source\PSoC4/MotorPWM.c ****     {
  82              		.loc 1 405 0
  83              		.cfi_startproc
  84              	.LVL0:
 406:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_COUNTER_LSB_PTR, counter);
  85              		.loc 1 406 0
  86 0000 014B     		ldr	r3, .L8
 407:.\Generated_Source\PSoC4/MotorPWM.c ****     }
  87              		.loc 1 407 0
  88              		@ sp needed
 406:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_COUNTER_LSB_PTR, counter);
  89              		.loc 1 406 0
  90 0002 1880     		strh	r0, [r3]
  91              		.loc 1 407 0
  92 0004 7047     		bx	lr
  93              	.L9:
  94 0006 C046     		.align	2
  95              	.L8:
  96 0008 00100F40 		.word	1074728960
  97              		.cfi_endproc
  98              	.LFE6:
  99              		.size	MotorPWM_WriteCounter, .-MotorPWM_WriteCounter
 100              		.section	.text.MotorPWM_ReadCounter,"ax",%progbits
 101              		.align	1
 102              		.global	MotorPWM_ReadCounter
 103              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 10


 104              		.thumb_func
 105              		.type	MotorPWM_ReadCounter, %function
 106              	MotorPWM_ReadCounter:
 107              	.LFB7:
 408:.\Generated_Source\PSoC4/MotorPWM.c **** 
 409:.\Generated_Source\PSoC4/MotorPWM.c **** 
 410:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCounter
 412:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 414:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 415:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/MotorPWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 418:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 420:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 421:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 422:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 424:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 108              		.loc 1 426 0
 109              		.cfi_startproc
 427:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/MotorPWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/MotorPWM.c ****           (void)CY_GET_REG8(MotorPWM_COUNTERCAP_LSB_PTR_8BIT);
 110              		.loc 1 430 0
 111 0000 024B     		ldr	r3, .L11
 431:.\Generated_Source\PSoC4/MotorPWM.c **** 
 432:.\Generated_Source\PSoC4/MotorPWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_CAPTURE_LSB_PTR));
 434:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 112              		.loc 1 434 0
 113              		@ sp needed
 430:.\Generated_Source\PSoC4/MotorPWM.c **** 
 114              		.loc 1 430 0
 115 0002 1B78     		ldrb	r3, [r3]
 433:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 116              		.loc 1 433 0
 117 0004 024B     		ldr	r3, .L11+4
 118 0006 1888     		ldrh	r0, [r3]
 119 0008 80B2     		uxth	r0, r0
 120              		.loc 1 434 0
 121 000a 7047     		bx	lr
 122              	.L12:
 123              		.align	2
 124              	.L11:
 125 000c 10000F40 		.word	1074724880
 126 0010 A0100F40 		.word	1074729120
 127              		.cfi_endproc
 128              	.LFE7:
 129              		.size	MotorPWM_ReadCounter, .-MotorPWM_ReadCounter
 130              		.section	.text.MotorPWM_ClearFIFO,"ax",%progbits
 131              		.align	1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 11


 132              		.global	MotorPWM_ClearFIFO
 133              		.code	16
 134              		.thumb_func
 135              		.type	MotorPWM_ClearFIFO, %function
 136              	MotorPWM_ClearFIFO:
 137              	.LFB8:
 435:.\Generated_Source\PSoC4/MotorPWM.c **** 
 436:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UseStatus)
 437:.\Generated_Source\PSoC4/MotorPWM.c **** 
 438:.\Generated_Source\PSoC4/MotorPWM.c **** 
 439:.\Generated_Source\PSoC4/MotorPWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/MotorPWM.c ****         * Function Name: MotorPWM_ClearFIFO
 441:.\Generated_Source\PSoC4/MotorPWM.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 443:.\Generated_Source\PSoC4/MotorPWM.c ****         * Summary:
 444:.\Generated_Source\PSoC4/MotorPWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 446:.\Generated_Source\PSoC4/MotorPWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 448:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 449:.\Generated_Source\PSoC4/MotorPWM.c ****         * Return:
 450:.\Generated_Source\PSoC4/MotorPWM.c ****         *  None
 451:.\Generated_Source\PSoC4/MotorPWM.c ****         *
 452:.\Generated_Source\PSoC4/MotorPWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/MotorPWM.c ****         void MotorPWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/MotorPWM.c ****         {
 138              		.loc 1 454 0
 139              		.cfi_startproc
 140              	.L14:
 141              	.LBB14:
 142              	.LBB15:
 455:.\Generated_Source\PSoC4/MotorPWM.c ****             while(0u != (MotorPWM_ReadStatusRegister() & MotorPWM_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/MotorPWM.c ****             {
 457:.\Generated_Source\PSoC4/MotorPWM.c ****                 (void)MotorPWM_ReadCapture();
 458:.\Generated_Source\PSoC4/MotorPWM.c ****             }
 459:.\Generated_Source\PSoC4/MotorPWM.c ****         }
 460:.\Generated_Source\PSoC4/MotorPWM.c **** 
 461:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* MotorPWM_UseStatus */
 462:.\Generated_Source\PSoC4/MotorPWM.c **** 
 463:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* !MotorPWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/MotorPWM.c **** 
 465:.\Generated_Source\PSoC4/MotorPWM.c **** 
 466:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_WritePeriod
 468:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/MotorPWM.c **** *
 470:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 471:.\Generated_Source\PSoC4/MotorPWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/MotorPWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/MotorPWM.c **** *
 474:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 475:.\Generated_Source\PSoC4/MotorPWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/MotorPWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/MotorPWM.c **** *
 478:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 479:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 480:.\Generated_Source\PSoC4/MotorPWM.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 12


 481:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/MotorPWM.c **** void MotorPWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/MotorPWM.c **** {
 484:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(MotorPWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/MotorPWM.c ****     #else
 487:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG16(MotorPWM_PERIOD_LSB_PTR, period);
 488:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/MotorPWM.c **** }
 490:.\Generated_Source\PSoC4/MotorPWM.c **** 
 491:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/MotorPWM.c **** 
 493:.\Generated_Source\PSoC4/MotorPWM.c **** 
 494:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCompare
 496:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 498:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 499:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/MotorPWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 505:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 508:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 509:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 510:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 511:.\Generated_Source\PSoC4/MotorPWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 515:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/MotorPWM.c ****                                        
 518:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 519:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 522:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/MotorPWM.c **** 
 525:.\Generated_Source\PSoC4/MotorPWM.c ****         #if (MotorPWM_PWMMode == MotorPWM__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/MotorPWM.c ****                 CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 529:.\Generated_Source\PSoC4/MotorPWM.c ****                 CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_PWMMode == MotorPWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 533:.\Generated_Source\PSoC4/MotorPWM.c **** 
 534:.\Generated_Source\PSoC4/MotorPWM.c **** 
 535:.\Generated_Source\PSoC4/MotorPWM.c **** #else
 536:.\Generated_Source\PSoC4/MotorPWM.c **** 
 537:.\Generated_Source\PSoC4/MotorPWM.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 13


 538:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCompare1
 540:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 542:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 543:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/MotorPWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/MotorPWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/MotorPWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 548:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 551:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 552:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 553:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 554:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/MotorPWM.c ****                                         
 557:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 558:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 561:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 564:.\Generated_Source\PSoC4/MotorPWM.c **** 
 565:.\Generated_Source\PSoC4/MotorPWM.c **** 
 566:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteCompare2
 568:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 570:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 571:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/MotorPWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/MotorPWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/MotorPWM.c ****     *  mode.
 576:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 577:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/MotorPWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 580:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 581:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 582:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 583:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/MotorPWM.c ****                                         
 586:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 587:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 590:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG16(MotorPWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 593:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/MotorPWM.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 14


 595:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_DeadBandUsed)
 596:.\Generated_Source\PSoC4/MotorPWM.c **** 
 597:.\Generated_Source\PSoC4/MotorPWM.c **** 
 598:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteDeadTime
 600:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 602:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 603:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 605:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/MotorPWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 608:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 609:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 610:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 611:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 614:.\Generated_Source\PSoC4/MotorPWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(!MotorPWM_DeadBand2_4)
 616:.\Generated_Source\PSoC4/MotorPWM.c ****             CY_SET_REG8(MotorPWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 618:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_DEADBAND_COUNT &= ((uint8)(~MotorPWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/MotorPWM.c **** 
 622:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << MotorPWM_DEADBAND_COUNT_SHIF
 625:.\Generated_Source\PSoC4/MotorPWM.c ****                                                     MotorPWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 627:.\Generated_Source\PSoC4/MotorPWM.c ****                 MotorPWM_DEADBAND_COUNT |= deadtime & MotorPWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/MotorPWM.c **** 
 630:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (!MotorPWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 632:.\Generated_Source\PSoC4/MotorPWM.c **** 
 633:.\Generated_Source\PSoC4/MotorPWM.c **** 
 634:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadDeadTime
 636:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 638:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 639:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 641:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 643:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 644:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 645:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 647:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/MotorPWM.c ****     uint8 MotorPWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 650:.\Generated_Source\PSoC4/MotorPWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(!MotorPWM_DeadBand2_4)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 15


 652:.\Generated_Source\PSoC4/MotorPWM.c ****             return (CY_GET_REG8(MotorPWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 654:.\Generated_Source\PSoC4/MotorPWM.c **** 
 655:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/MotorPWM.c ****             #if(MotorPWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/MotorPWM.c ****                 return ((uint8)(((uint8)(MotorPWM_DEADBAND_COUNT & MotorPWM_DEADBAND_COUNT_MASK)) >
 658:.\Generated_Source\PSoC4/MotorPWM.c ****                                                                            MotorPWM_DEADBAND_COUNT_
 659:.\Generated_Source\PSoC4/MotorPWM.c ****             #else
 660:.\Generated_Source\PSoC4/MotorPWM.c ****                 return (MotorPWM_DEADBAND_COUNT & MotorPWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/MotorPWM.c ****             #endif /* (MotorPWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (!MotorPWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 664:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/MotorPWM.c **** 
 666:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/MotorPWM.c **** 
 668:.\Generated_Source\PSoC4/MotorPWM.c **** 
 669:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_SetInterruptMode
 671:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 673:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 674:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/MotorPWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 677:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 680:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 681:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 682:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 683:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 686:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG8(MotorPWM_STATUS_MASK_PTR, interruptMode);
 687:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 688:.\Generated_Source\PSoC4/MotorPWM.c **** 
 689:.\Generated_Source\PSoC4/MotorPWM.c **** 
 690:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadStatusRegister
 692:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 694:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 695:.\Generated_Source\PSoC4/MotorPWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 697:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 699:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 700:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 701:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [0]   : Compare output 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 16


 709:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 710:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/MotorPWM.c ****     uint8 MotorPWM_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 713:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG8(MotorPWM_STATUS_PTR));
 143              		.loc 1 713 0
 144 0000 034B     		ldr	r3, .L18
 145 0002 1B78     		ldrb	r3, [r3]
 146              	.LBE15:
 147              	.LBE14:
 455:.\Generated_Source\PSoC4/MotorPWM.c ****             while(0u != (MotorPWM_ReadStatusRegister() & MotorPWM_STATUS_FIFONEMPTY))
 148              		.loc 1 455 0
 149 0004 DB06     		lsl	r3, r3, #27
 150 0006 02D5     		bpl	.L17
 151              	.LBB16:
 152              	.LBB17:
 714:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 715:.\Generated_Source\PSoC4/MotorPWM.c **** 
 716:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (MotorPWM_UseStatus || MotorPWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/MotorPWM.c **** 
 718:.\Generated_Source\PSoC4/MotorPWM.c **** 
 719:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseControl)
 720:.\Generated_Source\PSoC4/MotorPWM.c **** 
 721:.\Generated_Source\PSoC4/MotorPWM.c **** 
 722:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadControlRegister
 724:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 726:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 727:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/MotorPWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 730:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 732:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 733:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 734:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 736:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/MotorPWM.c ****     uint8 MotorPWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 739:.\Generated_Source\PSoC4/MotorPWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/MotorPWM.c **** 
 741:.\Generated_Source\PSoC4/MotorPWM.c ****         result = CY_GET_REG8(MotorPWM_CONTROL_PTR);
 742:.\Generated_Source\PSoC4/MotorPWM.c ****         return (result);
 743:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 744:.\Generated_Source\PSoC4/MotorPWM.c **** 
 745:.\Generated_Source\PSoC4/MotorPWM.c **** 
 746:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_WriteControlRegister
 748:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 750:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 751:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/MotorPWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 754:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 17


 755:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/MotorPWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 761:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 762:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 763:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 764:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/MotorPWM.c ****     void MotorPWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 767:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG8(MotorPWM_CONTROL_PTR, control);
 768:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 769:.\Generated_Source\PSoC4/MotorPWM.c **** 
 770:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (MotorPWM_UseControl) */
 771:.\Generated_Source\PSoC4/MotorPWM.c **** 
 772:.\Generated_Source\PSoC4/MotorPWM.c **** 
 773:.\Generated_Source\PSoC4/MotorPWM.c **** #if (!MotorPWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/MotorPWM.c **** 
 775:.\Generated_Source\PSoC4/MotorPWM.c **** 
 776:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCapture
 778:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 780:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 781:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 783:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 785:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 786:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 787:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 789:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 792:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_CAPTURE_LSB_PTR));
 153              		.loc 1 792 0
 154 0008 024B     		ldr	r3, .L18+4
 155 000a 1B88     		ldrh	r3, [r3]
 156 000c F8E7     		b	.L14
 157              	.L17:
 158              	.LBE17:
 159              	.LBE16:
 459:.\Generated_Source\PSoC4/MotorPWM.c **** 
 160              		.loc 1 459 0
 161              		@ sp needed
 162 000e 7047     		bx	lr
 163              	.L19:
 164              		.align	2
 165              	.L18:
 166 0010 61000F40 		.word	1074724961
 167 0014 A0100F40 		.word	1074729120
 168              		.cfi_endproc
 169              	.LFE8:
 170              		.size	MotorPWM_ClearFIFO, .-MotorPWM_ClearFIFO
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 18


 171              		.section	.text.MotorPWM_Init,"ax",%progbits
 172              		.align	1
 173              		.global	MotorPWM_Init
 174              		.code	16
 175              		.thumb_func
 176              		.type	MotorPWM_Init, %function
 177              	MotorPWM_Init:
 178              	.LFB3:
  85:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction || MotorPWM_UseControl)
 179              		.loc 1 85 0
 180              		.cfi_startproc
 117:.\Generated_Source\PSoC4/MotorPWM.c ****                 ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK));
 181              		.loc 1 117 0
 182 0000 3F21     		mov	r1, #63
  85:.\Generated_Source\PSoC4/MotorPWM.c ****     #if (MotorPWM_UsingFixedFunction || MotorPWM_UseControl)
 183              		.loc 1 85 0
 184 0002 10B5     		push	{r4, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 4, -8
 187              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/MotorPWM.c ****                 ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK));
 188              		.loc 1 117 0
 189 0004 124A     		ldr	r2, .L21
 130:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_Resolution == 8) */
 190              		.loc 1 130 0
 191 0006 134C     		ldr	r4, .L21+4
 117:.\Generated_Source\PSoC4/MotorPWM.c ****                 ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK));
 192              		.loc 1 117 0
 193 0008 1378     		ldrb	r3, [r2]
 194              	.LVL1:
 179:.\Generated_Source\PSoC4/MotorPWM.c **** 
 195              		.loc 1 179 0
 196              		@ sp needed
 117:.\Generated_Source\PSoC4/MotorPWM.c ****                 ((uint8)(~MotorPWM_CTRL_CMPMODE1_MASK));
 197              		.loc 1 117 0
 198 000a 8B43     		bic	r3, r1
 199              	.LVL2:
 119:.\Generated_Source\PSoC4/MotorPWM.c ****                                    MotorPWM_DEFAULT_COMPARE1_MODE;
 200              		.loc 1 119 0
 201 000c 3639     		sub	r1, r1, #54
 202 000e 0B43     		orr	r3, r1
 203 0010 1370     		strb	r3, [r2]
 129:.\Generated_Source\PSoC4/MotorPWM.c ****             MotorPWM_AUX_CONTROLDP1 |= (MotorPWM_AUX_CTRL_FIFO0_CLR);
 204              		.loc 1 129 0
 205 0012 114B     		ldr	r3, .L21+8
 206 0014 0839     		sub	r1, r1, #8
 207 0016 1A78     		ldrb	r2, [r3]
 208 0018 0A43     		orr	r2, r1
 209 001a 1A70     		strb	r2, [r3]
 130:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_Resolution == 8) */
 210              		.loc 1 130 0
 211 001c 2378     		ldrb	r3, [r4]
 212              	.LBB18:
 213              	.LBB19:
 406:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 214              		.loc 1 406 0
 215 001e 0F4A     		ldr	r2, .L21+12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 19


 216              	.LBE19:
 217              	.LBE18:
 130:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_Resolution == 8) */
 218              		.loc 1 130 0
 219 0020 0B43     		orr	r3, r1
 220 0022 2370     		strb	r3, [r4]
 221              	.LVL3:
 222              	.LBB21:
 223              	.LBB20:
 406:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 224              		.loc 1 406 0
 225 0024 6423     		mov	r3, #100
 226 0026 1380     		strh	r3, [r2]
 227              	.LVL4:
 228              	.LBE20:
 229              	.LBE21:
 230              	.LBB22:
 231              	.LBB23:
 487:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 232              		.loc 1 487 0
 233 0028 0D4A     		ldr	r2, .L21+16
 234 002a 1380     		strh	r3, [r2]
 235              	.LVL5:
 236              	.LBE23:
 237              	.LBE22:
 238              	.LBB24:
 239              	.LBB25:
 522:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 240              		.loc 1 522 0
 241 002c 1422     		mov	r2, #20
 242 002e 0D4B     		ldr	r3, .L21+20
 243 0030 1A80     		strh	r2, [r3]
 244              	.LVL6:
 245              	.LBE25:
 246              	.LBE24:
 247              	.LBB26:
 248              	.LBB27:
 686:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 249              		.loc 1 686 0
 250 0032 0022     		mov	r2, #0
 251 0034 0C4B     		ldr	r3, .L21+24
 252 0036 1A70     		strb	r2, [r3]
 253              	.LBE27:
 254              	.LBE26:
 167:.\Generated_Source\PSoC4/MotorPWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 255              		.loc 1 167 0
 256 0038 FFF7FEFF 		bl	CyEnterCriticalSection
 257              	.LVL7:
 169:.\Generated_Source\PSoC4/MotorPWM.c **** 
 258              		.loc 1 169 0
 259 003c 1022     		mov	r2, #16
 260 003e 2378     		ldrb	r3, [r4]
 261 0040 1343     		orr	r3, r2
 262 0042 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/MotorPWM.c **** 
 263              		.loc 1 172 0
 264 0044 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 20


 265              	.LVL8:
 176:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UseStatus) */
 266              		.loc 1 176 0
 267 0048 FFF7FEFF 		bl	MotorPWM_ClearFIFO
 268              	.LVL9:
 179:.\Generated_Source\PSoC4/MotorPWM.c **** 
 269              		.loc 1 179 0
 270 004c 10BD     		pop	{r4, pc}
 271              	.L22:
 272 004e C046     		.align	2
 273              	.L21:
 274 0050 71000F40 		.word	1074724977
 275 0054 91000F40 		.word	1074725009
 276 0058 90000F40 		.word	1074725008
 277 005c 00100F40 		.word	1074728960
 278 0060 80100F40 		.word	1074729088
 279 0064 40100F40 		.word	1074729024
 280 0068 81000F40 		.word	1074724993
 281              		.cfi_endproc
 282              	.LFE3:
 283              		.size	MotorPWM_Init, .-MotorPWM_Init
 284              		.section	.text.MotorPWM_Start,"ax",%progbits
 285              		.align	1
 286              		.global	MotorPWM_Start
 287              		.code	16
 288              		.thumb_func
 289              		.type	MotorPWM_Start, %function
 290              	MotorPWM_Start:
 291              	.LFB2:
  56:.\Generated_Source\PSoC4/MotorPWM.c ****     /* If not Initialized then initialize all required hardware and software */
 292              		.loc 1 56 0
 293              		.cfi_startproc
 294 0000 10B5     		push	{r4, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 4, -8
 297              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 298              		.loc 1 58 0
 299 0002 054C     		ldr	r4, .L25
 300 0004 2378     		ldrb	r3, [r4]
 301 0006 002B     		cmp	r3, #0
 302 0008 03D1     		bne	.L24
  60:.\Generated_Source\PSoC4/MotorPWM.c ****         MotorPWM_initVar = 1u;
 303              		.loc 1 60 0
 304 000a FFF7FEFF 		bl	MotorPWM_Init
 305              	.LVL10:
  61:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 306              		.loc 1 61 0
 307 000e 0123     		mov	r3, #1
 308 0010 2370     		strb	r3, [r4]
 309              	.L24:
  63:.\Generated_Source\PSoC4/MotorPWM.c **** 
 310              		.loc 1 63 0
 311 0012 FFF7FEFF 		bl	MotorPWM_Enable
 312              	.LVL11:
  65:.\Generated_Source\PSoC4/MotorPWM.c **** 
 313              		.loc 1 65 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 21


 314              		@ sp needed
 315 0016 10BD     		pop	{r4, pc}
 316              	.L26:
 317              		.align	2
 318              	.L25:
 319 0018 00000000 		.word	.LANCHOR0
 320              		.cfi_endproc
 321              	.LFE2:
 322              		.size	MotorPWM_Start, .-MotorPWM_Start
 323              		.section	.text.MotorPWM_WritePeriod,"ax",%progbits
 324              		.align	1
 325              		.global	MotorPWM_WritePeriod
 326              		.code	16
 327              		.thumb_func
 328              		.type	MotorPWM_WritePeriod, %function
 329              	MotorPWM_WritePeriod:
 330              	.LFB9:
 483:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(MotorPWM_UsingFixedFunction)
 331              		.loc 1 483 0
 332              		.cfi_startproc
 333              	.LVL12:
 487:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 334              		.loc 1 487 0
 335 0000 014B     		ldr	r3, .L28
 489:.\Generated_Source\PSoC4/MotorPWM.c **** 
 336              		.loc 1 489 0
 337              		@ sp needed
 487:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 338              		.loc 1 487 0
 339 0002 1880     		strh	r0, [r3]
 489:.\Generated_Source\PSoC4/MotorPWM.c **** 
 340              		.loc 1 489 0
 341 0004 7047     		bx	lr
 342              	.L29:
 343 0006 C046     		.align	2
 344              	.L28:
 345 0008 80100F40 		.word	1074729088
 346              		.cfi_endproc
 347              	.LFE9:
 348              		.size	MotorPWM_WritePeriod, .-MotorPWM_WritePeriod
 349              		.section	.text.MotorPWM_WriteCompare,"ax",%progbits
 350              		.align	1
 351              		.global	MotorPWM_WriteCompare
 352              		.code	16
 353              		.thumb_func
 354              		.type	MotorPWM_WriteCompare, %function
 355              	MotorPWM_WriteCompare:
 356              	.LFB10:
 518:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 357              		.loc 1 518 0
 358              		.cfi_startproc
 359              	.LVL13:
 522:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 360              		.loc 1 522 0
 361 0000 014B     		ldr	r3, .L31
 532:.\Generated_Source\PSoC4/MotorPWM.c **** 
 362              		.loc 1 532 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 22


 363              		@ sp needed
 522:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 364              		.loc 1 522 0
 365 0002 1880     		strh	r0, [r3]
 532:.\Generated_Source\PSoC4/MotorPWM.c **** 
 366              		.loc 1 532 0
 367 0004 7047     		bx	lr
 368              	.L32:
 369 0006 C046     		.align	2
 370              	.L31:
 371 0008 40100F40 		.word	1074729024
 372              		.cfi_endproc
 373              	.LFE10:
 374              		.size	MotorPWM_WriteCompare, .-MotorPWM_WriteCompare
 375              		.section	.text.MotorPWM_SetInterruptMode,"ax",%progbits
 376              		.align	1
 377              		.global	MotorPWM_SetInterruptMode
 378              		.code	16
 379              		.thumb_func
 380              		.type	MotorPWM_SetInterruptMode, %function
 381              	MotorPWM_SetInterruptMode:
 382              	.LFB11:
 685:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG8(MotorPWM_STATUS_MASK_PTR, interruptMode);
 383              		.loc 1 685 0
 384              		.cfi_startproc
 385              	.LVL14:
 686:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 386              		.loc 1 686 0
 387 0000 014B     		ldr	r3, .L34
 687:.\Generated_Source\PSoC4/MotorPWM.c **** 
 388              		.loc 1 687 0
 389              		@ sp needed
 686:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 390              		.loc 1 686 0
 391 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/MotorPWM.c **** 
 392              		.loc 1 687 0
 393 0004 7047     		bx	lr
 394              	.L35:
 395 0006 C046     		.align	2
 396              	.L34:
 397 0008 81000F40 		.word	1074724993
 398              		.cfi_endproc
 399              	.LFE11:
 400              		.size	MotorPWM_SetInterruptMode, .-MotorPWM_SetInterruptMode
 401              		.section	.text.MotorPWM_ReadStatusRegister,"ax",%progbits
 402              		.align	1
 403              		.global	MotorPWM_ReadStatusRegister
 404              		.code	16
 405              		.thumb_func
 406              		.type	MotorPWM_ReadStatusRegister, %function
 407              	MotorPWM_ReadStatusRegister:
 408              	.LFB12:
 712:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG8(MotorPWM_STATUS_PTR));
 409              		.loc 1 712 0
 410              		.cfi_startproc
 713:.\Generated_Source\PSoC4/MotorPWM.c ****     }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 23


 411              		.loc 1 713 0
 412 0000 014B     		ldr	r3, .L37
 714:.\Generated_Source\PSoC4/MotorPWM.c **** 
 413              		.loc 1 714 0
 414              		@ sp needed
 713:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 415              		.loc 1 713 0
 416 0002 1878     		ldrb	r0, [r3]
 417 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/MotorPWM.c **** 
 418              		.loc 1 714 0
 419 0006 7047     		bx	lr
 420              	.L38:
 421              		.align	2
 422              	.L37:
 423 0008 61000F40 		.word	1074724961
 424              		.cfi_endproc
 425              	.LFE12:
 426              		.size	MotorPWM_ReadStatusRegister, .-MotorPWM_ReadStatusRegister
 427              		.section	.text.MotorPWM_ReadControlRegister,"ax",%progbits
 428              		.align	1
 429              		.global	MotorPWM_ReadControlRegister
 430              		.code	16
 431              		.thumb_func
 432              		.type	MotorPWM_ReadControlRegister, %function
 433              	MotorPWM_ReadControlRegister:
 434              	.LFB13:
 738:.\Generated_Source\PSoC4/MotorPWM.c ****         uint8 result;
 435              		.loc 1 738 0
 436              		.cfi_startproc
 741:.\Generated_Source\PSoC4/MotorPWM.c ****         return (result);
 437              		.loc 1 741 0
 438 0000 014B     		ldr	r3, .L40
 743:.\Generated_Source\PSoC4/MotorPWM.c **** 
 439              		.loc 1 743 0
 440              		@ sp needed
 741:.\Generated_Source\PSoC4/MotorPWM.c ****         return (result);
 441              		.loc 1 741 0
 442 0002 1878     		ldrb	r0, [r3]
 443 0004 C0B2     		uxtb	r0, r0
 444              	.LVL15:
 743:.\Generated_Source\PSoC4/MotorPWM.c **** 
 445              		.loc 1 743 0
 446 0006 7047     		bx	lr
 447              	.L41:
 448              		.align	2
 449              	.L40:
 450 0008 71000F40 		.word	1074724977
 451              		.cfi_endproc
 452              	.LFE13:
 453              		.size	MotorPWM_ReadControlRegister, .-MotorPWM_ReadControlRegister
 454              		.section	.text.MotorPWM_WriteControlRegister,"ax",%progbits
 455              		.align	1
 456              		.global	MotorPWM_WriteControlRegister
 457              		.code	16
 458              		.thumb_func
 459              		.type	MotorPWM_WriteControlRegister, %function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 24


 460              	MotorPWM_WriteControlRegister:
 461              	.LFB14:
 766:.\Generated_Source\PSoC4/MotorPWM.c ****         CY_SET_REG8(MotorPWM_CONTROL_PTR, control);
 462              		.loc 1 766 0
 463              		.cfi_startproc
 464              	.LVL16:
 767:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 465              		.loc 1 767 0
 466 0000 014B     		ldr	r3, .L43
 768:.\Generated_Source\PSoC4/MotorPWM.c **** 
 467              		.loc 1 768 0
 468              		@ sp needed
 767:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 469              		.loc 1 767 0
 470 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/MotorPWM.c **** 
 471              		.loc 1 768 0
 472 0004 7047     		bx	lr
 473              	.L44:
 474 0006 C046     		.align	2
 475              	.L43:
 476 0008 71000F40 		.word	1074724977
 477              		.cfi_endproc
 478              	.LFE14:
 479              		.size	MotorPWM_WriteControlRegister, .-MotorPWM_WriteControlRegister
 480              		.section	.text.MotorPWM_ReadCapture,"ax",%progbits
 481              		.align	1
 482              		.global	MotorPWM_ReadCapture
 483              		.code	16
 484              		.thumb_func
 485              		.type	MotorPWM_ReadCapture, %function
 486              	MotorPWM_ReadCapture:
 487              	.LFB15:
 791:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_CAPTURE_LSB_PTR));
 488              		.loc 1 791 0
 489              		.cfi_startproc
 490              		.loc 1 792 0
 491 0000 014B     		ldr	r3, .L46
 793:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 492              		.loc 1 793 0
 493              		@ sp needed
 792:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 494              		.loc 1 792 0
 495 0002 1888     		ldrh	r0, [r3]
 496 0004 80B2     		uxth	r0, r0
 497              		.loc 1 793 0
 498 0006 7047     		bx	lr
 499              	.L47:
 500              		.align	2
 501              	.L46:
 502 0008 A0100F40 		.word	1074729120
 503              		.cfi_endproc
 504              	.LFE15:
 505              		.size	MotorPWM_ReadCapture, .-MotorPWM_ReadCapture
 506              		.section	.text.MotorPWM_ReadCompare,"ax",%progbits
 507              		.align	1
 508              		.global	MotorPWM_ReadCompare
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 25


 509              		.code	16
 510              		.thumb_func
 511              		.type	MotorPWM_ReadCompare, %function
 512              	MotorPWM_ReadCompare:
 513              	.LFB16:
 794:.\Generated_Source\PSoC4/MotorPWM.c **** 
 795:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (!MotorPWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/MotorPWM.c **** 
 797:.\Generated_Source\PSoC4/MotorPWM.c **** 
 798:.\Generated_Source\PSoC4/MotorPWM.c **** #if (MotorPWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/MotorPWM.c **** 
 800:.\Generated_Source\PSoC4/MotorPWM.c **** 
 801:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCompare
 803:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 805:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 806:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/MotorPWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 809:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 811:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 812:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 813:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 815:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 514              		.loc 1 817 0
 515              		.cfi_startproc
 818:.\Generated_Source\PSoC4/MotorPWM.c ****         #if(MotorPWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/MotorPWM.c ****             return ((uint16)CY_GET_REG16(MotorPWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/MotorPWM.c ****         #else
 821:.\Generated_Source\PSoC4/MotorPWM.c ****             return (CY_GET_REG16(MotorPWM_COMPARE1_LSB_PTR));
 516              		.loc 1 821 0
 517 0000 014B     		ldr	r3, .L49
 822:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 518              		.loc 1 823 0
 519              		@ sp needed
 821:.\Generated_Source\PSoC4/MotorPWM.c ****         #endif /* (MotorPWM_UsingFixedFunction) */
 520              		.loc 1 821 0
 521 0002 1888     		ldrh	r0, [r3]
 522 0004 80B2     		uxth	r0, r0
 523              		.loc 1 823 0
 524 0006 7047     		bx	lr
 525              	.L50:
 526              		.align	2
 527              	.L49:
 528 0008 40100F40 		.word	1074729024
 529              		.cfi_endproc
 530              	.LFE16:
 531              		.size	MotorPWM_ReadCompare, .-MotorPWM_ReadCompare
 532              		.section	.text.MotorPWM_ReadPeriod,"ax",%progbits
 533              		.align	1
 534              		.global	MotorPWM_ReadPeriod
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 26


 535              		.code	16
 536              		.thumb_func
 537              		.type	MotorPWM_ReadPeriod, %function
 538              	MotorPWM_ReadPeriod:
 539              	.LFB17:
 824:.\Generated_Source\PSoC4/MotorPWM.c **** 
 825:.\Generated_Source\PSoC4/MotorPWM.c **** #else
 826:.\Generated_Source\PSoC4/MotorPWM.c **** 
 827:.\Generated_Source\PSoC4/MotorPWM.c **** 
 828:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCompare1
 830:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 832:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 833:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 835:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 837:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 838:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 839:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 841:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 844:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 846:.\Generated_Source\PSoC4/MotorPWM.c **** 
 847:.\Generated_Source\PSoC4/MotorPWM.c **** 
 848:.\Generated_Source\PSoC4/MotorPWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/MotorPWM.c ****     * Function Name: MotorPWM_ReadCompare2
 850:.\Generated_Source\PSoC4/MotorPWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 852:.\Generated_Source\PSoC4/MotorPWM.c ****     * Summary:
 853:.\Generated_Source\PSoC4/MotorPWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 855:.\Generated_Source\PSoC4/MotorPWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/MotorPWM.c ****     *  None
 857:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 858:.\Generated_Source\PSoC4/MotorPWM.c ****     * Return:
 859:.\Generated_Source\PSoC4/MotorPWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/MotorPWM.c ****     *
 861:.\Generated_Source\PSoC4/MotorPWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/MotorPWM.c ****     uint16 MotorPWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/MotorPWM.c ****     {
 864:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/MotorPWM.c ****     }
 866:.\Generated_Source\PSoC4/MotorPWM.c **** 
 867:.\Generated_Source\PSoC4/MotorPWM.c **** #endif /* (MotorPWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/MotorPWM.c **** 
 869:.\Generated_Source\PSoC4/MotorPWM.c **** 
 870:.\Generated_Source\PSoC4/MotorPWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/MotorPWM.c **** * Function Name: MotorPWM_ReadPeriod
 872:.\Generated_Source\PSoC4/MotorPWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/MotorPWM.c **** *
 874:.\Generated_Source\PSoC4/MotorPWM.c **** * Summary:
 875:.\Generated_Source\PSoC4/MotorPWM.c **** *  Reads the period value used by the PWM hardware.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 27


 876:.\Generated_Source\PSoC4/MotorPWM.c **** *
 877:.\Generated_Source\PSoC4/MotorPWM.c **** * Parameters:
 878:.\Generated_Source\PSoC4/MotorPWM.c **** *  None
 879:.\Generated_Source\PSoC4/MotorPWM.c **** *
 880:.\Generated_Source\PSoC4/MotorPWM.c **** * Return:
 881:.\Generated_Source\PSoC4/MotorPWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/MotorPWM.c **** *
 883:.\Generated_Source\PSoC4/MotorPWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/MotorPWM.c **** uint16 MotorPWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/MotorPWM.c **** {
 540              		.loc 1 885 0
 541              		.cfi_startproc
 886:.\Generated_Source\PSoC4/MotorPWM.c ****     #if(MotorPWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/MotorPWM.c ****         return ((uint16)CY_GET_REG16(MotorPWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/MotorPWM.c ****     #else
 889:.\Generated_Source\PSoC4/MotorPWM.c ****         return (CY_GET_REG16(MotorPWM_PERIOD_LSB_PTR));
 542              		.loc 1 889 0
 543 0000 014B     		ldr	r3, .L52
 890:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/MotorPWM.c **** }
 544              		.loc 1 891 0
 545              		@ sp needed
 889:.\Generated_Source\PSoC4/MotorPWM.c ****     #endif /* (MotorPWM_UsingFixedFunction) */
 546              		.loc 1 889 0
 547 0002 1888     		ldrh	r0, [r3]
 548 0004 80B2     		uxth	r0, r0
 549              		.loc 1 891 0
 550 0006 7047     		bx	lr
 551              	.L53:
 552              		.align	2
 553              	.L52:
 554 0008 80100F40 		.word	1074729088
 555              		.cfi_endproc
 556              	.LFE17:
 557              		.size	MotorPWM_ReadPeriod, .-MotorPWM_ReadPeriod
 558              		.global	MotorPWM_initVar
 559              		.bss
 560              		.set	.LANCHOR0,. + 0
 561              		.type	MotorPWM_initVar, %object
 562              		.size	MotorPWM_initVar, 1
 563              	MotorPWM_initVar:
 564 0000 00       		.space	1
 565              		.text
 566              	.Letext0:
 567              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 568              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 569              		.section	.debug_info,"",%progbits
 570              	.Ldebug_info0:
 571 0000 BB030000 		.4byte	0x3bb
 572 0004 0400     		.2byte	0x4
 573 0006 00000000 		.4byte	.Ldebug_abbrev0
 574 000a 04       		.byte	0x4
 575 000b 01       		.uleb128 0x1
 576 000c 31000000 		.4byte	.LASF40
 577 0010 01       		.byte	0x1
 578 0011 D9000000 		.4byte	.LASF41
 579 0015 2E010000 		.4byte	.LASF42
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 28


 580 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 581 001d 00000000 		.4byte	0
 582 0021 00000000 		.4byte	.Ldebug_line0
 583 0025 02       		.uleb128 0x2
 584 0026 01       		.byte	0x1
 585 0027 06       		.byte	0x6
 586 0028 AD030000 		.4byte	.LASF0
 587 002c 02       		.uleb128 0x2
 588 002d 01       		.byte	0x1
 589 002e 08       		.byte	0x8
 590 002f F8010000 		.4byte	.LASF1
 591 0033 02       		.uleb128 0x2
 592 0034 02       		.byte	0x2
 593 0035 05       		.byte	0x5
 594 0036 11030000 		.4byte	.LASF2
 595 003a 02       		.uleb128 0x2
 596 003b 02       		.byte	0x2
 597 003c 07       		.byte	0x7
 598 003d FD000000 		.4byte	.LASF3
 599 0041 02       		.uleb128 0x2
 600 0042 04       		.byte	0x4
 601 0043 05       		.byte	0x5
 602 0044 87030000 		.4byte	.LASF4
 603 0048 02       		.uleb128 0x2
 604 0049 04       		.byte	0x4
 605 004a 07       		.byte	0x7
 606 004b 14020000 		.4byte	.LASF5
 607 004f 02       		.uleb128 0x2
 608 0050 08       		.byte	0x8
 609 0051 05       		.byte	0x5
 610 0052 DF020000 		.4byte	.LASF6
 611 0056 02       		.uleb128 0x2
 612 0057 08       		.byte	0x8
 613 0058 07       		.byte	0x7
 614 0059 E1010000 		.4byte	.LASF7
 615 005d 03       		.uleb128 0x3
 616 005e 04       		.byte	0x4
 617 005f 05       		.byte	0x5
 618 0060 696E7400 		.ascii	"int\000"
 619 0064 02       		.uleb128 0x2
 620 0065 04       		.byte	0x4
 621 0066 07       		.byte	0x7
 622 0067 A7020000 		.4byte	.LASF8
 623 006b 04       		.uleb128 0x4
 624 006c 26020000 		.4byte	.LASF9
 625 0070 02       		.byte	0x2
 626 0071 9801     		.2byte	0x198
 627 0073 2C000000 		.4byte	0x2c
 628 0077 04       		.uleb128 0x4
 629 0078 74020000 		.4byte	.LASF10
 630 007c 02       		.byte	0x2
 631 007d 9901     		.2byte	0x199
 632 007f 3A000000 		.4byte	0x3a
 633 0083 02       		.uleb128 0x2
 634 0084 04       		.byte	0x4
 635 0085 04       		.byte	0x4
 636 0086 D3010000 		.4byte	.LASF11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 29


 637 008a 02       		.uleb128 0x2
 638 008b 08       		.byte	0x8
 639 008c 04       		.byte	0x4
 640 008d 48020000 		.4byte	.LASF12
 641 0091 02       		.uleb128 0x2
 642 0092 01       		.byte	0x1
 643 0093 08       		.byte	0x8
 644 0094 90030000 		.4byte	.LASF13
 645 0098 04       		.uleb128 0x4
 646 0099 D1020000 		.4byte	.LASF14
 647 009d 02       		.byte	0x2
 648 009e 4202     		.2byte	0x242
 649 00a0 A4000000 		.4byte	0xa4
 650 00a4 05       		.uleb128 0x5
 651 00a5 6B000000 		.4byte	0x6b
 652 00a9 04       		.uleb128 0x4
 653 00aa 00000000 		.4byte	.LASF15
 654 00ae 02       		.byte	0x2
 655 00af 4302     		.2byte	0x243
 656 00b1 B5000000 		.4byte	0xb5
 657 00b5 05       		.uleb128 0x5
 658 00b6 77000000 		.4byte	0x77
 659 00ba 02       		.uleb128 0x2
 660 00bb 04       		.byte	0x4
 661 00bc 07       		.byte	0x7
 662 00bd D6020000 		.4byte	.LASF16
 663 00c1 06       		.uleb128 0x6
 664 00c2 7B020000 		.4byte	.LASF17
 665 00c6 01       		.byte	0x1
 666 00c7 1603     		.2byte	0x316
 667 00c9 77000000 		.4byte	0x77
 668 00cd 01       		.byte	0x1
 669 00ce 06       		.uleb128 0x6
 670 00cf B7010000 		.4byte	.LASF18
 671 00d3 01       		.byte	0x1
 672 00d4 C702     		.2byte	0x2c7
 673 00d6 6B000000 		.4byte	0x6b
 674 00da 01       		.byte	0x1
 675 00db 07       		.uleb128 0x7
 676 00dc 1B000000 		.4byte	.LASF19
 677 00e0 01       		.byte	0x1
 678 00e1 9301     		.2byte	0x193
 679 00e3 01       		.byte	0x1
 680 00e4 F5000000 		.4byte	0xf5
 681 00e8 08       		.uleb128 0x8
 682 00e9 D9010000 		.4byte	.LASF21
 683 00ed 01       		.byte	0x1
 684 00ee 9301     		.2byte	0x193
 685 00f0 77000000 		.4byte	0x77
 686 00f4 00       		.byte	0
 687 00f5 07       		.uleb128 0x7
 688 00f6 06000000 		.4byte	.LASF20
 689 00fa 01       		.byte	0x1
 690 00fb E201     		.2byte	0x1e2
 691 00fd 01       		.byte	0x1
 692 00fe 0F010000 		.4byte	0x10f
 693 0102 08       		.uleb128 0x8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 30


 694 0103 D2000000 		.4byte	.LASF22
 695 0107 01       		.byte	0x1
 696 0108 E201     		.2byte	0x1e2
 697 010a 77000000 		.4byte	0x77
 698 010e 00       		.byte	0
 699 010f 07       		.uleb128 0x7
 700 0110 FB020000 		.4byte	.LASF23
 701 0114 01       		.byte	0x1
 702 0115 0402     		.2byte	0x204
 703 0117 01       		.byte	0x1
 704 0118 29010000 		.4byte	0x129
 705 011c 08       		.uleb128 0x8
 706 011d B9030000 		.4byte	.LASF24
 707 0121 01       		.byte	0x1
 708 0122 0402     		.2byte	0x204
 709 0124 77000000 		.4byte	0x77
 710 0128 00       		.byte	0
 711 0129 07       		.uleb128 0x7
 712 012a 30030000 		.4byte	.LASF25
 713 012e 01       		.byte	0x1
 714 012f AC02     		.2byte	0x2ac
 715 0131 01       		.byte	0x1
 716 0132 43010000 		.4byte	0x143
 717 0136 08       		.uleb128 0x8
 718 0137 ED020000 		.4byte	.LASF26
 719 013b 01       		.byte	0x1
 720 013c AC02     		.2byte	0x2ac
 721 013e 6B000000 		.4byte	0x6b
 722 0142 00       		.byte	0
 723 0143 09       		.uleb128 0x9
 724 0144 64020000 		.4byte	.LASF27
 725 0148 01       		.byte	0x1
 726 0149 C7       		.byte	0xc7
 727 014a 00000000 		.4byte	.LFB4
 728 014e 10000000 		.4byte	.LFE4-.LFB4
 729 0152 01       		.uleb128 0x1
 730 0153 9C       		.byte	0x9c
 731 0154 09       		.uleb128 0x9
 732 0155 06020000 		.4byte	.LASF28
 733 0159 01       		.byte	0x1
 734 015a E9       		.byte	0xe9
 735 015b 00000000 		.4byte	.LFB5
 736 015f 10000000 		.4byte	.LFE5-.LFB5
 737 0163 01       		.uleb128 0x1
 738 0164 9C       		.byte	0x9c
 739 0165 0A       		.uleb128 0xa
 740 0166 DB000000 		.4byte	0xdb
 741 016a 00000000 		.4byte	.LFB6
 742 016e 0C000000 		.4byte	.LFE6-.LFB6
 743 0172 01       		.uleb128 0x1
 744 0173 9C       		.byte	0x9c
 745 0174 80010000 		.4byte	0x180
 746 0178 0B       		.uleb128 0xb
 747 0179 E8000000 		.4byte	0xe8
 748 017d 01       		.uleb128 0x1
 749 017e 50       		.byte	0x50
 750 017f 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 31


 751 0180 0C       		.uleb128 0xc
 752 0181 1B030000 		.4byte	.LASF36
 753 0185 01       		.byte	0x1
 754 0186 A901     		.2byte	0x1a9
 755 0188 77000000 		.4byte	0x77
 756 018c 00000000 		.4byte	.LFB7
 757 0190 14000000 		.4byte	.LFE7-.LFB7
 758 0194 01       		.uleb128 0x1
 759 0195 9C       		.byte	0x9c
 760 0196 0D       		.uleb128 0xd
 761 0197 BF000000 		.4byte	.LASF29
 762 019b 01       		.byte	0x1
 763 019c C501     		.2byte	0x1c5
 764 019e 00000000 		.4byte	.LFB8
 765 01a2 18000000 		.4byte	.LFE8-.LFB8
 766 01a6 01       		.uleb128 0x1
 767 01a7 9C       		.byte	0x9c
 768 01a8 CD010000 		.4byte	0x1cd
 769 01ac 0E       		.uleb128 0xe
 770 01ad CE000000 		.4byte	0xce
 771 01b1 00000000 		.4byte	.LBB14
 772 01b5 04000000 		.4byte	.LBE14-.LBB14
 773 01b9 01       		.byte	0x1
 774 01ba C701     		.2byte	0x1c7
 775 01bc 0E       		.uleb128 0xe
 776 01bd C1000000 		.4byte	0xc1
 777 01c1 08000000 		.4byte	.LBB16
 778 01c5 06000000 		.4byte	.LBE16-.LBB16
 779 01c9 01       		.byte	0x1
 780 01ca C901     		.2byte	0x1c9
 781 01cc 00       		.byte	0
 782 01cd 0F       		.uleb128 0xf
 783 01ce C6030000 		.4byte	.LASF30
 784 01d2 01       		.byte	0x1
 785 01d3 54       		.byte	0x54
 786 01d4 00000000 		.4byte	.LFB3
 787 01d8 6C000000 		.4byte	.LFE3-.LFB3
 788 01dc 01       		.uleb128 0x1
 789 01dd 9C       		.byte	0x9c
 790 01de 84020000 		.4byte	0x284
 791 01e2 10       		.uleb128 0x10
 792 01e3 C1030000 		.4byte	.LASF31
 793 01e7 01       		.byte	0x1
 794 01e8 57       		.byte	0x57
 795 01e9 6B000000 		.4byte	0x6b
 796 01ed 00000000 		.4byte	.LLST0
 797 01f1 10       		.uleb128 0x10
 798 01f2 95030000 		.4byte	.LASF32
 799 01f6 01       		.byte	0x1
 800 01f7 5D       		.byte	0x5d
 801 01f8 6B000000 		.4byte	0x6b
 802 01fc 18000000 		.4byte	.LLST1
 803 0200 11       		.uleb128 0x11
 804 0201 DB000000 		.4byte	0xdb
 805 0205 1E000000 		.4byte	.LBB18
 806 0209 00000000 		.4byte	.Ldebug_ranges0+0
 807 020d 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 32


 808 020e 85       		.byte	0x85
 809 020f 1A020000 		.4byte	0x21a
 810 0213 12       		.uleb128 0x12
 811 0214 E8000000 		.4byte	0xe8
 812 0218 64       		.byte	0x64
 813 0219 00       		.byte	0
 814 021a 13       		.uleb128 0x13
 815 021b F5000000 		.4byte	0xf5
 816 021f 28000000 		.4byte	.LBB22
 817 0223 04000000 		.4byte	.LBE22-.LBB22
 818 0227 01       		.byte	0x1
 819 0228 88       		.byte	0x88
 820 0229 34020000 		.4byte	0x234
 821 022d 12       		.uleb128 0x12
 822 022e 02010000 		.4byte	0x102
 823 0232 64       		.byte	0x64
 824 0233 00       		.byte	0
 825 0234 13       		.uleb128 0x13
 826 0235 0F010000 		.4byte	0x10f
 827 0239 2C000000 		.4byte	.LBB24
 828 023d 06000000 		.4byte	.LBE24-.LBB24
 829 0241 01       		.byte	0x1
 830 0242 8B       		.byte	0x8b
 831 0243 4E020000 		.4byte	0x24e
 832 0247 12       		.uleb128 0x12
 833 0248 1C010000 		.4byte	0x11c
 834 024c 14       		.byte	0x14
 835 024d 00       		.byte	0
 836 024e 13       		.uleb128 0x13
 837 024f 29010000 		.4byte	0x129
 838 0253 32000000 		.4byte	.LBB26
 839 0257 06000000 		.4byte	.LBE26-.LBB26
 840 025b 01       		.byte	0x1
 841 025c 9A       		.byte	0x9a
 842 025d 68020000 		.4byte	0x268
 843 0261 12       		.uleb128 0x12
 844 0262 36010000 		.4byte	0x136
 845 0266 00       		.byte	0
 846 0267 00       		.byte	0
 847 0268 14       		.uleb128 0x14
 848 0269 3C000000 		.4byte	.LVL7
 849 026d A6030000 		.4byte	0x3a6
 850 0271 14       		.uleb128 0x14
 851 0272 48000000 		.4byte	.LVL8
 852 0276 B1030000 		.4byte	0x3b1
 853 027a 14       		.uleb128 0x14
 854 027b 4C000000 		.4byte	.LVL9
 855 027f 96010000 		.4byte	0x196
 856 0283 00       		.byte	0
 857 0284 0F       		.uleb128 0xf
 858 0285 4A030000 		.4byte	.LASF33
 859 0289 01       		.byte	0x1
 860 028a 37       		.byte	0x37
 861 028b 00000000 		.4byte	.LFB2
 862 028f 1C000000 		.4byte	.LFE2-.LFB2
 863 0293 01       		.uleb128 0x1
 864 0294 9C       		.byte	0x9c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 33


 865 0295 AC020000 		.4byte	0x2ac
 866 0299 14       		.uleb128 0x14
 867 029a 0E000000 		.4byte	.LVL10
 868 029e CD010000 		.4byte	0x1cd
 869 02a2 14       		.uleb128 0x14
 870 02a3 16000000 		.4byte	.LVL11
 871 02a7 43010000 		.4byte	0x143
 872 02ab 00       		.byte	0
 873 02ac 0A       		.uleb128 0xa
 874 02ad F5000000 		.4byte	0xf5
 875 02b1 00000000 		.4byte	.LFB9
 876 02b5 0C000000 		.4byte	.LFE9-.LFB9
 877 02b9 01       		.uleb128 0x1
 878 02ba 9C       		.byte	0x9c
 879 02bb C7020000 		.4byte	0x2c7
 880 02bf 0B       		.uleb128 0xb
 881 02c0 02010000 		.4byte	0x102
 882 02c4 01       		.uleb128 0x1
 883 02c5 50       		.byte	0x50
 884 02c6 00       		.byte	0
 885 02c7 0A       		.uleb128 0xa
 886 02c8 0F010000 		.4byte	0x10f
 887 02cc 00000000 		.4byte	.LFB10
 888 02d0 0C000000 		.4byte	.LFE10-.LFB10
 889 02d4 01       		.uleb128 0x1
 890 02d5 9C       		.byte	0x9c
 891 02d6 E2020000 		.4byte	0x2e2
 892 02da 0B       		.uleb128 0xb
 893 02db 1C010000 		.4byte	0x11c
 894 02df 01       		.uleb128 0x1
 895 02e0 50       		.byte	0x50
 896 02e1 00       		.byte	0
 897 02e2 0A       		.uleb128 0xa
 898 02e3 29010000 		.4byte	0x129
 899 02e7 00000000 		.4byte	.LFB11
 900 02eb 0C000000 		.4byte	.LFE11-.LFB11
 901 02ef 01       		.uleb128 0x1
 902 02f0 9C       		.byte	0x9c
 903 02f1 FD020000 		.4byte	0x2fd
 904 02f5 0B       		.uleb128 0xb
 905 02f6 36010000 		.4byte	0x136
 906 02fa 01       		.uleb128 0x1
 907 02fb 50       		.byte	0x50
 908 02fc 00       		.byte	0
 909 02fd 15       		.uleb128 0x15
 910 02fe CE000000 		.4byte	0xce
 911 0302 00000000 		.4byte	.LFB12
 912 0306 0C000000 		.4byte	.LFE12-.LFB12
 913 030a 01       		.uleb128 0x1
 914 030b 9C       		.byte	0x9c
 915 030c 16       		.uleb128 0x16
 916 030d 6A030000 		.4byte	.LASF43
 917 0311 01       		.byte	0x1
 918 0312 E102     		.2byte	0x2e1
 919 0314 6B000000 		.4byte	0x6b
 920 0318 00000000 		.4byte	.LFB13
 921 031c 0C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 34


 922 0320 01       		.uleb128 0x1
 923 0321 9C       		.byte	0x9c
 924 0322 35030000 		.4byte	0x335
 925 0326 17       		.uleb128 0x17
 926 0327 CA020000 		.4byte	.LASF34
 927 032b 01       		.byte	0x1
 928 032c E302     		.2byte	0x2e3
 929 032e 6B000000 		.4byte	0x6b
 930 0332 01       		.uleb128 0x1
 931 0333 50       		.byte	0x50
 932 0334 00       		.byte	0
 933 0335 0D       		.uleb128 0xd
 934 0336 10010000 		.4byte	.LASF35
 935 033a 01       		.byte	0x1
 936 033b FD02     		.2byte	0x2fd
 937 033d 00000000 		.4byte	.LFB14
 938 0341 0C000000 		.4byte	.LFE14-.LFB14
 939 0345 01       		.uleb128 0x1
 940 0346 9C       		.byte	0x9c
 941 0347 5A030000 		.4byte	0x35a
 942 034b 18       		.uleb128 0x18
 943 034c 2C020000 		.4byte	.LASF44
 944 0350 01       		.byte	0x1
 945 0351 FD02     		.2byte	0x2fd
 946 0353 6B000000 		.4byte	0x6b
 947 0357 01       		.uleb128 0x1
 948 0358 50       		.byte	0x50
 949 0359 00       		.byte	0
 950 035a 15       		.uleb128 0x15
 951 035b C1000000 		.4byte	0xc1
 952 035f 00000000 		.4byte	.LFB15
 953 0363 0C000000 		.4byte	.LFE15-.LFB15
 954 0367 01       		.uleb128 0x1
 955 0368 9C       		.byte	0x9c
 956 0369 0C       		.uleb128 0xc
 957 036a 4F020000 		.4byte	.LASF37
 958 036e 01       		.byte	0x1
 959 036f 3003     		.2byte	0x330
 960 0371 77000000 		.4byte	0x77
 961 0375 00000000 		.4byte	.LFB16
 962 0379 0C000000 		.4byte	.LFE16-.LFB16
 963 037d 01       		.uleb128 0x1
 964 037e 9C       		.byte	0x9c
 965 037f 0C       		.uleb128 0xc
 966 0380 34020000 		.4byte	.LASF38
 967 0384 01       		.byte	0x1
 968 0385 7403     		.2byte	0x374
 969 0387 77000000 		.4byte	0x77
 970 038b 00000000 		.4byte	.LFB17
 971 038f 0C000000 		.4byte	.LFE17-.LFB17
 972 0393 01       		.uleb128 0x1
 973 0394 9C       		.byte	0x9c
 974 0395 19       		.uleb128 0x19
 975 0396 59030000 		.4byte	.LASF45
 976 039a 01       		.byte	0x1
 977 039b 20       		.byte	0x20
 978 039c 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 35


 979 03a0 05       		.uleb128 0x5
 980 03a1 03       		.byte	0x3
 981 03a2 00000000 		.4byte	MotorPWM_initVar
 982 03a6 1A       		.uleb128 0x1a
 983 03a7 90020000 		.4byte	.LASF39
 984 03ab 03       		.byte	0x3
 985 03ac E3       		.byte	0xe3
 986 03ad 6B000000 		.4byte	0x6b
 987 03b1 1B       		.uleb128 0x1b
 988 03b2 B4020000 		.4byte	.LASF46
 989 03b6 03       		.byte	0x3
 990 03b7 E4       		.byte	0xe4
 991 03b8 1C       		.uleb128 0x1c
 992 03b9 6B000000 		.4byte	0x6b
 993 03bd 00       		.byte	0
 994 03be 00       		.byte	0
 995              		.section	.debug_abbrev,"",%progbits
 996              	.Ldebug_abbrev0:
 997 0000 01       		.uleb128 0x1
 998 0001 11       		.uleb128 0x11
 999 0002 01       		.byte	0x1
 1000 0003 25       		.uleb128 0x25
 1001 0004 0E       		.uleb128 0xe
 1002 0005 13       		.uleb128 0x13
 1003 0006 0B       		.uleb128 0xb
 1004 0007 03       		.uleb128 0x3
 1005 0008 0E       		.uleb128 0xe
 1006 0009 1B       		.uleb128 0x1b
 1007 000a 0E       		.uleb128 0xe
 1008 000b 55       		.uleb128 0x55
 1009 000c 17       		.uleb128 0x17
 1010 000d 11       		.uleb128 0x11
 1011 000e 01       		.uleb128 0x1
 1012 000f 10       		.uleb128 0x10
 1013 0010 17       		.uleb128 0x17
 1014 0011 00       		.byte	0
 1015 0012 00       		.byte	0
 1016 0013 02       		.uleb128 0x2
 1017 0014 24       		.uleb128 0x24
 1018 0015 00       		.byte	0
 1019 0016 0B       		.uleb128 0xb
 1020 0017 0B       		.uleb128 0xb
 1021 0018 3E       		.uleb128 0x3e
 1022 0019 0B       		.uleb128 0xb
 1023 001a 03       		.uleb128 0x3
 1024 001b 0E       		.uleb128 0xe
 1025 001c 00       		.byte	0
 1026 001d 00       		.byte	0
 1027 001e 03       		.uleb128 0x3
 1028 001f 24       		.uleb128 0x24
 1029 0020 00       		.byte	0
 1030 0021 0B       		.uleb128 0xb
 1031 0022 0B       		.uleb128 0xb
 1032 0023 3E       		.uleb128 0x3e
 1033 0024 0B       		.uleb128 0xb
 1034 0025 03       		.uleb128 0x3
 1035 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 36


 1036 0027 00       		.byte	0
 1037 0028 00       		.byte	0
 1038 0029 04       		.uleb128 0x4
 1039 002a 16       		.uleb128 0x16
 1040 002b 00       		.byte	0
 1041 002c 03       		.uleb128 0x3
 1042 002d 0E       		.uleb128 0xe
 1043 002e 3A       		.uleb128 0x3a
 1044 002f 0B       		.uleb128 0xb
 1045 0030 3B       		.uleb128 0x3b
 1046 0031 05       		.uleb128 0x5
 1047 0032 49       		.uleb128 0x49
 1048 0033 13       		.uleb128 0x13
 1049 0034 00       		.byte	0
 1050 0035 00       		.byte	0
 1051 0036 05       		.uleb128 0x5
 1052 0037 35       		.uleb128 0x35
 1053 0038 00       		.byte	0
 1054 0039 49       		.uleb128 0x49
 1055 003a 13       		.uleb128 0x13
 1056 003b 00       		.byte	0
 1057 003c 00       		.byte	0
 1058 003d 06       		.uleb128 0x6
 1059 003e 2E       		.uleb128 0x2e
 1060 003f 00       		.byte	0
 1061 0040 3F       		.uleb128 0x3f
 1062 0041 19       		.uleb128 0x19
 1063 0042 03       		.uleb128 0x3
 1064 0043 0E       		.uleb128 0xe
 1065 0044 3A       		.uleb128 0x3a
 1066 0045 0B       		.uleb128 0xb
 1067 0046 3B       		.uleb128 0x3b
 1068 0047 05       		.uleb128 0x5
 1069 0048 27       		.uleb128 0x27
 1070 0049 19       		.uleb128 0x19
 1071 004a 49       		.uleb128 0x49
 1072 004b 13       		.uleb128 0x13
 1073 004c 20       		.uleb128 0x20
 1074 004d 0B       		.uleb128 0xb
 1075 004e 00       		.byte	0
 1076 004f 00       		.byte	0
 1077 0050 07       		.uleb128 0x7
 1078 0051 2E       		.uleb128 0x2e
 1079 0052 01       		.byte	0x1
 1080 0053 3F       		.uleb128 0x3f
 1081 0054 19       		.uleb128 0x19
 1082 0055 03       		.uleb128 0x3
 1083 0056 0E       		.uleb128 0xe
 1084 0057 3A       		.uleb128 0x3a
 1085 0058 0B       		.uleb128 0xb
 1086 0059 3B       		.uleb128 0x3b
 1087 005a 05       		.uleb128 0x5
 1088 005b 27       		.uleb128 0x27
 1089 005c 19       		.uleb128 0x19
 1090 005d 20       		.uleb128 0x20
 1091 005e 0B       		.uleb128 0xb
 1092 005f 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 37


 1093 0060 13       		.uleb128 0x13
 1094 0061 00       		.byte	0
 1095 0062 00       		.byte	0
 1096 0063 08       		.uleb128 0x8
 1097 0064 05       		.uleb128 0x5
 1098 0065 00       		.byte	0
 1099 0066 03       		.uleb128 0x3
 1100 0067 0E       		.uleb128 0xe
 1101 0068 3A       		.uleb128 0x3a
 1102 0069 0B       		.uleb128 0xb
 1103 006a 3B       		.uleb128 0x3b
 1104 006b 05       		.uleb128 0x5
 1105 006c 49       		.uleb128 0x49
 1106 006d 13       		.uleb128 0x13
 1107 006e 00       		.byte	0
 1108 006f 00       		.byte	0
 1109 0070 09       		.uleb128 0x9
 1110 0071 2E       		.uleb128 0x2e
 1111 0072 00       		.byte	0
 1112 0073 3F       		.uleb128 0x3f
 1113 0074 19       		.uleb128 0x19
 1114 0075 03       		.uleb128 0x3
 1115 0076 0E       		.uleb128 0xe
 1116 0077 3A       		.uleb128 0x3a
 1117 0078 0B       		.uleb128 0xb
 1118 0079 3B       		.uleb128 0x3b
 1119 007a 0B       		.uleb128 0xb
 1120 007b 27       		.uleb128 0x27
 1121 007c 19       		.uleb128 0x19
 1122 007d 11       		.uleb128 0x11
 1123 007e 01       		.uleb128 0x1
 1124 007f 12       		.uleb128 0x12
 1125 0080 06       		.uleb128 0x6
 1126 0081 40       		.uleb128 0x40
 1127 0082 18       		.uleb128 0x18
 1128 0083 9742     		.uleb128 0x2117
 1129 0085 19       		.uleb128 0x19
 1130 0086 00       		.byte	0
 1131 0087 00       		.byte	0
 1132 0088 0A       		.uleb128 0xa
 1133 0089 2E       		.uleb128 0x2e
 1134 008a 01       		.byte	0x1
 1135 008b 31       		.uleb128 0x31
 1136 008c 13       		.uleb128 0x13
 1137 008d 11       		.uleb128 0x11
 1138 008e 01       		.uleb128 0x1
 1139 008f 12       		.uleb128 0x12
 1140 0090 06       		.uleb128 0x6
 1141 0091 40       		.uleb128 0x40
 1142 0092 18       		.uleb128 0x18
 1143 0093 9742     		.uleb128 0x2117
 1144 0095 19       		.uleb128 0x19
 1145 0096 01       		.uleb128 0x1
 1146 0097 13       		.uleb128 0x13
 1147 0098 00       		.byte	0
 1148 0099 00       		.byte	0
 1149 009a 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 38


 1150 009b 05       		.uleb128 0x5
 1151 009c 00       		.byte	0
 1152 009d 31       		.uleb128 0x31
 1153 009e 13       		.uleb128 0x13
 1154 009f 02       		.uleb128 0x2
 1155 00a0 18       		.uleb128 0x18
 1156 00a1 00       		.byte	0
 1157 00a2 00       		.byte	0
 1158 00a3 0C       		.uleb128 0xc
 1159 00a4 2E       		.uleb128 0x2e
 1160 00a5 00       		.byte	0
 1161 00a6 3F       		.uleb128 0x3f
 1162 00a7 19       		.uleb128 0x19
 1163 00a8 03       		.uleb128 0x3
 1164 00a9 0E       		.uleb128 0xe
 1165 00aa 3A       		.uleb128 0x3a
 1166 00ab 0B       		.uleb128 0xb
 1167 00ac 3B       		.uleb128 0x3b
 1168 00ad 05       		.uleb128 0x5
 1169 00ae 27       		.uleb128 0x27
 1170 00af 19       		.uleb128 0x19
 1171 00b0 49       		.uleb128 0x49
 1172 00b1 13       		.uleb128 0x13
 1173 00b2 11       		.uleb128 0x11
 1174 00b3 01       		.uleb128 0x1
 1175 00b4 12       		.uleb128 0x12
 1176 00b5 06       		.uleb128 0x6
 1177 00b6 40       		.uleb128 0x40
 1178 00b7 18       		.uleb128 0x18
 1179 00b8 9742     		.uleb128 0x2117
 1180 00ba 19       		.uleb128 0x19
 1181 00bb 00       		.byte	0
 1182 00bc 00       		.byte	0
 1183 00bd 0D       		.uleb128 0xd
 1184 00be 2E       		.uleb128 0x2e
 1185 00bf 01       		.byte	0x1
 1186 00c0 3F       		.uleb128 0x3f
 1187 00c1 19       		.uleb128 0x19
 1188 00c2 03       		.uleb128 0x3
 1189 00c3 0E       		.uleb128 0xe
 1190 00c4 3A       		.uleb128 0x3a
 1191 00c5 0B       		.uleb128 0xb
 1192 00c6 3B       		.uleb128 0x3b
 1193 00c7 05       		.uleb128 0x5
 1194 00c8 27       		.uleb128 0x27
 1195 00c9 19       		.uleb128 0x19
 1196 00ca 11       		.uleb128 0x11
 1197 00cb 01       		.uleb128 0x1
 1198 00cc 12       		.uleb128 0x12
 1199 00cd 06       		.uleb128 0x6
 1200 00ce 40       		.uleb128 0x40
 1201 00cf 18       		.uleb128 0x18
 1202 00d0 9742     		.uleb128 0x2117
 1203 00d2 19       		.uleb128 0x19
 1204 00d3 01       		.uleb128 0x1
 1205 00d4 13       		.uleb128 0x13
 1206 00d5 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 39


 1207 00d6 00       		.byte	0
 1208 00d7 0E       		.uleb128 0xe
 1209 00d8 1D       		.uleb128 0x1d
 1210 00d9 00       		.byte	0
 1211 00da 31       		.uleb128 0x31
 1212 00db 13       		.uleb128 0x13
 1213 00dc 11       		.uleb128 0x11
 1214 00dd 01       		.uleb128 0x1
 1215 00de 12       		.uleb128 0x12
 1216 00df 06       		.uleb128 0x6
 1217 00e0 58       		.uleb128 0x58
 1218 00e1 0B       		.uleb128 0xb
 1219 00e2 59       		.uleb128 0x59
 1220 00e3 05       		.uleb128 0x5
 1221 00e4 00       		.byte	0
 1222 00e5 00       		.byte	0
 1223 00e6 0F       		.uleb128 0xf
 1224 00e7 2E       		.uleb128 0x2e
 1225 00e8 01       		.byte	0x1
 1226 00e9 3F       		.uleb128 0x3f
 1227 00ea 19       		.uleb128 0x19
 1228 00eb 03       		.uleb128 0x3
 1229 00ec 0E       		.uleb128 0xe
 1230 00ed 3A       		.uleb128 0x3a
 1231 00ee 0B       		.uleb128 0xb
 1232 00ef 3B       		.uleb128 0x3b
 1233 00f0 0B       		.uleb128 0xb
 1234 00f1 27       		.uleb128 0x27
 1235 00f2 19       		.uleb128 0x19
 1236 00f3 11       		.uleb128 0x11
 1237 00f4 01       		.uleb128 0x1
 1238 00f5 12       		.uleb128 0x12
 1239 00f6 06       		.uleb128 0x6
 1240 00f7 40       		.uleb128 0x40
 1241 00f8 18       		.uleb128 0x18
 1242 00f9 9742     		.uleb128 0x2117
 1243 00fb 19       		.uleb128 0x19
 1244 00fc 01       		.uleb128 0x1
 1245 00fd 13       		.uleb128 0x13
 1246 00fe 00       		.byte	0
 1247 00ff 00       		.byte	0
 1248 0100 10       		.uleb128 0x10
 1249 0101 34       		.uleb128 0x34
 1250 0102 00       		.byte	0
 1251 0103 03       		.uleb128 0x3
 1252 0104 0E       		.uleb128 0xe
 1253 0105 3A       		.uleb128 0x3a
 1254 0106 0B       		.uleb128 0xb
 1255 0107 3B       		.uleb128 0x3b
 1256 0108 0B       		.uleb128 0xb
 1257 0109 49       		.uleb128 0x49
 1258 010a 13       		.uleb128 0x13
 1259 010b 02       		.uleb128 0x2
 1260 010c 17       		.uleb128 0x17
 1261 010d 00       		.byte	0
 1262 010e 00       		.byte	0
 1263 010f 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 40


 1264 0110 1D       		.uleb128 0x1d
 1265 0111 01       		.byte	0x1
 1266 0112 31       		.uleb128 0x31
 1267 0113 13       		.uleb128 0x13
 1268 0114 52       		.uleb128 0x52
 1269 0115 01       		.uleb128 0x1
 1270 0116 55       		.uleb128 0x55
 1271 0117 17       		.uleb128 0x17
 1272 0118 58       		.uleb128 0x58
 1273 0119 0B       		.uleb128 0xb
 1274 011a 59       		.uleb128 0x59
 1275 011b 0B       		.uleb128 0xb
 1276 011c 01       		.uleb128 0x1
 1277 011d 13       		.uleb128 0x13
 1278 011e 00       		.byte	0
 1279 011f 00       		.byte	0
 1280 0120 12       		.uleb128 0x12
 1281 0121 05       		.uleb128 0x5
 1282 0122 00       		.byte	0
 1283 0123 31       		.uleb128 0x31
 1284 0124 13       		.uleb128 0x13
 1285 0125 1C       		.uleb128 0x1c
 1286 0126 0B       		.uleb128 0xb
 1287 0127 00       		.byte	0
 1288 0128 00       		.byte	0
 1289 0129 13       		.uleb128 0x13
 1290 012a 1D       		.uleb128 0x1d
 1291 012b 01       		.byte	0x1
 1292 012c 31       		.uleb128 0x31
 1293 012d 13       		.uleb128 0x13
 1294 012e 11       		.uleb128 0x11
 1295 012f 01       		.uleb128 0x1
 1296 0130 12       		.uleb128 0x12
 1297 0131 06       		.uleb128 0x6
 1298 0132 58       		.uleb128 0x58
 1299 0133 0B       		.uleb128 0xb
 1300 0134 59       		.uleb128 0x59
 1301 0135 0B       		.uleb128 0xb
 1302 0136 01       		.uleb128 0x1
 1303 0137 13       		.uleb128 0x13
 1304 0138 00       		.byte	0
 1305 0139 00       		.byte	0
 1306 013a 14       		.uleb128 0x14
 1307 013b 898201   		.uleb128 0x4109
 1308 013e 00       		.byte	0
 1309 013f 11       		.uleb128 0x11
 1310 0140 01       		.uleb128 0x1
 1311 0141 31       		.uleb128 0x31
 1312 0142 13       		.uleb128 0x13
 1313 0143 00       		.byte	0
 1314 0144 00       		.byte	0
 1315 0145 15       		.uleb128 0x15
 1316 0146 2E       		.uleb128 0x2e
 1317 0147 00       		.byte	0
 1318 0148 31       		.uleb128 0x31
 1319 0149 13       		.uleb128 0x13
 1320 014a 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 41


 1321 014b 01       		.uleb128 0x1
 1322 014c 12       		.uleb128 0x12
 1323 014d 06       		.uleb128 0x6
 1324 014e 40       		.uleb128 0x40
 1325 014f 18       		.uleb128 0x18
 1326 0150 9742     		.uleb128 0x2117
 1327 0152 19       		.uleb128 0x19
 1328 0153 00       		.byte	0
 1329 0154 00       		.byte	0
 1330 0155 16       		.uleb128 0x16
 1331 0156 2E       		.uleb128 0x2e
 1332 0157 01       		.byte	0x1
 1333 0158 3F       		.uleb128 0x3f
 1334 0159 19       		.uleb128 0x19
 1335 015a 03       		.uleb128 0x3
 1336 015b 0E       		.uleb128 0xe
 1337 015c 3A       		.uleb128 0x3a
 1338 015d 0B       		.uleb128 0xb
 1339 015e 3B       		.uleb128 0x3b
 1340 015f 05       		.uleb128 0x5
 1341 0160 27       		.uleb128 0x27
 1342 0161 19       		.uleb128 0x19
 1343 0162 49       		.uleb128 0x49
 1344 0163 13       		.uleb128 0x13
 1345 0164 11       		.uleb128 0x11
 1346 0165 01       		.uleb128 0x1
 1347 0166 12       		.uleb128 0x12
 1348 0167 06       		.uleb128 0x6
 1349 0168 40       		.uleb128 0x40
 1350 0169 18       		.uleb128 0x18
 1351 016a 9742     		.uleb128 0x2117
 1352 016c 19       		.uleb128 0x19
 1353 016d 01       		.uleb128 0x1
 1354 016e 13       		.uleb128 0x13
 1355 016f 00       		.byte	0
 1356 0170 00       		.byte	0
 1357 0171 17       		.uleb128 0x17
 1358 0172 34       		.uleb128 0x34
 1359 0173 00       		.byte	0
 1360 0174 03       		.uleb128 0x3
 1361 0175 0E       		.uleb128 0xe
 1362 0176 3A       		.uleb128 0x3a
 1363 0177 0B       		.uleb128 0xb
 1364 0178 3B       		.uleb128 0x3b
 1365 0179 05       		.uleb128 0x5
 1366 017a 49       		.uleb128 0x49
 1367 017b 13       		.uleb128 0x13
 1368 017c 02       		.uleb128 0x2
 1369 017d 18       		.uleb128 0x18
 1370 017e 00       		.byte	0
 1371 017f 00       		.byte	0
 1372 0180 18       		.uleb128 0x18
 1373 0181 05       		.uleb128 0x5
 1374 0182 00       		.byte	0
 1375 0183 03       		.uleb128 0x3
 1376 0184 0E       		.uleb128 0xe
 1377 0185 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 42


 1378 0186 0B       		.uleb128 0xb
 1379 0187 3B       		.uleb128 0x3b
 1380 0188 05       		.uleb128 0x5
 1381 0189 49       		.uleb128 0x49
 1382 018a 13       		.uleb128 0x13
 1383 018b 02       		.uleb128 0x2
 1384 018c 18       		.uleb128 0x18
 1385 018d 00       		.byte	0
 1386 018e 00       		.byte	0
 1387 018f 19       		.uleb128 0x19
 1388 0190 34       		.uleb128 0x34
 1389 0191 00       		.byte	0
 1390 0192 03       		.uleb128 0x3
 1391 0193 0E       		.uleb128 0xe
 1392 0194 3A       		.uleb128 0x3a
 1393 0195 0B       		.uleb128 0xb
 1394 0196 3B       		.uleb128 0x3b
 1395 0197 0B       		.uleb128 0xb
 1396 0198 49       		.uleb128 0x49
 1397 0199 13       		.uleb128 0x13
 1398 019a 3F       		.uleb128 0x3f
 1399 019b 19       		.uleb128 0x19
 1400 019c 02       		.uleb128 0x2
 1401 019d 18       		.uleb128 0x18
 1402 019e 00       		.byte	0
 1403 019f 00       		.byte	0
 1404 01a0 1A       		.uleb128 0x1a
 1405 01a1 2E       		.uleb128 0x2e
 1406 01a2 00       		.byte	0
 1407 01a3 3F       		.uleb128 0x3f
 1408 01a4 19       		.uleb128 0x19
 1409 01a5 03       		.uleb128 0x3
 1410 01a6 0E       		.uleb128 0xe
 1411 01a7 3A       		.uleb128 0x3a
 1412 01a8 0B       		.uleb128 0xb
 1413 01a9 3B       		.uleb128 0x3b
 1414 01aa 0B       		.uleb128 0xb
 1415 01ab 27       		.uleb128 0x27
 1416 01ac 19       		.uleb128 0x19
 1417 01ad 49       		.uleb128 0x49
 1418 01ae 13       		.uleb128 0x13
 1419 01af 3C       		.uleb128 0x3c
 1420 01b0 19       		.uleb128 0x19
 1421 01b1 00       		.byte	0
 1422 01b2 00       		.byte	0
 1423 01b3 1B       		.uleb128 0x1b
 1424 01b4 2E       		.uleb128 0x2e
 1425 01b5 01       		.byte	0x1
 1426 01b6 3F       		.uleb128 0x3f
 1427 01b7 19       		.uleb128 0x19
 1428 01b8 03       		.uleb128 0x3
 1429 01b9 0E       		.uleb128 0xe
 1430 01ba 3A       		.uleb128 0x3a
 1431 01bb 0B       		.uleb128 0xb
 1432 01bc 3B       		.uleb128 0x3b
 1433 01bd 0B       		.uleb128 0xb
 1434 01be 27       		.uleb128 0x27
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 43


 1435 01bf 19       		.uleb128 0x19
 1436 01c0 3C       		.uleb128 0x3c
 1437 01c1 19       		.uleb128 0x19
 1438 01c2 00       		.byte	0
 1439 01c3 00       		.byte	0
 1440 01c4 1C       		.uleb128 0x1c
 1441 01c5 05       		.uleb128 0x5
 1442 01c6 00       		.byte	0
 1443 01c7 49       		.uleb128 0x49
 1444 01c8 13       		.uleb128 0x13
 1445 01c9 00       		.byte	0
 1446 01ca 00       		.byte	0
 1447 01cb 00       		.byte	0
 1448              		.section	.debug_loc,"",%progbits
 1449              	.Ldebug_loc0:
 1450              	.LLST0:
 1451 0000 0A000000 		.4byte	.LVL1
 1452 0004 0C000000 		.4byte	.LVL2
 1453 0008 0600     		.2byte	0x6
 1454 000a 73       		.byte	0x73
 1455 000b 00       		.sleb128 0
 1456 000c 09       		.byte	0x9
 1457 000d C0       		.byte	0xc0
 1458 000e 1A       		.byte	0x1a
 1459 000f 9F       		.byte	0x9f
 1460 0010 00000000 		.4byte	0
 1461 0014 00000000 		.4byte	0
 1462              	.LLST1:
 1463 0018 3C000000 		.4byte	.LVL7
 1464 001c 47000000 		.4byte	.LVL8-1
 1465 0020 0100     		.2byte	0x1
 1466 0022 50       		.byte	0x50
 1467 0023 00000000 		.4byte	0
 1468 0027 00000000 		.4byte	0
 1469              		.section	.debug_aranges,"",%progbits
 1470 0000 94000000 		.4byte	0x94
 1471 0004 0200     		.2byte	0x2
 1472 0006 00000000 		.4byte	.Ldebug_info0
 1473 000a 04       		.byte	0x4
 1474 000b 00       		.byte	0
 1475 000c 0000     		.2byte	0
 1476 000e 0000     		.2byte	0
 1477 0010 00000000 		.4byte	.LFB4
 1478 0014 10000000 		.4byte	.LFE4-.LFB4
 1479 0018 00000000 		.4byte	.LFB5
 1480 001c 10000000 		.4byte	.LFE5-.LFB5
 1481 0020 00000000 		.4byte	.LFB6
 1482 0024 0C000000 		.4byte	.LFE6-.LFB6
 1483 0028 00000000 		.4byte	.LFB7
 1484 002c 14000000 		.4byte	.LFE7-.LFB7
 1485 0030 00000000 		.4byte	.LFB8
 1486 0034 18000000 		.4byte	.LFE8-.LFB8
 1487 0038 00000000 		.4byte	.LFB3
 1488 003c 6C000000 		.4byte	.LFE3-.LFB3
 1489 0040 00000000 		.4byte	.LFB2
 1490 0044 1C000000 		.4byte	.LFE2-.LFB2
 1491 0048 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 44


 1492 004c 0C000000 		.4byte	.LFE9-.LFB9
 1493 0050 00000000 		.4byte	.LFB10
 1494 0054 0C000000 		.4byte	.LFE10-.LFB10
 1495 0058 00000000 		.4byte	.LFB11
 1496 005c 0C000000 		.4byte	.LFE11-.LFB11
 1497 0060 00000000 		.4byte	.LFB12
 1498 0064 0C000000 		.4byte	.LFE12-.LFB12
 1499 0068 00000000 		.4byte	.LFB13
 1500 006c 0C000000 		.4byte	.LFE13-.LFB13
 1501 0070 00000000 		.4byte	.LFB14
 1502 0074 0C000000 		.4byte	.LFE14-.LFB14
 1503 0078 00000000 		.4byte	.LFB15
 1504 007c 0C000000 		.4byte	.LFE15-.LFB15
 1505 0080 00000000 		.4byte	.LFB16
 1506 0084 0C000000 		.4byte	.LFE16-.LFB16
 1507 0088 00000000 		.4byte	.LFB17
 1508 008c 0C000000 		.4byte	.LFE17-.LFB17
 1509 0090 00000000 		.4byte	0
 1510 0094 00000000 		.4byte	0
 1511              		.section	.debug_ranges,"",%progbits
 1512              	.Ldebug_ranges0:
 1513 0000 1E000000 		.4byte	.LBB18
 1514 0004 20000000 		.4byte	.LBE18
 1515 0008 24000000 		.4byte	.LBB21
 1516 000c 28000000 		.4byte	.LBE21
 1517 0010 00000000 		.4byte	0
 1518 0014 00000000 		.4byte	0
 1519 0018 00000000 		.4byte	.LFB4
 1520 001c 10000000 		.4byte	.LFE4
 1521 0020 00000000 		.4byte	.LFB5
 1522 0024 10000000 		.4byte	.LFE5
 1523 0028 00000000 		.4byte	.LFB6
 1524 002c 0C000000 		.4byte	.LFE6
 1525 0030 00000000 		.4byte	.LFB7
 1526 0034 14000000 		.4byte	.LFE7
 1527 0038 00000000 		.4byte	.LFB8
 1528 003c 18000000 		.4byte	.LFE8
 1529 0040 00000000 		.4byte	.LFB3
 1530 0044 6C000000 		.4byte	.LFE3
 1531 0048 00000000 		.4byte	.LFB2
 1532 004c 1C000000 		.4byte	.LFE2
 1533 0050 00000000 		.4byte	.LFB9
 1534 0054 0C000000 		.4byte	.LFE9
 1535 0058 00000000 		.4byte	.LFB10
 1536 005c 0C000000 		.4byte	.LFE10
 1537 0060 00000000 		.4byte	.LFB11
 1538 0064 0C000000 		.4byte	.LFE11
 1539 0068 00000000 		.4byte	.LFB12
 1540 006c 0C000000 		.4byte	.LFE12
 1541 0070 00000000 		.4byte	.LFB13
 1542 0074 0C000000 		.4byte	.LFE13
 1543 0078 00000000 		.4byte	.LFB14
 1544 007c 0C000000 		.4byte	.LFE14
 1545 0080 00000000 		.4byte	.LFB15
 1546 0084 0C000000 		.4byte	.LFE15
 1547 0088 00000000 		.4byte	.LFB16
 1548 008c 0C000000 		.4byte	.LFE16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 45


 1549 0090 00000000 		.4byte	.LFB17
 1550 0094 0C000000 		.4byte	.LFE17
 1551 0098 00000000 		.4byte	0
 1552 009c 00000000 		.4byte	0
 1553              		.section	.debug_line,"",%progbits
 1554              	.Ldebug_line0:
 1555 0000 E4010000 		.section	.debug_str,"MS",%progbits,1
 1555      02005200 
 1555      00000201 
 1555      FB0E0D00 
 1555      01010101 
 1556              	.LASF15:
 1557 0000 72656731 		.ascii	"reg16\000"
 1557      3600
 1558              	.LASF20:
 1559 0006 4D6F746F 		.ascii	"MotorPWM_WritePeriod\000"
 1559      7250574D 
 1559      5F577269 
 1559      74655065 
 1559      72696F64 
 1560              	.LASF19:
 1561 001b 4D6F746F 		.ascii	"MotorPWM_WriteCounter\000"
 1561      7250574D 
 1561      5F577269 
 1561      7465436F 
 1561      756E7465 
 1562              	.LASF40:
 1563 0031 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1563      4320342E 
 1563      392E3320 
 1563      32303135 
 1563      30333033 
 1564 0064 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1564      20726576 
 1564      6973696F 
 1564      6E203232 
 1564      31323230 
 1565 0097 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 1565      66756E63 
 1565      74696F6E 
 1565      2D736563 
 1565      74696F6E 
 1566              	.LASF29:
 1567 00bf 4D6F746F 		.ascii	"MotorPWM_ClearFIFO\000"
 1567      7250574D 
 1567      5F436C65 
 1567      61724649 
 1567      464F00
 1568              	.LASF22:
 1569 00d2 70657269 		.ascii	"period\000"
 1569      6F6400
 1570              	.LASF41:
 1571 00d9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\MotorPWM.c\000"
 1571      6E657261 
 1571      7465645F 
 1571      536F7572 
 1571      63655C50 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 46


 1572              	.LASF3:
 1573 00fd 73686F72 		.ascii	"short unsigned int\000"
 1573      7420756E 
 1573      7369676E 
 1573      65642069 
 1573      6E7400
 1574              	.LASF35:
 1575 0110 4D6F746F 		.ascii	"MotorPWM_WriteControlRegister\000"
 1575      7250574D 
 1575      5F577269 
 1575      7465436F 
 1575      6E74726F 
 1576              	.LASF42:
 1577 012e 433A5C55 		.ascii	"C:\\Users\\Administrator\\Desktop\\Temp\\BackBone.c"
 1577      73657273 
 1577      5C41646D 
 1577      696E6973 
 1577      74726174 
 1578 015c 7977726B 		.ascii	"ywrk.Archive_modified\\BackBone.cywrk.Archive 09302"
 1578      2E417263 
 1578      68697665 
 1578      5F6D6F64 
 1578      69666965 
 1579 018e 3031365C 		.ascii	"016\\BackBone\\BackBone_Bootloadable.cydsn\000"
 1579      4261636B 
 1579      426F6E65 
 1579      5C426163 
 1579      6B426F6E 
 1580              	.LASF18:
 1581 01b7 4D6F746F 		.ascii	"MotorPWM_ReadStatusRegister\000"
 1581      7250574D 
 1581      5F526561 
 1581      64537461 
 1581      74757352 
 1582              	.LASF11:
 1583 01d3 666C6F61 		.ascii	"float\000"
 1583      7400
 1584              	.LASF21:
 1585 01d9 636F756E 		.ascii	"counter\000"
 1585      74657200 
 1586              	.LASF7:
 1587 01e1 6C6F6E67 		.ascii	"long long unsigned int\000"
 1587      206C6F6E 
 1587      6720756E 
 1587      7369676E 
 1587      65642069 
 1588              	.LASF1:
 1589 01f8 756E7369 		.ascii	"unsigned char\000"
 1589      676E6564 
 1589      20636861 
 1589      7200
 1590              	.LASF28:
 1591 0206 4D6F746F 		.ascii	"MotorPWM_Stop\000"
 1591      7250574D 
 1591      5F53746F 
 1591      7000
 1592              	.LASF5:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 47


 1593 0214 6C6F6E67 		.ascii	"long unsigned int\000"
 1593      20756E73 
 1593      69676E65 
 1593      6420696E 
 1593      7400
 1594              	.LASF9:
 1595 0226 75696E74 		.ascii	"uint8\000"
 1595      3800
 1596              	.LASF44:
 1597 022c 636F6E74 		.ascii	"control\000"
 1597      726F6C00 
 1598              	.LASF38:
 1599 0234 4D6F746F 		.ascii	"MotorPWM_ReadPeriod\000"
 1599      7250574D 
 1599      5F526561 
 1599      64506572 
 1599      696F6400 
 1600              	.LASF12:
 1601 0248 646F7562 		.ascii	"double\000"
 1601      6C6500
 1602              	.LASF37:
 1603 024f 4D6F746F 		.ascii	"MotorPWM_ReadCompare\000"
 1603      7250574D 
 1603      5F526561 
 1603      64436F6D 
 1603      70617265 
 1604              	.LASF27:
 1605 0264 4D6F746F 		.ascii	"MotorPWM_Enable\000"
 1605      7250574D 
 1605      5F456E61 
 1605      626C6500 
 1606              	.LASF10:
 1607 0274 75696E74 		.ascii	"uint16\000"
 1607      313600
 1608              	.LASF17:
 1609 027b 4D6F746F 		.ascii	"MotorPWM_ReadCapture\000"
 1609      7250574D 
 1609      5F526561 
 1609      64436170 
 1609      74757265 
 1610              	.LASF39:
 1611 0290 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1611      74657243 
 1611      72697469 
 1611      63616C53 
 1611      65637469 
 1612              	.LASF8:
 1613 02a7 756E7369 		.ascii	"unsigned int\000"
 1613      676E6564 
 1613      20696E74 
 1613      00
 1614              	.LASF46:
 1615 02b4 43794578 		.ascii	"CyExitCriticalSection\000"
 1615      69744372 
 1615      69746963 
 1615      616C5365 
 1615      6374696F 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 48


 1616              	.LASF34:
 1617 02ca 72657375 		.ascii	"result\000"
 1617      6C7400
 1618              	.LASF14:
 1619 02d1 72656738 		.ascii	"reg8\000"
 1619      00
 1620              	.LASF16:
 1621 02d6 73697A65 		.ascii	"sizetype\000"
 1621      74797065 
 1621      00
 1622              	.LASF6:
 1623 02df 6C6F6E67 		.ascii	"long long int\000"
 1623      206C6F6E 
 1623      6720696E 
 1623      7400
 1624              	.LASF26:
 1625 02ed 696E7465 		.ascii	"interruptMode\000"
 1625      72727570 
 1625      744D6F64 
 1625      6500
 1626              	.LASF23:
 1627 02fb 4D6F746F 		.ascii	"MotorPWM_WriteCompare\000"
 1627      7250574D 
 1627      5F577269 
 1627      7465436F 
 1627      6D706172 
 1628              	.LASF2:
 1629 0311 73686F72 		.ascii	"short int\000"
 1629      7420696E 
 1629      7400
 1630              	.LASF36:
 1631 031b 4D6F746F 		.ascii	"MotorPWM_ReadCounter\000"
 1631      7250574D 
 1631      5F526561 
 1631      64436F75 
 1631      6E746572 
 1632              	.LASF25:
 1633 0330 4D6F746F 		.ascii	"MotorPWM_SetInterruptMode\000"
 1633      7250574D 
 1633      5F536574 
 1633      496E7465 
 1633      72727570 
 1634              	.LASF33:
 1635 034a 4D6F746F 		.ascii	"MotorPWM_Start\000"
 1635      7250574D 
 1635      5F537461 
 1635      727400
 1636              	.LASF45:
 1637 0359 4D6F746F 		.ascii	"MotorPWM_initVar\000"
 1637      7250574D 
 1637      5F696E69 
 1637      74566172 
 1637      00
 1638              	.LASF43:
 1639 036a 4D6F746F 		.ascii	"MotorPWM_ReadControlRegister\000"
 1639      7250574D 
 1639      5F526561 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\cchdqgwS.s 			page 49


 1639      64436F6E 
 1639      74726F6C 
 1640              	.LASF4:
 1641 0387 6C6F6E67 		.ascii	"long int\000"
 1641      20696E74 
 1641      00
 1642              	.LASF13:
 1643 0390 63686172 		.ascii	"char\000"
 1643      00
 1644              	.LASF32:
 1645 0395 4D6F746F 		.ascii	"MotorPWM_interruptState\000"
 1645      7250574D 
 1645      5F696E74 
 1645      65727275 
 1645      70745374 
 1646              	.LASF0:
 1647 03ad 7369676E 		.ascii	"signed char\000"
 1647      65642063 
 1647      68617200 
 1648              	.LASF24:
 1649 03b9 636F6D70 		.ascii	"compare\000"
 1649      61726500 
 1650              	.LASF31:
 1651 03c1 6374726C 		.ascii	"ctrl\000"
 1651      00
 1652              	.LASF30:
 1653 03c6 4D6F746F 		.ascii	"MotorPWM_Init\000"
 1653      7250574D 
 1653      5F496E69 
 1653      7400
 1654              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
