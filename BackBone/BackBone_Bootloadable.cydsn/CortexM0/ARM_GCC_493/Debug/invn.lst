ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"invn.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	hal
  18              		.bss
  19              		.align	2
  20              		.type	hal, %object
  21              		.size	hal, 16
  22              	hal:
  23 0000 00000000 		.space	16
  23      00000000 
  23      00000000 
  23      00000000 
  24              		.global	self_test_result
  25              		.align	2
  26              		.type	self_test_result, %object
  27              		.size	self_test_result, 4
  28              	self_test_result:
  29 0010 00000000 		.space	4
  30              		.global	dmp_bias
  31              		.align	2
  32              		.type	dmp_bias, %object
  33              		.size	dmp_bias, 36
  34              	dmp_bias:
  35 0014 00000000 		.space	36
  35      00000000 
  35      00000000 
  35      00000000 
  35      00000000 
  36              		.global	accel_data_was_set
  37              		.align	1
  38              		.type	accel_data_was_set, %object
  39              		.size	accel_data_was_set, 2
  40              	accel_data_was_set:
  41 0038 0000     		.space	2
  42              		.global	gyro_data_was_set
  43              		.align	1
  44              		.type	gyro_data_was_set, %object
  45              		.size	gyro_data_was_set, 2
  46              	gyro_data_was_set:
  47 003a 0000     		.space	2
  48              		.global	raw_gyro_data_was_set
  49              		.align	1
  50              		.type	raw_gyro_data_was_set, %object
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 2


  51              		.size	raw_gyro_data_was_set, 2
  52              	raw_gyro_data_was_set:
  53 003c 0000     		.space	2
  54              		.global	compass_data_was_set
  55              		.align	1
  56              		.type	compass_data_was_set, %object
  57              		.size	compass_data_was_set, 2
  58              	compass_data_was_set:
  59 003e 0000     		.space	2
  60              		.global	raw_compass_data_was_set
  61              		.align	1
  62              		.type	raw_compass_data_was_set, %object
  63              		.size	raw_compass_data_was_set, 2
  64              	raw_compass_data_was_set:
  65 0040 0000     		.space	2
  66              		.global	quat6_data_was_set
  67              		.align	1
  68              		.type	quat6_data_was_set, %object
  69              		.size	quat6_data_was_set, 2
  70              	quat6_data_was_set:
  71 0042 0000     		.space	2
  72              		.global	quat9_data_was_set
  73              		.align	1
  74              		.type	quat9_data_was_set, %object
  75              		.size	quat9_data_was_set, 2
  76              	quat9_data_was_set:
  77 0044 0000     		.space	2
  78              		.global	rv_quat_was_set
  79              		.align	1
  80              		.type	rv_quat_was_set, %object
  81              		.size	rv_quat_was_set, 2
  82              	rv_quat_was_set:
  83 0046 0000     		.space	2
  84              		.global	gmrv_quat_was_set
  85              		.align	1
  86              		.type	gmrv_quat_was_set, %object
  87              		.size	gmrv_quat_was_set, 2
  88              	gmrv_quat_was_set:
  89 0048 0000     		.space	2
  90              		.global	bac_data_was_set
  91              		.align	1
  92              		.type	bac_data_was_set, %object
  93              		.size	bac_data_was_set, 2
  94              	bac_data_was_set:
  95 004a 0000     		.space	2
  96              		.global	flip_data_was_set
  97              		.align	1
  98              		.type	flip_data_was_set, %object
  99              		.size	flip_data_was_set, 2
 100              	flip_data_was_set:
 101 004c 0000     		.space	2
 102              		.global	tilt_data_was_set
 103              		.align	1
 104              		.type	tilt_data_was_set, %object
 105              		.size	tilt_data_was_set, 2
 106              	tilt_data_was_set:
 107 004e 0000     		.space	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 3


 108              		.comm	grv_float,16,4
 109              		.global	cube_grv
 110              		.align	2
 111              		.type	cube_grv, %object
 112              		.size	cube_grv, 16
 113              	cube_grv:
 114 0050 00000000 		.space	16
 114      00000000 
 114      00000000 
 114      00000000 
 115              		.comm	accel_float,12,4
 116              		.comm	rv_float,16,4
 117              		.global	cube_rv
 118              		.align	2
 119              		.type	cube_rv, %object
 120              		.size	cube_rv, 16
 121              	cube_rv:
 122 0060 00000000 		.space	16
 122      00000000 
 122      00000000 
 122      00000000 
 123              		.comm	gyro_float,12,4
 124              		.comm	gyro_raw_float,12,4
 125              		.comm	gyro_bias_float,12,4
 126              		.comm	previous_bias,12,4
 127              		.comm	compass_float,12,4
 128              		.comm	compass_raw_float,12,4
 129              		.comm	compass_bias,12,4
 130              		.comm	gmrv_float,16,4
 131              		.global	cube_gmrv
 132              		.align	2
 133              		.type	cube_gmrv, %object
 134              		.size	cube_gmrv, 16
 135              	cube_gmrv:
 136 0070 00000000 		.space	16
 136      00000000 
 136      00000000 
 136      00000000 
 137              		.global	accel_accuracy
 138              		.align	2
 139              		.type	accel_accuracy, %object
 140              		.size	accel_accuracy, 4
 141              	accel_accuracy:
 142 0080 00000000 		.space	4
 143              		.global	gyro_accuracy
 144              		.align	2
 145              		.type	gyro_accuracy, %object
 146              		.size	gyro_accuracy, 4
 147              	gyro_accuracy:
 148 0084 00000000 		.space	4
 149              		.global	rv_accuracy
 150              		.align	2
 151              		.type	rv_accuracy, %object
 152              		.size	rv_accuracy, 4
 153              	rv_accuracy:
 154 0088 00000000 		.space	4
 155              		.global	compass_accuracy
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 4


 156              		.align	2
 157              		.type	compass_accuracy, %object
 158              		.size	compass_accuracy, 4
 159              	compass_accuracy:
 160 008c 00000000 		.space	4
 161              		.global	gmrv_accuracy
 162              		.align	2
 163              		.type	gmrv_accuracy, %object
 164              		.size	gmrv_accuracy, 4
 165              	gmrv_accuracy:
 166 0090 00000000 		.space	4
 167              		.global	ts
 168 0094 00000000 		.align	3
 169              		.type	ts, %object
 170              		.size	ts, 8
 171              	ts:
 172 0098 00000000 		.space	8
 172      00000000 
 173              		.global	result_quat
 174              		.align	2
 175              		.type	result_quat, %object
 176              		.size	result_quat, 16
 177              	result_quat:
 178 00a0 00000000 		.space	16
 178      00000000 
 178      00000000 
 178      00000000 
 179              		.global	a_average
 180              		.align	2
 181              		.type	a_average, %object
 182              		.size	a_average, 12
 183              	a_average:
 184 00b0 00000000 		.space	12
 184      00000000 
 184      00000000 
 185              		.global	g_average
 186              		.align	2
 187              		.type	g_average, %object
 188              		.size	g_average, 12
 189              	g_average:
 190 00bc 00000000 		.space	12
 190      00000000 
 190      00000000 
 191              		.global	steps
 192              		.align	2
 193              		.type	steps, %object
 194              		.size	steps, 4
 195              	steps:
 196 00c8 00000000 		.space	4
 197              		.global	bac_state
 198              		.align	1
 199              		.type	bac_state, %object
 200              		.size	bac_state, 2
 201              	bac_state:
 202 00cc 0000     		.space	2
 203              		.global	tilt_state
 204              		.type	tilt_state, %object
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 5


 205              		.size	tilt_state, 1
 206              	tilt_state:
 207 00ce 00       		.space	1
 208              		.global	bac_ts
 209 00cf 00       		.align	2
 210              		.type	bac_ts, %object
 211              		.size	bac_ts, 4
 212              	bac_ts:
 213 00d0 00000000 		.space	4
 214              		.global	flip_pickup
 215              		.align	1
 216              		.type	flip_pickup, %object
 217              		.size	flip_pickup, 2
 218              	flip_pickup:
 219 00d4 0000     		.space	2
 220              		.global	step_detected
 221              		.type	step_detected, %object
 222              		.size	step_detected, 1
 223              	step_detected:
 224 00d6 00       		.space	1
 225              		.global	current_output_rate
 226              		.data
 227              		.align	2
 228              		.type	current_output_rate, %object
 229              		.size	current_output_rate, 4
 230              	current_output_rate:
 231 0000 0000A040 		.word	1084227584
 232              		.global	ACCEL_GYRO_ORIENTATION
 233              		.align	2
 234              		.type	ACCEL_GYRO_ORIENTATION, %object
 235              		.size	ACCEL_GYRO_ORIENTATION, 9
 236              	ACCEL_GYRO_ORIENTATION:
 237 0004 00       		.byte	0
 238 0005 FF       		.byte	-1
 239 0006 00       		.byte	0
 240 0007 01       		.byte	1
 241 0008 00       		.byte	0
 242 0009 00       		.byte	0
 243 000a 00       		.byte	0
 244 000b 00       		.byte	0
 245 000c 01       		.byte	1
 246              		.global	COMPASS_SLAVE_ID
 247              		.section	.rodata
 248              		.type	COMPASS_SLAVE_ID, %object
 249              		.size	COMPASS_SLAVE_ID, 1
 250              	COMPASS_SLAVE_ID:
 251 0000 24       		.byte	36
 252              		.global	COMPASS_CHIP_ADDR
 253              		.type	COMPASS_CHIP_ADDR, %object
 254              		.size	COMPASS_CHIP_ADDR, 1
 255              	COMPASS_CHIP_ADDR:
 256 0001 0E       		.byte	14
 257              		.global	PRESSURE_CHIP_ADDR
 258              		.type	PRESSURE_CHIP_ADDR, %object
 259              		.size	PRESSURE_CHIP_ADDR, 1
 260              	PRESSURE_CHIP_ADDR:
 261 0002 00       		.space	1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 6


 262              		.global	COMPASS_ORIENTATION
 263              		.data
 264 000d 000000   		.align	2
 265              		.type	COMPASS_ORIENTATION, %object
 266              		.size	COMPASS_ORIENTATION, 9
 267              	COMPASS_ORIENTATION:
 268 0010 00       		.byte	0
 269 0011 FF       		.byte	-1
 270 0012 00       		.byte	0
 271 0013 01       		.byte	1
 272 0014 00       		.byte	0
 273 0015 00       		.byte	0
 274 0016 00       		.byte	0
 275 0017 00       		.byte	0
 276 0018 01       		.byte	1
 277              		.global	SOFT_IRON_MATRIX
 278 0019 000000   		.align	2
 279              		.type	SOFT_IRON_MATRIX, %object
 280              		.size	SOFT_IRON_MATRIX, 36
 281              	SOFT_IRON_MATRIX:
 282 001c 00000040 		.word	1073741824
 283 0020 00000000 		.word	0
 284 0024 00000000 		.word	0
 285 0028 00000000 		.word	0
 286 002c 00000040 		.word	1073741824
 287 0030 00000000 		.word	0
 288 0034 00000000 		.word	0
 289 0038 00000000 		.word	0
 290 003c 00000040 		.word	1073741824
 291              		.global	tst
 292              		.bss
 293 00d7 00       		.align	2
 294              		.type	tst, %object
 295              		.size	tst, 256
 296              	tst:
 297 00d8 00000000 		.space	256
 297      00000000 
 297      00000000 
 297      00000000 
 297      00000000 
 298              		.section	.text.gyro_data_ready_cb,"ax",%progbits
 299              		.align	2
 300              		.global	gyro_data_ready_cb
 301              		.code	16
 302              		.thumb_func
 303              		.type	gyro_data_ready_cb, %function
 304              	gyro_data_ready_cb:
 305              	.LFB41:
 306              		.file 1 ".\\invn.c"
   1:.\invn.c      **** /* ========================================
   2:.\invn.c      ****  *
   3:.\invn.c      ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\invn.c      ****  * All Rights Reserved
   5:.\invn.c      ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\invn.c      ****  *
   7:.\invn.c      ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\invn.c      ****  * WHICH IS THE PROPERTY OF your company.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 7


   9:.\invn.c      ****  *
  10:.\invn.c      ****  * ========================================
  11:.\invn.c      **** */
  12:.\invn.c      **** #include <project.h>
  13:.\invn.c      **** #include <invn.h>
  14:.\invn.c      **** #include ".\20648_driver\invn\inv_mems.h"
  15:.\invn.c      **** 
  16:.\invn.c      **** struct hal_s_ hal = { 0 };
  17:.\invn.c      **** 
  18:.\invn.c      **** 
  19:.\invn.c      **** 
  20:.\invn.c      **** int self_test_result = 0;
  21:.\invn.c      **** int dmp_bias[9] = { 0 };
  22:.\invn.c      **** 
  23:.\invn.c      **** unsigned short accel_data_was_set = 0;
  24:.\invn.c      **** unsigned short gyro_data_was_set = 0;
  25:.\invn.c      **** unsigned short raw_gyro_data_was_set = 0;
  26:.\invn.c      **** unsigned short compass_data_was_set = 0;
  27:.\invn.c      **** unsigned short raw_compass_data_was_set = 0;
  28:.\invn.c      **** unsigned short quat6_data_was_set = 0;
  29:.\invn.c      **** unsigned short quat9_data_was_set = 0;
  30:.\invn.c      **** unsigned short rv_quat_was_set = 0;
  31:.\invn.c      **** unsigned short gmrv_quat_was_set = 0;
  32:.\invn.c      **** unsigned short bac_data_was_set = 0;
  33:.\invn.c      **** unsigned short flip_data_was_set = 0;
  34:.\invn.c      **** unsigned short tilt_data_was_set = 0;
  35:.\invn.c      **** 
  36:.\invn.c      **** 
  37:.\invn.c      **** float grv_float[4];
  38:.\invn.c      **** signed long cube_grv[4] = { 0, 0, 0, 0 };
  39:.\invn.c      **** float accel_float[3];
  40:.\invn.c      **** float rv_float[4];
  41:.\invn.c      **** signed long cube_rv[4] = { 0, 0, 0, 0 };
  42:.\invn.c      **** float gyro_float[3];
  43:.\invn.c      **** float gyro_raw_float[3];
  44:.\invn.c      **** float gyro_bias_float[3];
  45:.\invn.c      **** long previous_bias[3];
  46:.\invn.c      **** float compass_float[3];
  47:.\invn.c      **** float compass_raw_float[3];
  48:.\invn.c      **** float compass_bias[3];
  49:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20648) 
  50:.\invn.c      **** float gmrv_float[4];
  51:.\invn.c      **** signed long cube_gmrv[4] = { 0, 0, 0, 0 };
  52:.\invn.c      **** #endif
  53:.\invn.c      **** int accel_accuracy = 0;
  54:.\invn.c      **** int gyro_accuracy = 0;
  55:.\invn.c      **** int rv_accuracy = 0;
  56:.\invn.c      **** int compass_accuracy = 0;
  57:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20648)
  58:.\invn.c      **** int gmrv_accuracy = 0;
  59:.\invn.c      **** #endif
  60:.\invn.c      **** 
  61:.\invn.c      **** long long ts = 0;
  62:.\invn.c      **** 
  63:.\invn.c      **** signed long result_quat[4] = { 0, 0, 0, 0 };
  64:.\invn.c      **** 
  65:.\invn.c      **** int a_average[3] = { 0, 0, 0 };
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 8


  66:.\invn.c      **** int g_average[3] = { 0, 0, 0 };
  67:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS
  68:.\invn.c      **** float linAccFloat[3];
  69:.\invn.c      **** float gravityFloat[3];
  70:.\invn.c      **** float orientationFloat[3];
  71:.\invn.c      **** #endif
  72:.\invn.c      **** 
  73:.\invn.c      **** unsigned long steps = 0;
  74:.\invn.c      **** uint16_t bac_state = 0;
  75:.\invn.c      **** uint8_t tilt_state = 0;
  76:.\invn.c      **** long bac_ts = 0;
  77:.\invn.c      **** uint16_t flip_pickup = 0;
  78:.\invn.c      **** uint8_t step_detected = 0;
  79:.\invn.c      **** float current_output_rate = 5;
  80:.\invn.c      **** 
  81:.\invn.c      **** signed char ACCEL_GYRO_ORIENTATION[] = {0,-1,0,1,0,0,0,0,1};
  82:.\invn.c      **** 
  83:.\invn.c      **** /* Change the COMPASS_SLAVE_ID to the correct ID of compass used. You can find the defines in inv_m
  84:.\invn.c      **** const unsigned char COMPASS_SLAVE_ID = HW_AK09912; 
  85:.\invn.c      **** 
  86:.\invn.c      **** /* Change COMPASS_CHIP_ADDR to 0x0C for ICM20698 which uses internal AKM 9916 */
  87:.\invn.c      **** /* Change COMPASS_CHIP_ADDR to 0x0E for other AKM 9912/9911/9913/8963*/
  88:.\invn.c      **** const unsigned char COMPASS_CHIP_ADDR = 0x0E;
  89:.\invn.c      **** const unsigned char PRESSURE_CHIP_ADDR = 0x00;
  90:.\invn.c      **** 
  91:.\invn.c      **** signed char COMPASS_ORIENTATION[] = {0,-1,0,1,0,0,0,0,1};
  92:.\invn.c      **** 
  93:.\invn.c      **** long SOFT_IRON_MATRIX[] = {1073741824,0,0,0,1073741824,0,0,0,1073741824};
  94:.\invn.c      **** 
  95:.\invn.c      **** char tst[INV_TST_LEN] = { 0 };
  96:.\invn.c      **** 
  97:.\invn.c      **** /* Every time new gyro data is available, this function is called in an
  98:.\invn.c      **** * ISR context. In this example, it sets a flag protecting the FIFO read
  99:.\invn.c      **** * function.
 100:.\invn.c      **** */
 101:.\invn.c      **** void gyro_data_ready_cb(void)
 102:.\invn.c      **** {
 307              		.loc 1 102 0
 308              		.cfi_startproc
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 103:.\invn.c      **** 	hal.new_gyro = 1;
 315              		.loc 1 103 0
 316 0004 024B     		ldr	r3, .L2
 317 0006 0122     		mov	r2, #1
 318 0008 1A73     		strb	r2, [r3, #12]
 104:.\invn.c      **** }
 319              		.loc 1 104 0
 320 000a BD46     		mov	sp, r7
 321              		@ sp needed
 322 000c 80BD     		pop	{r7, pc}
 323              	.L3:
 324 000e C046     		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 9


 325              	.L2:
 326 0010 00000000 		.word	hal
 327              		.cfi_endproc
 328              	.LFE41:
 329              		.size	gyro_data_ready_cb, .-gyro_data_ready_cb
 330              		.global	__aeabi_i2f
 331              		.global	__aeabi_fdiv
 332              		.global	__aeabi_f2uiz
 333              		.section	.text.set_output_rates,"ax",%progbits
 334              		.align	2
 335              		.global	set_output_rates
 336              		.code	16
 337              		.thumb_func
 338              		.type	set_output_rates, %function
 339              	set_output_rates:
 340              	.LFB42:
 105:.\invn.c      **** 
 106:.\invn.c      **** inv_error_t set_output_rates(float rate)
 107:.\invn.c      **** {
 341              		.loc 1 107 0
 342              		.cfi_startproc
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 84B0     		sub	sp, sp, #16
 348              		.cfi_def_cfa_offset 24
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 7860     		str	r0, [r7, #4]
 108:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20609)
 109:.\invn.c      ****   unsigned short base_rate = 200; //DMP runs at 200Hz always
 110:.\invn.c      **** #elif (MEMS_CHIP == HW_ICM20648)
 111:.\invn.c      ****   unsigned short base_rate = 1125; 
 352              		.loc 1 111 0
 353 0008 0A23     		mov	r3, #10
 354 000a FB18     		add	r3, r7, r3
 355 000c DB4A     		ldr	r2, .L26
 356 000e 1A80     		strh	r2, [r3]
 112:.\invn.c      **** #endif
 113:.\invn.c      ****   dmp_reset_fifo();
 357              		.loc 1 113 0
 358 0010 FFF7FEFF 		bl	dmp_reset_fifo
 114:.\invn.c      ****   inv_error_t result=0;
 359              		.loc 1 114 0
 360 0014 0023     		mov	r3, #0
 361 0016 FB60     		str	r3, [r7, #12]
 115:.\invn.c      ****           if (hal.report & PRINT_ACCEL)
 362              		.loc 1 115 0
 363 0018 D94B     		ldr	r3, .L26+4
 364 001a 1B68     		ldr	r3, [r3]
 365 001c 0122     		mov	r2, #1
 366 001e 1340     		and	r3, r2
 367 0020 18D0     		beq	.L5
 116:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_ACCELEROMETER, (unsigned short)(base_rate / ra
 368              		.loc 1 116 0
 369 0022 0A23     		mov	r3, #10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 10


 370 0024 FB18     		add	r3, r7, r3
 371 0026 1B88     		ldrh	r3, [r3]
 372 0028 181C     		mov	r0, r3
 373 002a FFF7FEFF 		bl	__aeabi_i2f
 374 002e 031C     		add	r3, r0, #0
 375 0030 181C     		add	r0, r3, #0
 376 0032 7968     		ldr	r1, [r7, #4]
 377 0034 FFF7FEFF 		bl	__aeabi_fdiv
 378 0038 031C     		add	r3, r0, #0
 379 003a 181C     		add	r0, r3, #0
 380 003c FFF7FEFF 		bl	__aeabi_f2uiz
 381 0040 031C     		mov	r3, r0
 382 0042 9BB2     		uxth	r3, r3
 383 0044 0120     		mov	r0, #1
 384 0046 191C     		mov	r1, r3
 385 0048 FFF7FEFF 		bl	inv_set_odr
 386 004c 021C     		mov	r2, r0
 387 004e FB68     		ldr	r3, [r7, #12]
 388 0050 1343     		orr	r3, r2
 389 0052 FB60     		str	r3, [r7, #12]
 390              	.L5:
 117:.\invn.c      ****           if (hal.report & PRINT_GYRO)
 391              		.loc 1 117 0
 392 0054 CA4B     		ldr	r3, .L26+4
 393 0056 1B68     		ldr	r3, [r3]
 394 0058 0222     		mov	r2, #2
 395 005a 1340     		and	r3, r2
 396 005c 18D0     		beq	.L6
 118:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GYROSCOPE, (unsigned short)(base_rate / rate))
 397              		.loc 1 118 0
 398 005e 0A23     		mov	r3, #10
 399 0060 FB18     		add	r3, r7, r3
 400 0062 1B88     		ldrh	r3, [r3]
 401 0064 181C     		mov	r0, r3
 402 0066 FFF7FEFF 		bl	__aeabi_i2f
 403 006a 031C     		add	r3, r0, #0
 404 006c 181C     		add	r0, r3, #0
 405 006e 7968     		ldr	r1, [r7, #4]
 406 0070 FFF7FEFF 		bl	__aeabi_fdiv
 407 0074 031C     		add	r3, r0, #0
 408 0076 181C     		add	r0, r3, #0
 409 0078 FFF7FEFF 		bl	__aeabi_f2uiz
 410 007c 031C     		mov	r3, r0
 411 007e 9BB2     		uxth	r3, r3
 412 0080 0420     		mov	r0, #4
 413 0082 191C     		mov	r1, r3
 414 0084 FFF7FEFF 		bl	inv_set_odr
 415 0088 021C     		mov	r2, r0
 416 008a FB68     		ldr	r3, [r7, #12]
 417 008c 1343     		orr	r3, r2
 418 008e FB60     		str	r3, [r7, #12]
 419              	.L6:
 119:.\invn.c      ****           if (hal.report & PRINT_RAW_GYRO)
 420              		.loc 1 119 0
 421 0090 BB4B     		ldr	r3, .L26+4
 422 0092 1B68     		ldr	r3, [r3]
 423 0094 0422     		mov	r2, #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 11


 424 0096 1340     		and	r3, r2
 425 0098 18D0     		beq	.L7
 120:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GYROSCOPE_UNCALIBRATED, (unsigned short)(base_
 426              		.loc 1 120 0
 427 009a 0A23     		mov	r3, #10
 428 009c FB18     		add	r3, r7, r3
 429 009e 1B88     		ldrh	r3, [r3]
 430 00a0 181C     		mov	r0, r3
 431 00a2 FFF7FEFF 		bl	__aeabi_i2f
 432 00a6 031C     		add	r3, r0, #0
 433 00a8 181C     		add	r0, r3, #0
 434 00aa 7968     		ldr	r1, [r7, #4]
 435 00ac FFF7FEFF 		bl	__aeabi_fdiv
 436 00b0 031C     		add	r3, r0, #0
 437 00b2 181C     		add	r0, r3, #0
 438 00b4 FFF7FEFF 		bl	__aeabi_f2uiz
 439 00b8 031C     		mov	r3, r0
 440 00ba 9BB2     		uxth	r3, r3
 441 00bc 1020     		mov	r0, #16
 442 00be 191C     		mov	r1, r3
 443 00c0 FFF7FEFF 		bl	inv_set_odr
 444 00c4 021C     		mov	r2, r0
 445 00c6 FB68     		ldr	r3, [r7, #12]
 446 00c8 1343     		orr	r3, r2
 447 00ca FB60     		str	r3, [r7, #12]
 448              	.L7:
 121:.\invn.c      ****           if (hal.report & PRINT_GRV)
 449              		.loc 1 121 0
 450 00cc AC4B     		ldr	r3, .L26+4
 451 00ce 1B68     		ldr	r3, [r3]
 452 00d0 4022     		mov	r2, #64
 453 00d2 1340     		and	r3, r2
 454 00d4 18D0     		beq	.L8
 122:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GAME_ROTATION_VECTOR, (unsigned short)(base_ra
 455              		.loc 1 122 0
 456 00d6 0A23     		mov	r3, #10
 457 00d8 FB18     		add	r3, r7, r3
 458 00da 1B88     		ldrh	r3, [r3]
 459 00dc 181C     		mov	r0, r3
 460 00de FFF7FEFF 		bl	__aeabi_i2f
 461 00e2 031C     		add	r3, r0, #0
 462 00e4 181C     		add	r0, r3, #0
 463 00e6 7968     		ldr	r1, [r7, #4]
 464 00e8 FFF7FEFF 		bl	__aeabi_fdiv
 465 00ec 031C     		add	r3, r0, #0
 466 00ee 181C     		add	r0, r3, #0
 467 00f0 FFF7FEFF 		bl	__aeabi_f2uiz
 468 00f4 031C     		mov	r3, r0
 469 00f6 9BB2     		uxth	r3, r3
 470 00f8 0F20     		mov	r0, #15
 471 00fa 191C     		mov	r1, r3
 472 00fc FFF7FEFF 		bl	inv_set_odr
 473 0100 021C     		mov	r2, r0
 474 0102 FB68     		ldr	r3, [r7, #12]
 475 0104 1343     		orr	r3, r2
 476 0106 FB60     		str	r3, [r7, #12]
 477              	.L8:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 12


 123:.\invn.c      ****           if (hal.report & PRINT_CUBE_GRV)
 478              		.loc 1 123 0
 479 0108 9D4B     		ldr	r3, .L26+4
 480 010a 1A68     		ldr	r2, [r3]
 481 010c 8023     		mov	r3, #128
 482 010e 5B02     		lsl	r3, r3, #9
 483 0110 1340     		and	r3, r2
 484 0112 18D0     		beq	.L9
 124:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GAME_ROTATION_VECTOR, (unsigned short)(base_ra
 485              		.loc 1 124 0
 486 0114 0A23     		mov	r3, #10
 487 0116 FB18     		add	r3, r7, r3
 488 0118 1B88     		ldrh	r3, [r3]
 489 011a 181C     		mov	r0, r3
 490 011c FFF7FEFF 		bl	__aeabi_i2f
 491 0120 031C     		add	r3, r0, #0
 492 0122 181C     		add	r0, r3, #0
 493 0124 7968     		ldr	r1, [r7, #4]
 494 0126 FFF7FEFF 		bl	__aeabi_fdiv
 495 012a 031C     		add	r3, r0, #0
 496 012c 181C     		add	r0, r3, #0
 497 012e FFF7FEFF 		bl	__aeabi_f2uiz
 498 0132 031C     		mov	r3, r0
 499 0134 9BB2     		uxth	r3, r3
 500 0136 0F20     		mov	r0, #15
 501 0138 191C     		mov	r1, r3
 502 013a FFF7FEFF 		bl	inv_set_odr
 503 013e 021C     		mov	r2, r0
 504 0140 FB68     		ldr	r3, [r7, #12]
 505 0142 1343     		orr	r3, r2
 506 0144 FB60     		str	r3, [r7, #12]
 507              	.L9:
 125:.\invn.c      ****           if (hal.report & PRINT_STEP_DETECTOR)
 508              		.loc 1 125 0
 509 0146 8E4B     		ldr	r3, .L26+4
 510 0148 1A68     		ldr	r2, [r3]
 511 014a 8023     		mov	r3, #128
 512 014c 1B01     		lsl	r3, r3, #4
 513 014e 1340     		and	r3, r2
 514 0150 18D0     		beq	.L10
 126:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_STEP_DETECTOR, (unsigned short)(base_rate / ra
 515              		.loc 1 126 0
 516 0152 0A23     		mov	r3, #10
 517 0154 FB18     		add	r3, r7, r3
 518 0156 1B88     		ldrh	r3, [r3]
 519 0158 181C     		mov	r0, r3
 520 015a FFF7FEFF 		bl	__aeabi_i2f
 521 015e 031C     		add	r3, r0, #0
 522 0160 181C     		add	r0, r3, #0
 523 0162 7968     		ldr	r1, [r7, #4]
 524 0164 FFF7FEFF 		bl	__aeabi_fdiv
 525 0168 031C     		add	r3, r0, #0
 526 016a 181C     		add	r0, r3, #0
 527 016c FFF7FEFF 		bl	__aeabi_f2uiz
 528 0170 031C     		mov	r3, r0
 529 0172 9BB2     		uxth	r3, r3
 530 0174 1220     		mov	r0, #18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 13


 531 0176 191C     		mov	r1, r3
 532 0178 FFF7FEFF 		bl	inv_set_odr
 533 017c 021C     		mov	r2, r0
 534 017e FB68     		ldr	r3, [r7, #12]
 535 0180 1343     		orr	r3, r2
 536 0182 FB60     		str	r3, [r7, #12]
 537              	.L10:
 127:.\invn.c      ****           if (hal.report & PRINT_SMD)
 538              		.loc 1 127 0
 539 0184 7E4B     		ldr	r3, .L26+4
 540 0186 1A68     		ldr	r2, [r3]
 541 0188 8023     		mov	r3, #128
 542 018a 5B01     		lsl	r3, r3, #5
 543 018c 1340     		and	r3, r2
 544 018e 18D0     		beq	.L11
 128:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_WAKEUP_SIGNIFICANT_MOTION, (unsigned short)(ba
 545              		.loc 1 128 0
 546 0190 0A23     		mov	r3, #10
 547 0192 FB18     		add	r3, r7, r3
 548 0194 1B88     		ldrh	r3, [r3]
 549 0196 181C     		mov	r0, r3
 550 0198 FFF7FEFF 		bl	__aeabi_i2f
 551 019c 031C     		add	r3, r0, #0
 552 019e 181C     		add	r0, r3, #0
 553 01a0 7968     		ldr	r1, [r7, #4]
 554 01a2 FFF7FEFF 		bl	__aeabi_fdiv
 555 01a6 031C     		add	r3, r0, #0
 556 01a8 181C     		add	r0, r3, #0
 557 01aa FFF7FEFF 		bl	__aeabi_f2uiz
 558 01ae 031C     		mov	r3, r0
 559 01b0 9BB2     		uxth	r3, r3
 560 01b2 1120     		mov	r0, #17
 561 01b4 191C     		mov	r1, r3
 562 01b6 FFF7FEFF 		bl	inv_set_odr
 563 01ba 021C     		mov	r2, r0
 564 01bc FB68     		ldr	r3, [r7, #12]
 565 01be 1343     		orr	r3, r2
 566 01c0 FB60     		str	r3, [r7, #12]
 567              	.L11:
 129:.\invn.c      ****           if (hal.report & PRINT_STEP_COUNTER)
 568              		.loc 1 129 0
 569 01c2 6F4B     		ldr	r3, .L26+4
 570 01c4 1A68     		ldr	r2, [r3]
 571 01c6 8023     		mov	r3, #128
 572 01c8 DB00     		lsl	r3, r3, #3
 573 01ca 1340     		and	r3, r2
 574 01cc 18D0     		beq	.L12
 130:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_STEP_COUNTER, (unsigned short)(base_rate / rat
 575              		.loc 1 130 0
 576 01ce 0A23     		mov	r3, #10
 577 01d0 FB18     		add	r3, r7, r3
 578 01d2 1B88     		ldrh	r3, [r3]
 579 01d4 181C     		mov	r0, r3
 580 01d6 FFF7FEFF 		bl	__aeabi_i2f
 581 01da 031C     		add	r3, r0, #0
 582 01dc 181C     		add	r0, r3, #0
 583 01de 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 14


 584 01e0 FFF7FEFF 		bl	__aeabi_fdiv
 585 01e4 031C     		add	r3, r0, #0
 586 01e6 181C     		add	r0, r3, #0
 587 01e8 FFF7FEFF 		bl	__aeabi_f2uiz
 588 01ec 031C     		mov	r3, r0
 589 01ee 9BB2     		uxth	r3, r3
 590 01f0 1320     		mov	r0, #19
 591 01f2 191C     		mov	r1, r3
 592 01f4 FFF7FEFF 		bl	inv_set_odr
 593 01f8 021C     		mov	r2, r0
 594 01fa FB68     		ldr	r3, [r7, #12]
 595 01fc 1343     		orr	r3, r2
 596 01fe FB60     		str	r3, [r7, #12]
 597              	.L12:
 131:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20648)
 132:.\invn.c      ****           if (hal.report & PRINT_LINEAR_ACCEL)
 598              		.loc 1 132 0
 599 0200 5F4B     		ldr	r3, .L26+4
 600 0202 1A68     		ldr	r2, [r3]
 601 0204 8023     		mov	r3, #128
 602 0206 5B00     		lsl	r3, r3, #1
 603 0208 1340     		and	r3, r2
 604 020a 18D0     		beq	.L13
 133:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_LINEAR_ACCELERATION, (unsigned short)(base_rat
 605              		.loc 1 133 0
 606 020c 0A23     		mov	r3, #10
 607 020e FB18     		add	r3, r7, r3
 608 0210 1B88     		ldrh	r3, [r3]
 609 0212 181C     		mov	r0, r3
 610 0214 FFF7FEFF 		bl	__aeabi_i2f
 611 0218 031C     		add	r3, r0, #0
 612 021a 181C     		add	r0, r3, #0
 613 021c 7968     		ldr	r1, [r7, #4]
 614 021e FFF7FEFF 		bl	__aeabi_fdiv
 615 0222 031C     		add	r3, r0, #0
 616 0224 181C     		add	r0, r3, #0
 617 0226 FFF7FEFF 		bl	__aeabi_f2uiz
 618 022a 031C     		mov	r3, r0
 619 022c 9BB2     		uxth	r3, r3
 620 022e 0A20     		mov	r0, #10
 621 0230 191C     		mov	r1, r3
 622 0232 FFF7FEFF 		bl	inv_set_odr
 623 0236 021C     		mov	r2, r0
 624 0238 FB68     		ldr	r3, [r7, #12]
 625 023a 1343     		orr	r3, r2
 626 023c FB60     		str	r3, [r7, #12]
 627              	.L13:
 134:.\invn.c      ****           if (hal.report & PRINT_GRAVITY)
 628              		.loc 1 134 0
 629 023e 504B     		ldr	r3, .L26+4
 630 0240 1A68     		ldr	r2, [r3]
 631 0242 8023     		mov	r3, #128
 632 0244 9B00     		lsl	r3, r3, #2
 633 0246 1340     		and	r3, r2
 634 0248 18D0     		beq	.L14
 135:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GRAVITY, (unsigned short)(base_rate / rate));
 635              		.loc 1 135 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 15


 636 024a 0A23     		mov	r3, #10
 637 024c FB18     		add	r3, r7, r3
 638 024e 1B88     		ldrh	r3, [r3]
 639 0250 181C     		mov	r0, r3
 640 0252 FFF7FEFF 		bl	__aeabi_i2f
 641 0256 031C     		add	r3, r0, #0
 642 0258 181C     		add	r0, r3, #0
 643 025a 7968     		ldr	r1, [r7, #4]
 644 025c FFF7FEFF 		bl	__aeabi_fdiv
 645 0260 031C     		add	r3, r0, #0
 646 0262 181C     		add	r0, r3, #0
 647 0264 FFF7FEFF 		bl	__aeabi_f2uiz
 648 0268 031C     		mov	r3, r0
 649 026a 9BB2     		uxth	r3, r3
 650 026c 0920     		mov	r0, #9
 651 026e 191C     		mov	r1, r3
 652 0270 FFF7FEFF 		bl	inv_set_odr
 653 0274 021C     		mov	r2, r0
 654 0276 FB68     		ldr	r3, [r7, #12]
 655 0278 1343     		orr	r3, r2
 656 027a FB60     		str	r3, [r7, #12]
 657              	.L14:
 136:.\invn.c      ****           if (hal.report & PRINT_COMPASS)
 658              		.loc 1 136 0
 659 027c 404B     		ldr	r3, .L26+4
 660 027e 1B68     		ldr	r3, [r3]
 661 0280 0822     		mov	r2, #8
 662 0282 1340     		and	r3, r2
 663 0284 18D0     		beq	.L15
 137:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GEOMAGNETIC_FIELD, (unsigned short)(base_rate 
 664              		.loc 1 137 0
 665 0286 0A23     		mov	r3, #10
 666 0288 FB18     		add	r3, r7, r3
 667 028a 1B88     		ldrh	r3, [r3]
 668 028c 181C     		mov	r0, r3
 669 028e FFF7FEFF 		bl	__aeabi_i2f
 670 0292 031C     		add	r3, r0, #0
 671 0294 181C     		add	r0, r3, #0
 672 0296 7968     		ldr	r1, [r7, #4]
 673 0298 FFF7FEFF 		bl	__aeabi_fdiv
 674 029c 031C     		add	r3, r0, #0
 675 029e 181C     		add	r0, r3, #0
 676 02a0 FFF7FEFF 		bl	__aeabi_f2uiz
 677 02a4 031C     		mov	r3, r0
 678 02a6 9BB2     		uxth	r3, r3
 679 02a8 0220     		mov	r0, #2
 680 02aa 191C     		mov	r1, r3
 681 02ac FFF7FEFF 		bl	inv_set_odr
 682 02b0 021C     		mov	r2, r0
 683 02b2 FB68     		ldr	r3, [r7, #12]
 684 02b4 1343     		orr	r3, r2
 685 02b6 FB60     		str	r3, [r7, #12]
 686              	.L15:
 138:.\invn.c      ****           if (hal.report & PRINT_RAW_COMPASS)
 687              		.loc 1 138 0
 688 02b8 314B     		ldr	r3, .L26+4
 689 02ba 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 16


 690 02bc 1022     		mov	r2, #16
 691 02be 1340     		and	r3, r2
 692 02c0 18D0     		beq	.L16
 139:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_MAGNETIC_FIELD_UNCALIBRATED, (unsigned short)(
 693              		.loc 1 139 0
 694 02c2 0A23     		mov	r3, #10
 695 02c4 FB18     		add	r3, r7, r3
 696 02c6 1B88     		ldrh	r3, [r3]
 697 02c8 181C     		mov	r0, r3
 698 02ca FFF7FEFF 		bl	__aeabi_i2f
 699 02ce 031C     		add	r3, r0, #0
 700 02d0 181C     		add	r0, r3, #0
 701 02d2 7968     		ldr	r1, [r7, #4]
 702 02d4 FFF7FEFF 		bl	__aeabi_fdiv
 703 02d8 031C     		add	r3, r0, #0
 704 02da 181C     		add	r0, r3, #0
 705 02dc FFF7FEFF 		bl	__aeabi_f2uiz
 706 02e0 031C     		mov	r3, r0
 707 02e2 9BB2     		uxth	r3, r3
 708 02e4 0E20     		mov	r0, #14
 709 02e6 191C     		mov	r1, r3
 710 02e8 FFF7FEFF 		bl	inv_set_odr
 711 02ec 021C     		mov	r2, r0
 712 02ee FB68     		ldr	r3, [r7, #12]
 713 02f0 1343     		orr	r3, r2
 714 02f2 FB60     		str	r3, [r7, #12]
 715              	.L16:
 140:.\invn.c      ****           if (hal.report & PRINT_RV)
 716              		.loc 1 140 0
 717 02f4 224B     		ldr	r3, .L26+4
 718 02f6 1B68     		ldr	r3, [r3]
 719 02f8 2022     		mov	r2, #32
 720 02fa 1340     		and	r3, r2
 721 02fc 18D0     		beq	.L17
 141:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_ROTATION_VECTOR, (unsigned short)(base_rate / 
 722              		.loc 1 141 0
 723 02fe 0A23     		mov	r3, #10
 724 0300 FB18     		add	r3, r7, r3
 725 0302 1B88     		ldrh	r3, [r3]
 726 0304 181C     		mov	r0, r3
 727 0306 FFF7FEFF 		bl	__aeabi_i2f
 728 030a 031C     		add	r3, r0, #0
 729 030c 181C     		add	r0, r3, #0
 730 030e 7968     		ldr	r1, [r7, #4]
 731 0310 FFF7FEFF 		bl	__aeabi_fdiv
 732 0314 031C     		add	r3, r0, #0
 733 0316 181C     		add	r0, r3, #0
 734 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 735 031c 031C     		mov	r3, r0
 736 031e 9BB2     		uxth	r3, r3
 737 0320 0B20     		mov	r0, #11
 738 0322 191C     		mov	r1, r3
 739 0324 FFF7FEFF 		bl	inv_set_odr
 740 0328 021C     		mov	r2, r0
 741 032a FB68     		ldr	r3, [r7, #12]
 742 032c 1343     		orr	r3, r2
 743 032e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 17


 744              	.L17:
 142:.\invn.c      ****           if (hal.report & PRINT_GEOMAG)
 745              		.loc 1 142 0
 746 0330 134B     		ldr	r3, .L26+4
 747 0332 1A68     		ldr	r2, [r3]
 748 0334 8023     		mov	r3, #128
 749 0336 9B01     		lsl	r3, r3, #6
 750 0338 1340     		and	r3, r2
 751 033a 18D0     		beq	.L18
 143:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GEOMAGNETIC_ROTATION_VECTOR, (unsigned short)(
 752              		.loc 1 143 0
 753 033c 0A23     		mov	r3, #10
 754 033e FB18     		add	r3, r7, r3
 755 0340 1B88     		ldrh	r3, [r3]
 756 0342 181C     		mov	r0, r3
 757 0344 FFF7FEFF 		bl	__aeabi_i2f
 758 0348 031C     		add	r3, r0, #0
 759 034a 181C     		add	r0, r3, #0
 760 034c 7968     		ldr	r1, [r7, #4]
 761 034e FFF7FEFF 		bl	__aeabi_fdiv
 762 0352 031C     		add	r3, r0, #0
 763 0354 181C     		add	r0, r3, #0
 764 0356 FFF7FEFF 		bl	__aeabi_f2uiz
 765 035a 031C     		mov	r3, r0
 766 035c 9BB2     		uxth	r3, r3
 767 035e 1420     		mov	r0, #20
 768 0360 191C     		mov	r1, r3
 769 0362 FFF7FEFF 		bl	inv_set_odr
 770 0366 021C     		mov	r2, r0
 771 0368 FB68     		ldr	r3, [r7, #12]
 772 036a 1343     		orr	r3, r2
 773 036c FB60     		str	r3, [r7, #12]
 774              	.L18:
 144:.\invn.c      ****           if (hal.report & PRINT_BAC)
 775              		.loc 1 144 0
 776 036e 044B     		ldr	r3, .L26+4
 777 0370 1A68     		ldr	r2, [r3]
 778 0372 8023     		mov	r3, #128
 779 0374 5B03     		lsl	r3, r3, #13
 780 0376 1340     		and	r3, r2
 781 0378 1DD0     		beq	.L19
 782 037a 03E0     		b	.L27
 783              	.L28:
 784              		.align	2
 785              	.L26:
 786 037c 65040000 		.word	1125
 787 0380 00000000 		.word	hal
 788              	.L27:
 145:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_ACTIVITY_CLASSIFICATON, (unsigned short)(base_
 789              		.loc 1 145 0
 790 0384 0A23     		mov	r3, #10
 791 0386 FB18     		add	r3, r7, r3
 792 0388 1B88     		ldrh	r3, [r3]
 793 038a 181C     		mov	r0, r3
 794 038c FFF7FEFF 		bl	__aeabi_i2f
 795 0390 031C     		add	r3, r0, #0
 796 0392 181C     		add	r0, r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 18


 797 0394 7968     		ldr	r1, [r7, #4]
 798 0396 FFF7FEFF 		bl	__aeabi_fdiv
 799 039a 031C     		add	r3, r0, #0
 800 039c 181C     		add	r0, r3, #0
 801 039e FFF7FEFF 		bl	__aeabi_f2uiz
 802 03a2 031C     		mov	r3, r0
 803 03a4 9BB2     		uxth	r3, r3
 804 03a6 2D20     		mov	r0, #45
 805 03a8 191C     		mov	r1, r3
 806 03aa FFF7FEFF 		bl	inv_set_odr
 807 03ae 021C     		mov	r2, r0
 808 03b0 FB68     		ldr	r3, [r7, #12]
 809 03b2 1343     		orr	r3, r2
 810 03b4 FB60     		str	r3, [r7, #12]
 811              	.L19:
 146:.\invn.c      ****           if (hal.report & PRINT_TILT)
 812              		.loc 1 146 0
 813 03b6 504B     		ldr	r3, .L29
 814 03b8 1A68     		ldr	r2, [r3]
 815 03ba 8023     		mov	r3, #128
 816 03bc DB03     		lsl	r3, r3, #15
 817 03be 1340     		and	r3, r2
 818 03c0 18D0     		beq	.L20
 147:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_WAKEUP_TILT_DETECTOR, (unsigned short)(base_ra
 819              		.loc 1 147 0
 820 03c2 0A23     		mov	r3, #10
 821 03c4 FB18     		add	r3, r7, r3
 822 03c6 1B88     		ldrh	r3, [r3]
 823 03c8 181C     		mov	r0, r3
 824 03ca FFF7FEFF 		bl	__aeabi_i2f
 825 03ce 031C     		add	r3, r0, #0
 826 03d0 181C     		add	r0, r3, #0
 827 03d2 7968     		ldr	r1, [r7, #4]
 828 03d4 FFF7FEFF 		bl	__aeabi_fdiv
 829 03d8 031C     		add	r3, r0, #0
 830 03da 181C     		add	r0, r3, #0
 831 03dc FFF7FEFF 		bl	__aeabi_f2uiz
 832 03e0 031C     		mov	r3, r0
 833 03e2 9BB2     		uxth	r3, r3
 834 03e4 2920     		mov	r0, #41
 835 03e6 191C     		mov	r1, r3
 836 03e8 FFF7FEFF 		bl	inv_set_odr
 837 03ec 021C     		mov	r2, r0
 838 03ee FB68     		ldr	r3, [r7, #12]
 839 03f0 1343     		orr	r3, r2
 840 03f2 FB60     		str	r3, [r7, #12]
 841              	.L20:
 148:.\invn.c      ****           if (hal.report & PRINT_FLIP_PICKUP)
 842              		.loc 1 148 0
 843 03f4 404B     		ldr	r3, .L29
 844 03f6 1A68     		ldr	r2, [r3]
 845 03f8 8023     		mov	r3, #128
 846 03fa 9B03     		lsl	r3, r3, #14
 847 03fc 1340     		and	r3, r2
 848 03fe 18D0     		beq	.L21
 149:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_FLIP_PICKUP, (unsigned short)(base_rate / rate
 849              		.loc 1 149 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 19


 850 0400 0A23     		mov	r3, #10
 851 0402 FB18     		add	r3, r7, r3
 852 0404 1B88     		ldrh	r3, [r3]
 853 0406 181C     		mov	r0, r3
 854 0408 FFF7FEFF 		bl	__aeabi_i2f
 855 040c 031C     		add	r3, r0, #0
 856 040e 181C     		add	r0, r3, #0
 857 0410 7968     		ldr	r1, [r7, #4]
 858 0412 FFF7FEFF 		bl	__aeabi_fdiv
 859 0416 031C     		add	r3, r0, #0
 860 0418 181C     		add	r0, r3, #0
 861 041a FFF7FEFF 		bl	__aeabi_f2uiz
 862 041e 031C     		mov	r3, r0
 863 0420 9BB2     		uxth	r3, r3
 864 0422 2C20     		mov	r0, #44
 865 0424 191C     		mov	r1, r3
 866 0426 FFF7FEFF 		bl	inv_set_odr
 867 042a 021C     		mov	r2, r0
 868 042c FB68     		ldr	r3, [r7, #12]
 869 042e 1343     		orr	r3, r2
 870 0430 FB60     		str	r3, [r7, #12]
 871              	.L21:
 150:.\invn.c      ****           if (hal.report & PRINT_CUBE_RV)
 872              		.loc 1 150 0
 873 0432 314B     		ldr	r3, .L29
 874 0434 1A68     		ldr	r2, [r3]
 875 0436 8023     		mov	r3, #128
 876 0438 9B02     		lsl	r3, r3, #10
 877 043a 1340     		and	r3, r2
 878 043c 18D0     		beq	.L22
 151:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_ROTATION_VECTOR, (unsigned short)(base_rate / 
 879              		.loc 1 151 0
 880 043e 0A23     		mov	r3, #10
 881 0440 FB18     		add	r3, r7, r3
 882 0442 1B88     		ldrh	r3, [r3]
 883 0444 181C     		mov	r0, r3
 884 0446 FFF7FEFF 		bl	__aeabi_i2f
 885 044a 031C     		add	r3, r0, #0
 886 044c 181C     		add	r0, r3, #0
 887 044e 7968     		ldr	r1, [r7, #4]
 888 0450 FFF7FEFF 		bl	__aeabi_fdiv
 889 0454 031C     		add	r3, r0, #0
 890 0456 181C     		add	r0, r3, #0
 891 0458 FFF7FEFF 		bl	__aeabi_f2uiz
 892 045c 031C     		mov	r3, r0
 893 045e 9BB2     		uxth	r3, r3
 894 0460 0B20     		mov	r0, #11
 895 0462 191C     		mov	r1, r3
 896 0464 FFF7FEFF 		bl	inv_set_odr
 897 0468 021C     		mov	r2, r0
 898 046a FB68     		ldr	r3, [r7, #12]
 899 046c 1343     		orr	r3, r2
 900 046e FB60     		str	r3, [r7, #12]
 901              	.L22:
 152:.\invn.c      ****           if (hal.report & PRINT_CUBE_GEOMAG)
 902              		.loc 1 152 0
 903 0470 214B     		ldr	r3, .L29
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 20


 904 0472 1A68     		ldr	r2, [r3]
 905 0474 8023     		mov	r3, #128
 906 0476 DB02     		lsl	r3, r3, #11
 907 0478 1340     		and	r3, r2
 908 047a 18D0     		beq	.L23
 153:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_GEOMAGNETIC_ROTATION_VECTOR, (unsigned short)(
 909              		.loc 1 153 0
 910 047c 0A23     		mov	r3, #10
 911 047e FB18     		add	r3, r7, r3
 912 0480 1B88     		ldrh	r3, [r3]
 913 0482 181C     		mov	r0, r3
 914 0484 FFF7FEFF 		bl	__aeabi_i2f
 915 0488 031C     		add	r3, r0, #0
 916 048a 181C     		add	r0, r3, #0
 917 048c 7968     		ldr	r1, [r7, #4]
 918 048e FFF7FEFF 		bl	__aeabi_fdiv
 919 0492 031C     		add	r3, r0, #0
 920 0494 181C     		add	r0, r3, #0
 921 0496 FFF7FEFF 		bl	__aeabi_f2uiz
 922 049a 031C     		mov	r3, r0
 923 049c 9BB2     		uxth	r3, r3
 924 049e 1420     		mov	r0, #20
 925 04a0 191C     		mov	r1, r3
 926 04a2 FFF7FEFF 		bl	inv_set_odr
 927 04a6 021C     		mov	r2, r0
 928 04a8 FB68     		ldr	r3, [r7, #12]
 929 04aa 1343     		orr	r3, r2
 930 04ac FB60     		str	r3, [r7, #12]
 931              	.L23:
 154:.\invn.c      ****           if (hal.report & PRINT_ORIENT)
 932              		.loc 1 154 0
 933 04ae 124B     		ldr	r3, .L29
 934 04b0 1B68     		ldr	r3, [r3]
 935 04b2 8022     		mov	r2, #128
 936 04b4 1340     		and	r3, r2
 937 04b6 18D0     		beq	.L24
 155:.\invn.c      ****                 result |= inv_set_odr(ANDROID_SENSOR_ORIENTATION, (unsigned short)(base_rate / rate
 938              		.loc 1 155 0
 939 04b8 0A23     		mov	r3, #10
 940 04ba FB18     		add	r3, r7, r3
 941 04bc 1B88     		ldrh	r3, [r3]
 942 04be 181C     		mov	r0, r3
 943 04c0 FFF7FEFF 		bl	__aeabi_i2f
 944 04c4 031C     		add	r3, r0, #0
 945 04c6 181C     		add	r0, r3, #0
 946 04c8 7968     		ldr	r1, [r7, #4]
 947 04ca FFF7FEFF 		bl	__aeabi_fdiv
 948 04ce 031C     		add	r3, r0, #0
 949 04d0 181C     		add	r0, r3, #0
 950 04d2 FFF7FEFF 		bl	__aeabi_f2uiz
 951 04d6 031C     		mov	r3, r0
 952 04d8 9BB2     		uxth	r3, r3
 953 04da 0320     		mov	r0, #3
 954 04dc 191C     		mov	r1, r3
 955 04de FFF7FEFF 		bl	inv_set_odr
 956 04e2 021C     		mov	r2, r0
 957 04e4 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 21


 958 04e6 1343     		orr	r3, r2
 959 04e8 FB60     		str	r3, [r7, #12]
 960              	.L24:
 156:.\invn.c      **** #endif
 157:.\invn.c      ****           dmp_reset_odr_counters();
 961              		.loc 1 157 0
 962 04ea FFF7FEFF 		bl	dmp_reset_odr_counters
 158:.\invn.c      ****    return result;
 963              		.loc 1 158 0
 964 04ee FB68     		ldr	r3, [r7, #12]
 159:.\invn.c      **** }
 965              		.loc 1 159 0
 966 04f0 181C     		mov	r0, r3
 967 04f2 BD46     		mov	sp, r7
 968 04f4 04B0     		add	sp, sp, #16
 969              		@ sp needed
 970 04f6 80BD     		pop	{r7, pc}
 971              	.L30:
 972              		.align	2
 973              	.L29:
 974 04f8 00000000 		.word	hal
 975              		.cfi_endproc
 976              	.LFE42:
 977              		.size	set_output_rates, .-set_output_rates
 978              		.global	__aeabi_idiv
 979              		.section	.rodata
 980 0003 00       		.align	2
 981              	.LC6:
 982 0004 50415353 		.ascii	"PASS\000"
 982      00
 983 0009 000000   		.align	2
 984              	.LC8:
 985 000c 4641494C 		.ascii	"FAIL\000"
 985      00
 986              		.section	.text.handle_char_input,"ax",%progbits
 987              		.align	2
 988              		.global	handle_char_input
 989              		.code	16
 990              		.thumb_func
 991              		.type	handle_char_input, %function
 992              	handle_char_input:
 993              	.LFB43:
 160:.\invn.c      **** 
 161:.\invn.c      **** int handle_char_input(char c)
 162:.\invn.c      **** {
 994              		.loc 1 162 0
 995              		.cfi_startproc
 996 0000 80B5     		push	{r7, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 7, -8
 999              		.cfi_offset 14, -4
 1000 0002 92B0     		sub	sp, sp, #72
 1001              		.cfi_def_cfa_offset 80
 1002 0004 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
 1004 0006 021C     		mov	r2, r0
 1005 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 22


 1006 000a 1A70     		strb	r2, [r3]
 163:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 164:.\invn.c      ****         inv_error_t result;
 165:.\invn.c      **** #endif
 166:.\invn.c      **** 
 167:.\invn.c      **** 	switch (c)
 1007              		.loc 1 167 0
 1008 000c FB1D     		add	r3, r7, #7
 1009 000e 1B78     		ldrb	r3, [r3]
 1010 0010 303B     		sub	r3, r3, #48
 1011 0012 462B     		cmp	r3, #70
 1012 0014 01D9     		bls	.LCB687
 1013 0016 00F0D7FB 		bl	.L94	@far jump
 1014              	.LCB687:
 1015 001a 9A00     		lsl	r2, r3, #2
 1016 001c DC4B     		ldr	r3, .L95
 1017 001e D318     		add	r3, r2, r3
 1018 0020 1B68     		ldr	r3, [r3]
 1019 0022 9F46     		mov	pc, r3
 1020              		.section	.rodata
 1021 0011 000000   		.align	2
 1022              	.L34:
 1023 0014 82040000 		.word	.L33
 1024 0018 96040000 		.word	.L35
 1025 001c A6040000 		.word	.L36
 1026 0020 B6040000 		.word	.L37
 1027 0024 C6040000 		.word	.L38
 1028 0028 D6040000 		.word	.L39
 1029 002c E6040000 		.word	.L40
 1030 0030 F6040000 		.word	.L41
 1031 0034 06050000 		.word	.L42
 1032 0038 16050000 		.word	.L43
 1033 003c C8070000 		.word	.L94
 1034 0040 C8070000 		.word	.L94
 1035 0044 C8070000 		.word	.L94
 1036 0048 C8070000 		.word	.L94
 1037 004c C8070000 		.word	.L94
 1038 0050 C8070000 		.word	.L94
 1039 0054 84050000 		.word	.L44
 1040 0058 C8070000 		.word	.L94
 1041 005c C8070000 		.word	.L94
 1042 0060 4E010000 		.word	.L45
 1043 0064 C8070000 		.word	.L94
 1044 0068 C8070000 		.word	.L94
 1045 006c 3C040000 		.word	.L46
 1046 0070 B0000000 		.word	.L47
 1047 0074 C8070000 		.word	.L94
 1048 0078 C8070000 		.word	.L94
 1049 007c C8070000 		.word	.L94
 1050 0080 C8070000 		.word	.L94
 1051 0084 C8070000 		.word	.L94
 1052 0088 C8070000 		.word	.L94
 1053 008c C8070000 		.word	.L94
 1054 0090 C8070000 		.word	.L94
 1055 0094 C8070000 		.word	.L94
 1056 0098 3C050000 		.word	.L48
 1057 009c 06030000 		.word	.L49
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 23


 1058 00a0 C8070000 		.word	.L94
 1059 00a4 F6030000 		.word	.L50
 1060 00a8 C8070000 		.word	.L94
 1061 00ac C8070000 		.word	.L94
 1062 00b0 C8070000 		.word	.L94
 1063 00b4 C8070000 		.word	.L94
 1064 00b8 C8070000 		.word	.L94
 1065 00bc C8070000 		.word	.L94
 1066 00c0 C8070000 		.word	.L94
 1067 00c4 C8070000 		.word	.L94
 1068 00c8 C8070000 		.word	.L94
 1069 00cc C8070000 		.word	.L94
 1070 00d0 C8070000 		.word	.L94
 1071 00d4 C8070000 		.word	.L94
 1072 00d8 24000000 		.word	.L51
 1073 00dc A0030000 		.word	.L52
 1074 00e0 F2000000 		.word	.L53
 1075 00e4 34020000 		.word	.L54
 1076 00e8 48030000 		.word	.L55
 1077 00ec C8070000 		.word	.L94
 1078 00f0 6A000000 		.word	.L56
 1079 00f4 C8070000 		.word	.L94
 1080 00f8 C8070000 		.word	.L94
 1081 00fc C8070000 		.word	.L94
 1082 0100 26050000 		.word	.L57
 1083 0104 14060000 		.word	.L58
 1084 0108 7A020000 		.word	.L59
 1085 010c C8070000 		.word	.L94
 1086 0110 5C060000 		.word	.L60
 1087 0114 C0020000 		.word	.L61
 1088 0118 EC010000 		.word	.L62
 1089 011c AA010000 		.word	.L63
 1090 0120 C8070000 		.word	.L94
 1091 0124 D0060000 		.word	.L64
 1092 0128 C8070000 		.word	.L94
 1093 012c CC050000 		.word	.L65
 1094              		.section	.text.handle_char_input
 1095              	.L51:
 168:.\invn.c      **** 	{
 169:.\invn.c      **** 	case 'a':
 170:.\invn.c      **** 		dmp_reset_fifo();
 1096              		.loc 1 170 0
 1097 0024 FFF7FEFF 		bl	dmp_reset_fifo
 171:.\invn.c      **** 		hal.report ^= PRINT_ACCEL;
 1098              		.loc 1 171 0
 1099 0028 DA4B     		ldr	r3, .L95+4
 1100 002a 1B68     		ldr	r3, [r3]
 1101 002c 0122     		mov	r2, #1
 1102 002e 5A40     		eor	r2, r3
 1103 0030 D84B     		ldr	r3, .L95+4
 1104 0032 1A60     		str	r2, [r3]
 172:.\invn.c      ****                 inv_enable_sensor(ANDROID_SENSOR_ACCELEROMETER, !!(hal.report & PRINT_ACCEL));
 1105              		.loc 1 172 0
 1106 0034 D74B     		ldr	r3, .L95+4
 1107 0036 1B68     		ldr	r3, [r3]
 1108 0038 0122     		mov	r2, #1
 1109 003a 1340     		and	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 24


 1110 003c 5A1E     		sub	r2, r3, #1
 1111 003e 9341     		sbc	r3, r3, r2
 1112 0040 DBB2     		uxtb	r3, r3
 1113 0042 0120     		mov	r0, #1
 1114 0044 191C     		mov	r1, r3
 1115 0046 FFF7FEFF 		bl	inv_enable_sensor
 173:.\invn.c      ****                 dmp_reset_odr_counters();
 1116              		.loc 1 173 0
 1117 004a FFF7FEFF 		bl	dmp_reset_odr_counters
 174:.\invn.c      ****                 if(hal.report & PRINT_ACCEL) set_output_rates(current_output_rate);
 1118              		.loc 1 174 0
 1119 004e D14B     		ldr	r3, .L95+4
 1120 0050 1B68     		ldr	r3, [r3]
 1121 0052 0122     		mov	r2, #1
 1122 0054 1340     		and	r3, r2
 1123 0056 06D0     		beq	.L66
 1124              		.loc 1 174 0 is_stmt 0 discriminator 1
 1125 0058 CF4B     		ldr	r3, .L95+8
 1126 005a 1B68     		ldr	r3, [r3]
 1127 005c 181C     		add	r0, r3, #0
 1128 005e FFF7FEFF 		bl	set_output_rates
 175:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "ACCEL....output toggled, now is: %s.\r\n", (hal.report & PRINT_A
 176:.\invn.c      **** 		break;
 1129              		.loc 1 176 0 is_stmt 1 discriminator 1
 1130 0062 00F0B2FB 		bl	.L67	@ far jump
 1131              	.L66:
 1132              		.loc 1 176 0 is_stmt 0
 1133 0066 00F0B0FB 		bl	.L67	@ far jump
 1134              	.L56:
 177:.\invn.c      **** 	case 'g':
 178:.\invn.c      **** 		dmp_reset_fifo();
 1135              		.loc 1 178 0 is_stmt 1
 1136 006a FFF7FEFF 		bl	dmp_reset_fifo
 179:.\invn.c      **** 		hal.report ^= PRINT_GYRO;
 1137              		.loc 1 179 0
 1138 006e C94B     		ldr	r3, .L95+4
 1139 0070 1B68     		ldr	r3, [r3]
 1140 0072 0222     		mov	r2, #2
 1141 0074 5A40     		eor	r2, r3
 1142 0076 C74B     		ldr	r3, .L95+4
 1143 0078 1A60     		str	r2, [r3]
 180:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GYROSCOPE, !!(hal.report & PRINT_GYRO));
 1144              		.loc 1 180 0
 1145 007a C64B     		ldr	r3, .L95+4
 1146 007c 1B68     		ldr	r3, [r3]
 1147 007e 0222     		mov	r2, #2
 1148 0080 1340     		and	r3, r2
 1149 0082 5A1E     		sub	r2, r3, #1
 1150 0084 9341     		sbc	r3, r3, r2
 1151 0086 DBB2     		uxtb	r3, r3
 1152 0088 0420     		mov	r0, #4
 1153 008a 191C     		mov	r1, r3
 1154 008c FFF7FEFF 		bl	inv_enable_sensor
 181:.\invn.c      ****                 dmp_reset_odr_counters();
 1155              		.loc 1 181 0
 1156 0090 FFF7FEFF 		bl	dmp_reset_odr_counters
 182:.\invn.c      ****                 if(hal.report & PRINT_GYRO) set_output_rates(current_output_rate);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 25


 1157              		.loc 1 182 0
 1158 0094 BF4B     		ldr	r3, .L95+4
 1159 0096 1B68     		ldr	r3, [r3]
 1160 0098 0222     		mov	r2, #2
 1161 009a 1340     		and	r3, r2
 1162 009c 06D0     		beq	.L68
 1163              		.loc 1 182 0 is_stmt 0 discriminator 1
 1164 009e BE4B     		ldr	r3, .L95+8
 1165 00a0 1B68     		ldr	r3, [r3]
 1166 00a2 181C     		add	r0, r3, #0
 1167 00a4 FFF7FEFF 		bl	set_output_rates
 183:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "GYRO....output toggled, now is: %s.\r\n", (hal.report & PRINT_GY
 184:.\invn.c      **** 		break;
 1168              		.loc 1 184 0 is_stmt 1 discriminator 1
 1169 00a8 00F08FFB 		bl	.L67	@ far jump
 1170              	.L68:
 1171              		.loc 1 184 0 is_stmt 0
 1172 00ac 00F08DFB 		bl	.L67	@ far jump
 1173              	.L47:
 185:.\invn.c      **** 	case 'G':
 186:.\invn.c      **** 		dmp_reset_fifo();
 1174              		.loc 1 186 0 is_stmt 1
 1175 00b0 FFF7FEFF 		bl	dmp_reset_fifo
 187:.\invn.c      **** 		hal.report ^= PRINT_RAW_GYRO;
 1176              		.loc 1 187 0
 1177 00b4 B74B     		ldr	r3, .L95+4
 1178 00b6 1B68     		ldr	r3, [r3]
 1179 00b8 0422     		mov	r2, #4
 1180 00ba 5A40     		eor	r2, r3
 1181 00bc B54B     		ldr	r3, .L95+4
 1182 00be 1A60     		str	r2, [r3]
 188:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GYROSCOPE_UNCALIBRATED, !!(hal.report & PRINT_RAW_GYRO));
 1183              		.loc 1 188 0
 1184 00c0 B44B     		ldr	r3, .L95+4
 1185 00c2 1B68     		ldr	r3, [r3]
 1186 00c4 0422     		mov	r2, #4
 1187 00c6 1340     		and	r3, r2
 1188 00c8 5A1E     		sub	r2, r3, #1
 1189 00ca 9341     		sbc	r3, r3, r2
 1190 00cc DBB2     		uxtb	r3, r3
 1191 00ce 1020     		mov	r0, #16
 1192 00d0 191C     		mov	r1, r3
 1193 00d2 FFF7FEFF 		bl	inv_enable_sensor
 189:.\invn.c      ****                 dmp_reset_odr_counters();
 1194              		.loc 1 189 0
 1195 00d6 FFF7FEFF 		bl	dmp_reset_odr_counters
 190:.\invn.c      ****                 if(hal.report & PRINT_RAW_GYRO) set_output_rates(current_output_rate);
 1196              		.loc 1 190 0
 1197 00da AE4B     		ldr	r3, .L95+4
 1198 00dc 1B68     		ldr	r3, [r3]
 1199 00de 0422     		mov	r2, #4
 1200 00e0 1340     		and	r3, r2
 1201 00e2 05D0     		beq	.L69
 1202              		.loc 1 190 0 is_stmt 0 discriminator 1
 1203 00e4 AC4B     		ldr	r3, .L95+8
 1204 00e6 1B68     		ldr	r3, [r3]
 1205 00e8 181C     		add	r0, r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 26


 1206 00ea FFF7FEFF 		bl	set_output_rates
 191:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "RAW GYRO....output toggled, now is: %s.\r\n", (hal.report & PRIN
 192:.\invn.c      **** 		break;
 1207              		.loc 1 192 0 is_stmt 1 discriminator 1
 1208 00ee 6CE3     		b	.L67
 1209              	.L69:
 1210              		.loc 1 192 0 is_stmt 0
 1211 00f0 6BE3     		b	.L67
 1212              	.L53:
 193:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 194:.\invn.c      ****         case 'c':
 195:.\invn.c      **** 		dmp_reset_fifo();
 1213              		.loc 1 195 0 is_stmt 1
 1214 00f2 FFF7FEFF 		bl	dmp_reset_fifo
 196:.\invn.c      **** 		hal.report ^= PRINT_COMPASS;
 1215              		.loc 1 196 0
 1216 00f6 A74B     		ldr	r3, .L95+4
 1217 00f8 1B68     		ldr	r3, [r3]
 1218 00fa 0822     		mov	r2, #8
 1219 00fc 5A40     		eor	r2, r3
 1220 00fe A54B     		ldr	r3, .L95+4
 1221 0100 1A60     		str	r2, [r3]
 197:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GEOMAGNETIC_FIELD, !!(hal.report & PRINT_COMPASS));
 1222              		.loc 1 197 0
 1223 0102 A44B     		ldr	r3, .L95+4
 1224 0104 1B68     		ldr	r3, [r3]
 1225 0106 0822     		mov	r2, #8
 1226 0108 1340     		and	r3, r2
 1227 010a 5A1E     		sub	r2, r3, #1
 1228 010c 9341     		sbc	r3, r3, r2
 1229 010e DBB2     		uxtb	r3, r3
 1230 0110 0220     		mov	r0, #2
 1231 0112 191C     		mov	r1, r3
 1232 0114 FFF7FEFF 		bl	inv_enable_sensor
 198:.\invn.c      ****                 dmp_reset_odr_counters();
 1233              		.loc 1 198 0
 1234 0118 FFF7FEFF 		bl	dmp_reset_odr_counters
 199:.\invn.c      ****                 if(hal.report & PRINT_COMPASS) set_output_rates(current_output_rate);
 1235              		.loc 1 199 0
 1236 011c 9D4B     		ldr	r3, .L95+4
 1237 011e 1B68     		ldr	r3, [r3]
 1238 0120 0822     		mov	r2, #8
 1239 0122 1340     		and	r3, r2
 1240 0124 04D0     		beq	.L70
 1241              		.loc 1 199 0 is_stmt 0 discriminator 1
 1242 0126 9C4B     		ldr	r3, .L95+8
 1243 0128 1B68     		ldr	r3, [r3]
 1244 012a 181C     		add	r0, r3, #0
 1245 012c FFF7FEFF 		bl	set_output_rates
 1246              	.L70:
 200:.\invn.c      **** 		if (hal.report & PRINT_COMPASS)
 1247              		.loc 1 200 0 is_stmt 1
 1248 0130 984B     		ldr	r3, .L95+4
 1249 0132 1B68     		ldr	r3, [r3]
 1250 0134 0822     		mov	r2, #8
 1251 0136 1340     		and	r3, r2
 1252 0138 04D0     		beq	.L71
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 27


 201:.\invn.c      **** 			result = inv_resume_akm();
 1253              		.loc 1 201 0
 1254 013a FFF7FEFF 		bl	inv_resume_akm
 1255 013e 031C     		mov	r3, r0
 1256 0140 7B64     		str	r3, [r7, #68]
 202:.\invn.c      **** 		else
 203:.\invn.c      **** 			result = inv_suspend_akm();
 204:.\invn.c      **** 		//if (result)
 205:.\invn.c      **** 		//	print_data_console("Compass resume/suspend error \n");
 206:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Compass....output toggled, now is: %s.\r\n", (hal.report & PRINT
 207:.\invn.c      **** 		break;
 1257              		.loc 1 207 0
 1258 0142 42E3     		b	.L67
 1259              	.L71:
 203:.\invn.c      **** 		//if (result)
 1260              		.loc 1 203 0
 1261 0144 FFF7FEFF 		bl	inv_suspend_akm
 1262 0148 031C     		mov	r3, r0
 1263 014a 7B64     		str	r3, [r7, #68]
 1264              		.loc 1 207 0
 1265 014c 3DE3     		b	.L67
 1266              	.L45:
 208:.\invn.c      **** 	case 'C':
 209:.\invn.c      **** 		dmp_reset_fifo();
 1267              		.loc 1 209 0
 1268 014e FFF7FEFF 		bl	dmp_reset_fifo
 210:.\invn.c      **** 		hal.report ^= PRINT_RAW_COMPASS;
 1269              		.loc 1 210 0
 1270 0152 904B     		ldr	r3, .L95+4
 1271 0154 1B68     		ldr	r3, [r3]
 1272 0156 1022     		mov	r2, #16
 1273 0158 5A40     		eor	r2, r3
 1274 015a 8E4B     		ldr	r3, .L95+4
 1275 015c 1A60     		str	r2, [r3]
 211:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_MAGNETIC_FIELD_UNCALIBRATED, !!(hal.report & PRINT_RAW_COMPASS))
 1276              		.loc 1 211 0
 1277 015e 8D4B     		ldr	r3, .L95+4
 1278 0160 1B68     		ldr	r3, [r3]
 1279 0162 1022     		mov	r2, #16
 1280 0164 1340     		and	r3, r2
 1281 0166 5A1E     		sub	r2, r3, #1
 1282 0168 9341     		sbc	r3, r3, r2
 1283 016a DBB2     		uxtb	r3, r3
 1284 016c 0E20     		mov	r0, #14
 1285 016e 191C     		mov	r1, r3
 1286 0170 FFF7FEFF 		bl	inv_enable_sensor
 212:.\invn.c      ****                 dmp_reset_odr_counters();
 1287              		.loc 1 212 0
 1288 0174 FFF7FEFF 		bl	dmp_reset_odr_counters
 213:.\invn.c      ****                 if(hal.report & PRINT_RAW_COMPASS) set_output_rates(current_output_rate);
 1289              		.loc 1 213 0
 1290 0178 864B     		ldr	r3, .L95+4
 1291 017a 1B68     		ldr	r3, [r3]
 1292 017c 1022     		mov	r2, #16
 1293 017e 1340     		and	r3, r2
 1294 0180 04D0     		beq	.L73
 1295              		.loc 1 213 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 28


 1296 0182 854B     		ldr	r3, .L95+8
 1297 0184 1B68     		ldr	r3, [r3]
 1298 0186 181C     		add	r0, r3, #0
 1299 0188 FFF7FEFF 		bl	set_output_rates
 1300              	.L73:
 214:.\invn.c      **** 		if (hal.report & PRINT_RAW_COMPASS)
 1301              		.loc 1 214 0 is_stmt 1
 1302 018c 814B     		ldr	r3, .L95+4
 1303 018e 1B68     		ldr	r3, [r3]
 1304 0190 1022     		mov	r2, #16
 1305 0192 1340     		and	r3, r2
 1306 0194 04D0     		beq	.L74
 215:.\invn.c      **** 			result = inv_resume_akm();
 1307              		.loc 1 215 0
 1308 0196 FFF7FEFF 		bl	inv_resume_akm
 1309 019a 031C     		mov	r3, r0
 1310 019c 7B64     		str	r3, [r7, #68]
 216:.\invn.c      **** 		else
 217:.\invn.c      **** 			result = inv_suspend_akm();
 218:.\invn.c      **** 		//if (result)
 219:.\invn.c      **** 		//	print_data_console("Compass resume/suspend error \n");
 220:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Raw Compass....output toggled, now is: %s.\r\n", (hal.report & P
 221:.\invn.c      **** 		break;
 1311              		.loc 1 221 0
 1312 019e 14E3     		b	.L67
 1313              	.L74:
 217:.\invn.c      **** 		//if (result)
 1314              		.loc 1 217 0
 1315 01a0 FFF7FEFF 		bl	inv_suspend_akm
 1316 01a4 031C     		mov	r3, r0
 1317 01a6 7B64     		str	r3, [r7, #68]
 1318              		.loc 1 221 0
 1319 01a8 0FE3     		b	.L67
 1320              	.L63:
 222:.\invn.c      **** #endif
 223:.\invn.c      **** 	case 'r':
 224:.\invn.c      **** 		dmp_reset_fifo();
 1321              		.loc 1 224 0
 1322 01aa FFF7FEFF 		bl	dmp_reset_fifo
 225:.\invn.c      **** 		hal.report ^= PRINT_GRV;
 1323              		.loc 1 225 0
 1324 01ae 794B     		ldr	r3, .L95+4
 1325 01b0 1B68     		ldr	r3, [r3]
 1326 01b2 4022     		mov	r2, #64
 1327 01b4 5A40     		eor	r2, r3
 1328 01b6 774B     		ldr	r3, .L95+4
 1329 01b8 1A60     		str	r2, [r3]
 226:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GAME_ROTATION_VECTOR, !!(hal.report & PRINT_GRV));
 1330              		.loc 1 226 0
 1331 01ba 764B     		ldr	r3, .L95+4
 1332 01bc 1B68     		ldr	r3, [r3]
 1333 01be 4022     		mov	r2, #64
 1334 01c0 1340     		and	r3, r2
 1335 01c2 5A1E     		sub	r2, r3, #1
 1336 01c4 9341     		sbc	r3, r3, r2
 1337 01c6 DBB2     		uxtb	r3, r3
 1338 01c8 0F20     		mov	r0, #15
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 29


 1339 01ca 191C     		mov	r1, r3
 1340 01cc FFF7FEFF 		bl	inv_enable_sensor
 227:.\invn.c      ****                 dmp_reset_odr_counters();
 1341              		.loc 1 227 0
 1342 01d0 FFF7FEFF 		bl	dmp_reset_odr_counters
 228:.\invn.c      ****                 if(hal.report & PRINT_GRV) set_output_rates(current_output_rate);
 1343              		.loc 1 228 0
 1344 01d4 6F4B     		ldr	r3, .L95+4
 1345 01d6 1B68     		ldr	r3, [r3]
 1346 01d8 4022     		mov	r2, #64
 1347 01da 1340     		and	r3, r2
 1348 01dc 05D0     		beq	.L76
 1349              		.loc 1 228 0 is_stmt 0 discriminator 1
 1350 01de 6E4B     		ldr	r3, .L95+8
 1351 01e0 1B68     		ldr	r3, [r3]
 1352 01e2 181C     		add	r0, r3, #0
 1353 01e4 FFF7FEFF 		bl	set_output_rates
 229:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Game RV....output toggled, now is: %s.\r\n", (hal.report & PRINT
 230:.\invn.c      ****         //        print_command_console(tst);
 231:.\invn.c      ****                 break;
 1354              		.loc 1 231 0 is_stmt 1 discriminator 1
 1355 01e8 EFE2     		b	.L67
 1356              	.L76:
 1357              		.loc 1 231 0 is_stmt 0
 1358 01ea EEE2     		b	.L67
 1359              	.L62:
 232:.\invn.c      ****         case 'q':
 233:.\invn.c      **** 		dmp_reset_fifo();
 1360              		.loc 1 233 0 is_stmt 1
 1361 01ec FFF7FEFF 		bl	dmp_reset_fifo
 234:.\invn.c      **** 		hal.report ^= PRINT_CUBE_GRV;
 1362              		.loc 1 234 0
 1363 01f0 684B     		ldr	r3, .L95+4
 1364 01f2 1B68     		ldr	r3, [r3]
 1365 01f4 8022     		mov	r2, #128
 1366 01f6 5202     		lsl	r2, r2, #9
 1367 01f8 5A40     		eor	r2, r3
 1368 01fa 664B     		ldr	r3, .L95+4
 1369 01fc 1A60     		str	r2, [r3]
 235:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GAME_ROTATION_VECTOR, !!(hal.report & PRINT_CUBE_GRV));
 1370              		.loc 1 235 0
 1371 01fe 654B     		ldr	r3, .L95+4
 1372 0200 1A68     		ldr	r2, [r3]
 1373 0202 8023     		mov	r3, #128
 1374 0204 5B02     		lsl	r3, r3, #9
 1375 0206 1340     		and	r3, r2
 1376 0208 5A1E     		sub	r2, r3, #1
 1377 020a 9341     		sbc	r3, r3, r2
 1378 020c DBB2     		uxtb	r3, r3
 1379 020e 0F20     		mov	r0, #15
 1380 0210 191C     		mov	r1, r3
 1381 0212 FFF7FEFF 		bl	inv_enable_sensor
 236:.\invn.c      ****                 dmp_reset_odr_counters();
 1382              		.loc 1 236 0
 1383 0216 FFF7FEFF 		bl	dmp_reset_odr_counters
 237:.\invn.c      **** 		if(hal.report & PRINT_CUBE_GRV) set_output_rates(current_output_rate);
 1384              		.loc 1 237 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 30


 1385 021a 5E4B     		ldr	r3, .L95+4
 1386 021c 1A68     		ldr	r2, [r3]
 1387 021e 8023     		mov	r3, #128
 1388 0220 5B02     		lsl	r3, r3, #9
 1389 0222 1340     		and	r3, r2
 1390 0224 05D0     		beq	.L77
 1391              		.loc 1 237 0 is_stmt 0 discriminator 1
 1392 0226 5C4B     		ldr	r3, .L95+8
 1393 0228 1B68     		ldr	r3, [r3]
 1394 022a 181C     		add	r0, r3, #0
 1395 022c FFF7FEFF 		bl	set_output_rates
 238:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Cube Game RV....output toggled, now is: %s.\r\n", (hal.report & 
 239:.\invn.c      **** 		//print_command_console(tst);
 240:.\invn.c      **** 		break;
 1396              		.loc 1 240 0 is_stmt 1 discriminator 1
 1397 0230 CBE2     		b	.L67
 1398              	.L77:
 1399              		.loc 1 240 0 is_stmt 0
 1400 0232 CAE2     		b	.L67
 1401              	.L54:
 241:.\invn.c      ****         
 242:.\invn.c      **** 		case 'd':
 243:.\invn.c      **** 		dmp_reset_fifo();
 1402              		.loc 1 243 0 is_stmt 1
 1403 0234 FFF7FEFF 		bl	dmp_reset_fifo
 244:.\invn.c      **** 		hal.report ^= PRINT_STEP_DETECTOR;
 1404              		.loc 1 244 0
 1405 0238 564B     		ldr	r3, .L95+4
 1406 023a 1B68     		ldr	r3, [r3]
 1407 023c 8022     		mov	r2, #128
 1408 023e 1201     		lsl	r2, r2, #4
 1409 0240 5A40     		eor	r2, r3
 1410 0242 544B     		ldr	r3, .L95+4
 1411 0244 1A60     		str	r2, [r3]
 245:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_STEP_DETECTOR, !!(hal.report & PRINT_STEP_DETECTOR));
 1412              		.loc 1 245 0
 1413 0246 534B     		ldr	r3, .L95+4
 1414 0248 1A68     		ldr	r2, [r3]
 1415 024a 8023     		mov	r3, #128
 1416 024c 1B01     		lsl	r3, r3, #4
 1417 024e 1340     		and	r3, r2
 1418 0250 5A1E     		sub	r2, r3, #1
 1419 0252 9341     		sbc	r3, r3, r2
 1420 0254 DBB2     		uxtb	r3, r3
 1421 0256 1220     		mov	r0, #18
 1422 0258 191C     		mov	r1, r3
 1423 025a FFF7FEFF 		bl	inv_enable_sensor
 246:.\invn.c      ****                 dmp_reset_odr_counters();
 1424              		.loc 1 246 0
 1425 025e FFF7FEFF 		bl	dmp_reset_odr_counters
 247:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20609)
 248:.\invn.c      ****                 if(hal.report & PRINT_STEP_DETECTOR) set_output_rates(50);
 249:.\invn.c      **** #elif (MEMS_CHIP == HW_ICM20630)
 250:.\invn.c      ****                 if(hal.report & PRINT_STEP_DETECTOR) set_output_rates(51);
 251:.\invn.c      **** #else                 
 252:.\invn.c      **** 		// pedometer always runs at half the rate of BAC, to run pedometer at 56Hz, run BAC at 112Hz as p
 253:.\invn.c      **** 		if(hal.report & PRINT_STEP_DETECTOR) set_output_rates(112.5);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 31


 1426              		.loc 1 253 0
 1427 0262 4C4B     		ldr	r3, .L95+4
 1428 0264 1A68     		ldr	r2, [r3]
 1429 0266 8023     		mov	r3, #128
 1430 0268 1B01     		lsl	r3, r3, #4
 1431 026a 1340     		and	r3, r2
 1432 026c 04D0     		beq	.L78
 1433              		.loc 1 253 0 is_stmt 0 discriminator 1
 1434 026e 4B4B     		ldr	r3, .L95+12
 1435 0270 181C     		add	r0, r3, #0
 1436 0272 FFF7FEFF 		bl	set_output_rates
 254:.\invn.c      **** #endif
 255:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Step Detector....output toggled, now is: %s.\r\n", (hal.report &
 256:.\invn.c      **** 		//print_command_console(tst);
 257:.\invn.c      **** 		break;
 1437              		.loc 1 257 0 is_stmt 1 discriminator 1
 1438 0276 A8E2     		b	.L67
 1439              	.L78:
 1440              		.loc 1 257 0 is_stmt 0
 1441 0278 A7E2     		b	.L67
 1442              	.L59:
 258:.\invn.c      **** 	case 'm':
 259:.\invn.c      **** 		dmp_reset_fifo();
 1443              		.loc 1 259 0 is_stmt 1
 1444 027a FFF7FEFF 		bl	dmp_reset_fifo
 260:.\invn.c      **** 		hal.report ^= PRINT_SMD;
 1445              		.loc 1 260 0
 1446 027e 454B     		ldr	r3, .L95+4
 1447 0280 1B68     		ldr	r3, [r3]
 1448 0282 8022     		mov	r2, #128
 1449 0284 5201     		lsl	r2, r2, #5
 1450 0286 5A40     		eor	r2, r3
 1451 0288 424B     		ldr	r3, .L95+4
 1452 028a 1A60     		str	r2, [r3]
 261:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_WAKEUP_SIGNIFICANT_MOTION, !!(hal.report & PRINT_SMD));
 1453              		.loc 1 261 0
 1454 028c 414B     		ldr	r3, .L95+4
 1455 028e 1A68     		ldr	r2, [r3]
 1456 0290 8023     		mov	r3, #128
 1457 0292 5B01     		lsl	r3, r3, #5
 1458 0294 1340     		and	r3, r2
 1459 0296 5A1E     		sub	r2, r3, #1
 1460 0298 9341     		sbc	r3, r3, r2
 1461 029a DBB2     		uxtb	r3, r3
 1462 029c 1120     		mov	r0, #17
 1463 029e 191C     		mov	r1, r3
 1464 02a0 FFF7FEFF 		bl	inv_enable_sensor
 262:.\invn.c      ****                 dmp_reset_odr_counters();
 1465              		.loc 1 262 0
 1466 02a4 FFF7FEFF 		bl	dmp_reset_odr_counters
 263:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20609)
 264:.\invn.c      ****                 if(hal.report & PRINT_SMD) set_output_rates(50);
 265:.\invn.c      **** #else               
 266:.\invn.c      **** 		// pedometer always runs at half the rate of BAC, to run pedometer at 56Hz, run BAC at 112Hz as p
 267:.\invn.c      **** 		if(hal.report & PRINT_SMD) set_output_rates(112.5);
 1467              		.loc 1 267 0
 1468 02a8 3A4B     		ldr	r3, .L95+4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 32


 1469 02aa 1A68     		ldr	r2, [r3]
 1470 02ac 8023     		mov	r3, #128
 1471 02ae 5B01     		lsl	r3, r3, #5
 1472 02b0 1340     		and	r3, r2
 1473 02b2 04D0     		beq	.L79
 1474              		.loc 1 267 0 is_stmt 0 discriminator 1
 1475 02b4 394B     		ldr	r3, .L95+12
 1476 02b6 181C     		add	r0, r3, #0
 1477 02b8 FFF7FEFF 		bl	set_output_rates
 268:.\invn.c      **** #endif
 269:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "SMD....output toggled, now is: %s.\r\n", (hal.report & PRINT_SMD
 270:.\invn.c      **** 		//print_command_console(tst);
 271:.\invn.c      **** 		break;
 1478              		.loc 1 271 0 is_stmt 1 discriminator 1
 1479 02bc 85E2     		b	.L67
 1480              	.L79:
 1481              		.loc 1 271 0 is_stmt 0
 1482 02be 84E2     		b	.L67
 1483              	.L61:
 272:.\invn.c      **** 
 273:.\invn.c      **** 	case 'p':
 274:.\invn.c      **** 		dmp_reset_fifo();
 1484              		.loc 1 274 0 is_stmt 1
 1485 02c0 FFF7FEFF 		bl	dmp_reset_fifo
 275:.\invn.c      **** 		hal.report ^= PRINT_STEP_COUNTER;
 1486              		.loc 1 275 0
 1487 02c4 334B     		ldr	r3, .L95+4
 1488 02c6 1B68     		ldr	r3, [r3]
 1489 02c8 8022     		mov	r2, #128
 1490 02ca D200     		lsl	r2, r2, #3
 1491 02cc 5A40     		eor	r2, r3
 1492 02ce 314B     		ldr	r3, .L95+4
 1493 02d0 1A60     		str	r2, [r3]
 276:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_STEP_COUNTER, !!(hal.report & PRINT_STEP_COUNTER));
 1494              		.loc 1 276 0
 1495 02d2 304B     		ldr	r3, .L95+4
 1496 02d4 1A68     		ldr	r2, [r3]
 1497 02d6 8023     		mov	r3, #128
 1498 02d8 DB00     		lsl	r3, r3, #3
 1499 02da 1340     		and	r3, r2
 1500 02dc 5A1E     		sub	r2, r3, #1
 1501 02de 9341     		sbc	r3, r3, r2
 1502 02e0 DBB2     		uxtb	r3, r3
 1503 02e2 1320     		mov	r0, #19
 1504 02e4 191C     		mov	r1, r3
 1505 02e6 FFF7FEFF 		bl	inv_enable_sensor
 277:.\invn.c      ****                 dmp_reset_odr_counters();
 1506              		.loc 1 277 0
 1507 02ea FFF7FEFF 		bl	dmp_reset_odr_counters
 278:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20609)
 279:.\invn.c      ****                 if(hal.report & PRINT_STEP_COUNTER) set_output_rates(50);
 280:.\invn.c      **** #else                 
 281:.\invn.c      **** 		// pedometer always runs at half the rate of BAC, to run pedometer at 56Hz, run BAC at 112Hz as p
 282:.\invn.c      **** 		if(hal.report & PRINT_STEP_COUNTER) set_output_rates(112.5);
 1508              		.loc 1 282 0
 1509 02ee 294B     		ldr	r3, .L95+4
 1510 02f0 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 33


 1511 02f2 8023     		mov	r3, #128
 1512 02f4 DB00     		lsl	r3, r3, #3
 1513 02f6 1340     		and	r3, r2
 1514 02f8 04D0     		beq	.L80
 1515              		.loc 1 282 0 is_stmt 0 discriminator 1
 1516 02fa 284B     		ldr	r3, .L95+12
 1517 02fc 181C     		add	r0, r3, #0
 1518 02fe FFF7FEFF 		bl	set_output_rates
 283:.\invn.c      **** #endif
 284:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Step Counter....output toggled, now is: %s.\r\n", (hal.report & 
 285:.\invn.c      **** 		//print_command_console(tst);
 286:.\invn.c      **** 		break;
 1519              		.loc 1 286 0 is_stmt 1 discriminator 1
 1520 0302 62E2     		b	.L67
 1521              	.L80:
 1522              		.loc 1 286 0 is_stmt 0
 1523 0304 61E2     		b	.L67
 1524              	.L49:
 287:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 288:.\invn.c      **** 	case 'R':
 289:.\invn.c      **** 		dmp_reset_fifo();
 1525              		.loc 1 289 0 is_stmt 1
 1526 0306 FFF7FEFF 		bl	dmp_reset_fifo
 290:.\invn.c      **** 		hal.report ^= PRINT_RV;
 1527              		.loc 1 290 0
 1528 030a 224B     		ldr	r3, .L95+4
 1529 030c 1B68     		ldr	r3, [r3]
 1530 030e 2022     		mov	r2, #32
 1531 0310 5A40     		eor	r2, r3
 1532 0312 204B     		ldr	r3, .L95+4
 1533 0314 1A60     		str	r2, [r3]
 291:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_ROTATION_VECTOR, !!(hal.report & PRINT_RV));
 1534              		.loc 1 291 0
 1535 0316 1F4B     		ldr	r3, .L95+4
 1536 0318 1B68     		ldr	r3, [r3]
 1537 031a 2022     		mov	r2, #32
 1538 031c 1340     		and	r3, r2
 1539 031e 5A1E     		sub	r2, r3, #1
 1540 0320 9341     		sbc	r3, r3, r2
 1541 0322 DBB2     		uxtb	r3, r3
 1542 0324 0B20     		mov	r0, #11
 1543 0326 191C     		mov	r1, r3
 1544 0328 FFF7FEFF 		bl	inv_enable_sensor
 292:.\invn.c      ****                 dmp_reset_odr_counters();
 1545              		.loc 1 292 0
 1546 032c FFF7FEFF 		bl	dmp_reset_odr_counters
 293:.\invn.c      **** 		if(hal.report & PRINT_RV) set_output_rates(current_output_rate);
 1547              		.loc 1 293 0
 1548 0330 184B     		ldr	r3, .L95+4
 1549 0332 1B68     		ldr	r3, [r3]
 1550 0334 2022     		mov	r2, #32
 1551 0336 1340     		and	r3, r2
 1552 0338 05D0     		beq	.L81
 1553              		.loc 1 293 0 is_stmt 0 discriminator 1
 1554 033a 174B     		ldr	r3, .L95+8
 1555 033c 1B68     		ldr	r3, [r3]
 1556 033e 181C     		add	r0, r3, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 34


 1557 0340 FFF7FEFF 		bl	set_output_rates
 294:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "RV....output toggled, now is: %s.\r\n", (hal.report & PRINT_RV) 
 295:.\invn.c      **** 		//print_command_console(tst);
 296:.\invn.c      **** 		break;
 1558              		.loc 1 296 0 is_stmt 1 discriminator 1
 1559 0344 41E2     		b	.L67
 1560              	.L81:
 1561              		.loc 1 296 0 is_stmt 0
 1562 0346 40E2     		b	.L67
 1563              	.L55:
 297:.\invn.c      **** 	case 'e':
 298:.\invn.c      **** 		dmp_reset_fifo();
 1564              		.loc 1 298 0 is_stmt 1
 1565 0348 FFF7FEFF 		bl	dmp_reset_fifo
 299:.\invn.c      **** 		hal.report ^= PRINT_GEOMAG;
 1566              		.loc 1 299 0
 1567 034c 114B     		ldr	r3, .L95+4
 1568 034e 1B68     		ldr	r3, [r3]
 1569 0350 8022     		mov	r2, #128
 1570 0352 9201     		lsl	r2, r2, #6
 1571 0354 5A40     		eor	r2, r3
 1572 0356 0F4B     		ldr	r3, .L95+4
 1573 0358 1A60     		str	r2, [r3]
 300:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GEOMAGNETIC_ROTATION_VECTOR, !!(hal.report & PRINT_GEOMAG));
 1574              		.loc 1 300 0
 1575 035a 0E4B     		ldr	r3, .L95+4
 1576 035c 1A68     		ldr	r2, [r3]
 1577 035e 8023     		mov	r3, #128
 1578 0360 9B01     		lsl	r3, r3, #6
 1579 0362 1340     		and	r3, r2
 1580 0364 5A1E     		sub	r2, r3, #1
 1581 0366 9341     		sbc	r3, r3, r2
 1582 0368 DBB2     		uxtb	r3, r3
 1583 036a 1420     		mov	r0, #20
 1584 036c 191C     		mov	r1, r3
 1585 036e FFF7FEFF 		bl	inv_enable_sensor
 301:.\invn.c      ****                 dmp_reset_odr_counters();
 1586              		.loc 1 301 0
 1587 0372 FFF7FEFF 		bl	dmp_reset_odr_counters
 302:.\invn.c      **** 		if(hal.report & PRINT_GEOMAG) set_output_rates(current_output_rate);
 1588              		.loc 1 302 0
 1589 0376 074B     		ldr	r3, .L95+4
 1590 0378 1A68     		ldr	r2, [r3]
 1591 037a 8023     		mov	r3, #128
 1592 037c 9B01     		lsl	r3, r3, #6
 1593 037e 1340     		and	r3, r2
 1594 0380 05D0     		beq	.L82
 1595              		.loc 1 302 0 is_stmt 0 discriminator 1
 1596 0382 054B     		ldr	r3, .L95+8
 1597 0384 1B68     		ldr	r3, [r3]
 1598 0386 181C     		add	r0, r3, #0
 1599 0388 FFF7FEFF 		bl	set_output_rates
 303:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "GeoMAG RV....output toggled, now is: %s.\r\n", (hal.report & PRI
 304:.\invn.c      **** 		//print_command_console(tst);
 305:.\invn.c      **** 		break;
 1600              		.loc 1 305 0 is_stmt 1 discriminator 1
 1601 038c 1DE2     		b	.L67
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 35


 1602              	.L82:
 1603              		.loc 1 305 0 is_stmt 0
 1604 038e 1CE2     		b	.L67
 1605              	.L96:
 1606              		.align	2
 1607              	.L95:
 1608 0390 14000000 		.word	.L34
 1609 0394 00000000 		.word	hal
 1610 0398 00000000 		.word	current_output_rate
 1611 039c 0000E142 		.word	1122041856
 1612              	.L52:
 306:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20630)
 307:.\invn.c      **** 	case 'b':
 308:.\invn.c      **** 		dmp_reset_fifo();
 1613              		.loc 1 308 0 is_stmt 1
 1614 03a0 FFF7FEFF 		bl	dmp_reset_fifo
 309:.\invn.c      ****                 if(!(hal.report & PRINT_BAC))
 1615              		.loc 1 309 0
 1616 03a4 BE4B     		ldr	r3, .L97
 1617 03a6 1A68     		ldr	r2, [r3]
 1618 03a8 8023     		mov	r3, #128
 1619 03aa 5B03     		lsl	r3, r3, #13
 1620 03ac 1340     		and	r3, r2
 1621 03ae 01D1     		bne	.L83
 310:.\invn.c      ****                     dmp_reset_bac_states();
 1622              		.loc 1 310 0
 1623 03b0 FFF7FEFF 		bl	dmp_reset_bac_states
 1624              	.L83:
 311:.\invn.c      **** 		hal.report ^= PRINT_BAC;
 1625              		.loc 1 311 0
 1626 03b4 BA4B     		ldr	r3, .L97
 1627 03b6 1B68     		ldr	r3, [r3]
 1628 03b8 8022     		mov	r2, #128
 1629 03ba 5203     		lsl	r2, r2, #13
 1630 03bc 5A40     		eor	r2, r3
 1631 03be B84B     		ldr	r3, .L97
 1632 03c0 1A60     		str	r2, [r3]
 312:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_ACTIVITY_CLASSIFICATON, !!(hal.report & PRINT_BAC));
 1633              		.loc 1 312 0
 1634 03c2 B74B     		ldr	r3, .L97
 1635 03c4 1A68     		ldr	r2, [r3]
 1636 03c6 8023     		mov	r3, #128
 1637 03c8 5B03     		lsl	r3, r3, #13
 1638 03ca 1340     		and	r3, r2
 1639 03cc 5A1E     		sub	r2, r3, #1
 1640 03ce 9341     		sbc	r3, r3, r2
 1641 03d0 DBB2     		uxtb	r3, r3
 1642 03d2 2D20     		mov	r0, #45
 1643 03d4 191C     		mov	r1, r3
 1644 03d6 FFF7FEFF 		bl	inv_enable_sensor
 313:.\invn.c      ****                 dmp_reset_odr_counters();
 1645              		.loc 1 313 0
 1646 03da FFF7FEFF 		bl	dmp_reset_odr_counters
 314:.\invn.c      **** 		if(hal.report & PRINT_BAC) set_output_rates(112.5);
 1647              		.loc 1 314 0
 1648 03de B04B     		ldr	r3, .L97
 1649 03e0 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 36


 1650 03e2 8023     		mov	r3, #128
 1651 03e4 5B03     		lsl	r3, r3, #13
 1652 03e6 1340     		and	r3, r2
 1653 03e8 04D0     		beq	.L84
 1654              		.loc 1 314 0 is_stmt 0 discriminator 1
 1655 03ea AE4B     		ldr	r3, .L97+4
 1656 03ec 181C     		add	r0, r3, #0
 1657 03ee FFF7FEFF 		bl	set_output_rates
 315:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "BAC....output toggled, now is: %s.\r\n", (hal.report & PRINT_BAC
 316:.\invn.c      **** 		break;
 1658              		.loc 1 316 0 is_stmt 1 discriminator 1
 1659 03f2 EAE1     		b	.L67
 1660              	.L84:
 1661              		.loc 1 316 0 is_stmt 0
 1662 03f4 E9E1     		b	.L67
 1663              	.L50:
 317:.\invn.c      **** 	case 'T':
 318:.\invn.c      **** 		dmp_reset_fifo();
 1664              		.loc 1 318 0 is_stmt 1
 1665 03f6 FFF7FEFF 		bl	dmp_reset_fifo
 319:.\invn.c      **** 		hal.report ^= PRINT_TILT;
 1666              		.loc 1 319 0
 1667 03fa A94B     		ldr	r3, .L97
 1668 03fc 1B68     		ldr	r3, [r3]
 1669 03fe 8022     		mov	r2, #128
 1670 0400 D203     		lsl	r2, r2, #15
 1671 0402 5A40     		eor	r2, r3
 1672 0404 A64B     		ldr	r3, .L97
 1673 0406 1A60     		str	r2, [r3]
 320:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_WAKEUP_TILT_DETECTOR, !!(hal.report & PRINT_TILT));
 1674              		.loc 1 320 0
 1675 0408 A54B     		ldr	r3, .L97
 1676 040a 1A68     		ldr	r2, [r3]
 1677 040c 8023     		mov	r3, #128
 1678 040e DB03     		lsl	r3, r3, #15
 1679 0410 1340     		and	r3, r2
 1680 0412 5A1E     		sub	r2, r3, #1
 1681 0414 9341     		sbc	r3, r3, r2
 1682 0416 DBB2     		uxtb	r3, r3
 1683 0418 2920     		mov	r0, #41
 1684 041a 191C     		mov	r1, r3
 1685 041c FFF7FEFF 		bl	inv_enable_sensor
 321:.\invn.c      ****                 dmp_reset_odr_counters();
 1686              		.loc 1 321 0
 1687 0420 FFF7FEFF 		bl	dmp_reset_odr_counters
 322:.\invn.c      **** 		if(hal.report & PRINT_TILT) set_output_rates(112.5);
 1688              		.loc 1 322 0
 1689 0424 9E4B     		ldr	r3, .L97
 1690 0426 1A68     		ldr	r2, [r3]
 1691 0428 8023     		mov	r3, #128
 1692 042a DB03     		lsl	r3, r3, #15
 1693 042c 1340     		and	r3, r2
 1694 042e 04D0     		beq	.L85
 1695              		.loc 1 322 0 is_stmt 0 discriminator 1
 1696 0430 9C4B     		ldr	r3, .L97+4
 1697 0432 181C     		add	r0, r3, #0
 1698 0434 FFF7FEFF 		bl	set_output_rates
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 37


 323:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Tilt....output toggled, now is: %s.\r\n", (hal.report & PRINT_TI
 324:.\invn.c      **** 		break;
 1699              		.loc 1 324 0 is_stmt 1 discriminator 1
 1700 0438 C7E1     		b	.L67
 1701              	.L85:
 1702              		.loc 1 324 0 is_stmt 0
 1703 043a C6E1     		b	.L67
 1704              	.L46:
 325:.\invn.c      **** 	case 'F':
 326:.\invn.c      **** 		dmp_reset_fifo();
 1705              		.loc 1 326 0 is_stmt 1
 1706 043c FFF7FEFF 		bl	dmp_reset_fifo
 327:.\invn.c      **** 		hal.report ^= PRINT_FLIP_PICKUP;
 1707              		.loc 1 327 0
 1708 0440 974B     		ldr	r3, .L97
 1709 0442 1B68     		ldr	r3, [r3]
 1710 0444 8022     		mov	r2, #128
 1711 0446 9203     		lsl	r2, r2, #14
 1712 0448 5A40     		eor	r2, r3
 1713 044a 954B     		ldr	r3, .L97
 1714 044c 1A60     		str	r2, [r3]
 328:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_FLIP_PICKUP, !!(hal.report & PRINT_FLIP_PICKUP));
 1715              		.loc 1 328 0
 1716 044e 944B     		ldr	r3, .L97
 1717 0450 1A68     		ldr	r2, [r3]
 1718 0452 8023     		mov	r3, #128
 1719 0454 9B03     		lsl	r3, r3, #14
 1720 0456 1340     		and	r3, r2
 1721 0458 5A1E     		sub	r2, r3, #1
 1722 045a 9341     		sbc	r3, r3, r2
 1723 045c DBB2     		uxtb	r3, r3
 1724 045e 2C20     		mov	r0, #44
 1725 0460 191C     		mov	r1, r3
 1726 0462 FFF7FEFF 		bl	inv_enable_sensor
 329:.\invn.c      ****                 dmp_reset_odr_counters();
 1727              		.loc 1 329 0
 1728 0466 FFF7FEFF 		bl	dmp_reset_odr_counters
 330:.\invn.c      **** 		if(hal.report & PRINT_FLIP_PICKUP) set_output_rates(112.5);
 1729              		.loc 1 330 0
 1730 046a 8D4B     		ldr	r3, .L97
 1731 046c 1A68     		ldr	r2, [r3]
 1732 046e 8023     		mov	r3, #128
 1733 0470 9B03     		lsl	r3, r3, #14
 1734 0472 1340     		and	r3, r2
 1735 0474 04D0     		beq	.L86
 1736              		.loc 1 330 0 is_stmt 0 discriminator 1
 1737 0476 8B4B     		ldr	r3, .L97+4
 1738 0478 181C     		add	r0, r3, #0
 1739 047a FFF7FEFF 		bl	set_output_rates
 331:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Flip Pickup....output toggled, now is: %s.\r\n", (hal.report & P
 332:.\invn.c      **** 		break;
 1740              		.loc 1 332 0 is_stmt 1 discriminator 1
 1741 047e A4E1     		b	.L67
 1742              	.L86:
 1743              		.loc 1 332 0 is_stmt 0
 1744 0480 A3E1     		b	.L67
 1745              	.L33:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 38


 333:.\invn.c      **** #endif
 334:.\invn.c      **** #endif            
 335:.\invn.c      **** 	
 336:.\invn.c      ****         case '0':
 337:.\invn.c      ****           set_output_rates(1);
 1746              		.loc 1 337 0 is_stmt 1
 1747 0482 FE23     		mov	r3, #254
 1748 0484 9B05     		lsl	r3, r3, #22
 1749 0486 181C     		add	r0, r3, #0
 1750 0488 FFF7FEFF 		bl	set_output_rates
 338:.\invn.c      ****           current_output_rate = 1;
 1751              		.loc 1 338 0
 1752 048c 864B     		ldr	r3, .L97+8
 1753 048e FE22     		mov	r2, #254
 1754 0490 9205     		lsl	r2, r2, #22
 1755 0492 1A60     		str	r2, [r3]
 339:.\invn.c      ****           break;
 1756              		.loc 1 339 0
 1757 0494 99E1     		b	.L67
 1758              	.L35:
 340:.\invn.c      ****         case '1':
 341:.\invn.c      ****           set_output_rates(5);
 1759              		.loc 1 341 0
 1760 0496 854B     		ldr	r3, .L97+12
 1761 0498 181C     		add	r0, r3, #0
 1762 049a FFF7FEFF 		bl	set_output_rates
 342:.\invn.c      ****           current_output_rate = 5;
 1763              		.loc 1 342 0
 1764 049e 824B     		ldr	r3, .L97+8
 1765 04a0 824A     		ldr	r2, .L97+12
 1766 04a2 1A60     		str	r2, [r3]
 343:.\invn.c      ****           break;
 1767              		.loc 1 343 0
 1768 04a4 91E1     		b	.L67
 1769              	.L36:
 344:.\invn.c      ****         case '2':
 345:.\invn.c      ****           set_output_rates(15);
 1770              		.loc 1 345 0
 1771 04a6 824B     		ldr	r3, .L97+16
 1772 04a8 181C     		add	r0, r3, #0
 1773 04aa FFF7FEFF 		bl	set_output_rates
 346:.\invn.c      ****           current_output_rate = 15;
 1774              		.loc 1 346 0
 1775 04ae 7E4B     		ldr	r3, .L97+8
 1776 04b0 7F4A     		ldr	r2, .L97+16
 1777 04b2 1A60     		str	r2, [r3]
 347:.\invn.c      ****           break;
 1778              		.loc 1 347 0
 1779 04b4 89E1     		b	.L67
 1780              	.L37:
 348:.\invn.c      ****         case '3':
 349:.\invn.c      **** #if (MEMS_CHIP==HW_ICM20609)
 350:.\invn.c      ****           set_output_rates(50);
 351:.\invn.c      ****           current_output_rate = 50;
 352:.\invn.c      **** #elif (MEMS_CHIP==HW_ICM20648)
 353:.\invn.c      ****           set_output_rates(30);
 1781              		.loc 1 353 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 39


 1782 04b6 7F4B     		ldr	r3, .L97+20
 1783 04b8 181C     		add	r0, r3, #0
 1784 04ba FFF7FEFF 		bl	set_output_rates
 354:.\invn.c      ****           current_output_rate = 30;
 1785              		.loc 1 354 0
 1786 04be 7A4B     		ldr	r3, .L97+8
 1787 04c0 7C4A     		ldr	r2, .L97+20
 1788 04c2 1A60     		str	r2, [r3]
 355:.\invn.c      **** #endif
 356:.\invn.c      ****           break;
 1789              		.loc 1 356 0
 1790 04c4 81E1     		b	.L67
 1791              	.L38:
 357:.\invn.c      ****         case '4':
 358:.\invn.c      **** #if (MEMS_CHIP==HW_ICM20609)
 359:.\invn.c      ****           set_output_rates(100);
 360:.\invn.c      ****           current_output_rate = 100;
 361:.\invn.c      **** #elif (MEMS_CHIP==HW_ICM20648)
 362:.\invn.c      ****           set_output_rates(51);
 1792              		.loc 1 362 0
 1793 04c6 7C4B     		ldr	r3, .L97+24
 1794 04c8 181C     		add	r0, r3, #0
 1795 04ca FFF7FEFF 		bl	set_output_rates
 363:.\invn.c      ****           current_output_rate = 51;
 1796              		.loc 1 363 0
 1797 04ce 764B     		ldr	r3, .L97+8
 1798 04d0 794A     		ldr	r2, .L97+24
 1799 04d2 1A60     		str	r2, [r3]
 364:.\invn.c      **** #endif
 365:.\invn.c      ****           break;
 1800              		.loc 1 365 0
 1801 04d4 79E1     		b	.L67
 1802              	.L39:
 366:.\invn.c      **** #if (MEMS_CHIP==HW_ICM20648)          
 367:.\invn.c      ****         case '5':
 368:.\invn.c      ****           set_output_rates(56.5);
 1803              		.loc 1 368 0
 1804 04d6 794B     		ldr	r3, .L97+28
 1805 04d8 181C     		add	r0, r3, #0
 1806 04da FFF7FEFF 		bl	set_output_rates
 369:.\invn.c      ****           current_output_rate = 56.5;
 1807              		.loc 1 369 0
 1808 04de 724B     		ldr	r3, .L97+8
 1809 04e0 764A     		ldr	r2, .L97+28
 1810 04e2 1A60     		str	r2, [r3]
 370:.\invn.c      ****           break;
 1811              		.loc 1 370 0
 1812 04e4 71E1     		b	.L67
 1813              	.L40:
 371:.\invn.c      ****         case '6':
 372:.\invn.c      ****           set_output_rates(60);
 1814              		.loc 1 372 0
 1815 04e6 764B     		ldr	r3, .L97+32
 1816 04e8 181C     		add	r0, r3, #0
 1817 04ea FFF7FEFF 		bl	set_output_rates
 373:.\invn.c      ****           current_output_rate = 60;
 1818              		.loc 1 373 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 40


 1819 04ee 6E4B     		ldr	r3, .L97+8
 1820 04f0 734A     		ldr	r2, .L97+32
 1821 04f2 1A60     		str	r2, [r3]
 374:.\invn.c      ****           break;
 1822              		.loc 1 374 0
 1823 04f4 69E1     		b	.L67
 1824              	.L41:
 375:.\invn.c      ****         case '7':
 376:.\invn.c      ****           set_output_rates(102);
 1825              		.loc 1 376 0
 1826 04f6 734B     		ldr	r3, .L97+36
 1827 04f8 181C     		add	r0, r3, #0
 1828 04fa FFF7FEFF 		bl	set_output_rates
 377:.\invn.c      ****           current_output_rate = 102;
 1829              		.loc 1 377 0
 1830 04fe 6A4B     		ldr	r3, .L97+8
 1831 0500 704A     		ldr	r2, .L97+36
 1832 0502 1A60     		str	r2, [r3]
 378:.\invn.c      ****           break;
 1833              		.loc 1 378 0
 1834 0504 61E1     		b	.L67
 1835              	.L42:
 379:.\invn.c      ****         case '8':
 380:.\invn.c      ****           set_output_rates(112.5);
 1836              		.loc 1 380 0
 1837 0506 674B     		ldr	r3, .L97+4
 1838 0508 181C     		add	r0, r3, #0
 1839 050a FFF7FEFF 		bl	set_output_rates
 381:.\invn.c      ****           current_output_rate = 112.5;
 1840              		.loc 1 381 0
 1841 050e 664B     		ldr	r3, .L97+8
 1842 0510 644A     		ldr	r2, .L97+4
 1843 0512 1A60     		str	r2, [r3]
 382:.\invn.c      ****           break;
 1844              		.loc 1 382 0
 1845 0514 59E1     		b	.L67
 1846              	.L43:
 383:.\invn.c      ****         case '9':
 384:.\invn.c      ****           set_output_rates(225);
 1847              		.loc 1 384 0
 1848 0516 6C4B     		ldr	r3, .L97+40
 1849 0518 181C     		add	r0, r3, #0
 1850 051a FFF7FEFF 		bl	set_output_rates
 385:.\invn.c      ****           current_output_rate = 225;
 1851              		.loc 1 385 0
 1852 051e 624B     		ldr	r3, .L97+8
 1853 0520 694A     		ldr	r2, .L97+40
 1854 0522 1A60     		str	r2, [r3]
 386:.\invn.c      ****           break;
 1855              		.loc 1 386 0
 1856 0524 51E1     		b	.L67
 1857              	.L57:
 387:.\invn.c      ****                 
 388:.\invn.c      **** 	case 'k':
 389:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Getting the DMP biases...\r\n"); print_data_console(tst);
 390:.\invn.c      **** 		memset(dmp_bias, 0, sizeof(dmp_bias));
 1858              		.loc 1 390 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 41


 1859 0526 694B     		ldr	r3, .L97+44
 1860 0528 181C     		mov	r0, r3
 1861 052a 0021     		mov	r1, #0
 1862 052c 2422     		mov	r2, #36
 1863 052e FFF7FEFF 		bl	memset
 391:.\invn.c      **** 		dmp_get_bias(dmp_bias);
 1864              		.loc 1 391 0
 1865 0532 664B     		ldr	r3, .L97+44
 1866 0534 181C     		mov	r0, r3
 1867 0536 FFF7FEFF 		bl	dmp_get_bias
 392:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "DMP   Accel Bias: X=%d, Y=%d, Z=%d\r\n", dmp_bias[0], dmp_bias[1
 393:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "DMP   Gyro  Bias: X=%d, Y=%d, Z=%d\r\n", dmp_bias[3], dmp_bias[4
 394:.\invn.c      **** 		break;
 1868              		.loc 1 394 0
 1869 053a 46E1     		b	.L67
 1870              	.L48:
 395:.\invn.c      **** 
 396:.\invn.c      **** 	case 'Q':
 397:.\invn.c      **** 		dmp_reset_fifo();
 1871              		.loc 1 397 0
 1872 053c FFF7FEFF 		bl	dmp_reset_fifo
 398:.\invn.c      **** 		hal.report ^= PRINT_CUBE_RV;
 1873              		.loc 1 398 0
 1874 0540 574B     		ldr	r3, .L97
 1875 0542 1B68     		ldr	r3, [r3]
 1876 0544 8022     		mov	r2, #128
 1877 0546 9202     		lsl	r2, r2, #10
 1878 0548 5A40     		eor	r2, r3
 1879 054a 554B     		ldr	r3, .L97
 1880 054c 1A60     		str	r2, [r3]
 399:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_ROTATION_VECTOR, !!(hal.report & PRINT_CUBE_RV));
 1881              		.loc 1 399 0
 1882 054e 544B     		ldr	r3, .L97
 1883 0550 1A68     		ldr	r2, [r3]
 1884 0552 8023     		mov	r3, #128
 1885 0554 9B02     		lsl	r3, r3, #10
 1886 0556 1340     		and	r3, r2
 1887 0558 5A1E     		sub	r2, r3, #1
 1888 055a 9341     		sbc	r3, r3, r2
 1889 055c DBB2     		uxtb	r3, r3
 1890 055e 0B20     		mov	r0, #11
 1891 0560 191C     		mov	r1, r3
 1892 0562 FFF7FEFF 		bl	inv_enable_sensor
 400:.\invn.c      ****                 dmp_reset_odr_counters();
 1893              		.loc 1 400 0
 1894 0566 FFF7FEFF 		bl	dmp_reset_odr_counters
 401:.\invn.c      **** 		if (hal.report & PRINT_CUBE_RV) set_output_rates(current_output_rate);
 1895              		.loc 1 401 0
 1896 056a 4D4B     		ldr	r3, .L97
 1897 056c 1A68     		ldr	r2, [r3]
 1898 056e 8023     		mov	r3, #128
 1899 0570 9B02     		lsl	r3, r3, #10
 1900 0572 1340     		and	r3, r2
 1901 0574 05D0     		beq	.L87
 1902              		.loc 1 401 0 is_stmt 0 discriminator 1
 1903 0576 4C4B     		ldr	r3, .L97+8
 1904 0578 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 42


 1905 057a 181C     		add	r0, r3, #0
 1906 057c FFF7FEFF 		bl	set_output_rates
 402:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Cube RV....output toggled, now is: %s.\r\n", (hal.report & PRINT
 403:.\invn.c      **** 		//print_command_console(tst);
 404:.\invn.c      **** 		break;
 1907              		.loc 1 404 0 is_stmt 1 discriminator 1
 1908 0580 23E1     		b	.L67
 1909              	.L87:
 1910              		.loc 1 404 0 is_stmt 0
 1911 0582 22E1     		b	.L67
 1912              	.L44:
 405:.\invn.c      **** 	case '@':
 406:.\invn.c      **** 		dmp_reset_fifo();
 1913              		.loc 1 406 0 is_stmt 1
 1914 0584 FFF7FEFF 		bl	dmp_reset_fifo
 407:.\invn.c      **** 		hal.report ^= PRINT_CUBE_GEOMAG;
 1915              		.loc 1 407 0
 1916 0588 454B     		ldr	r3, .L97
 1917 058a 1B68     		ldr	r3, [r3]
 1918 058c 8022     		mov	r2, #128
 1919 058e D202     		lsl	r2, r2, #11
 1920 0590 5A40     		eor	r2, r3
 1921 0592 434B     		ldr	r3, .L97
 1922 0594 1A60     		str	r2, [r3]
 408:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GEOMAGNETIC_ROTATION_VECTOR, !!(hal.report & PRINT_CUBE_GEOMAG))
 1923              		.loc 1 408 0
 1924 0596 424B     		ldr	r3, .L97
 1925 0598 1A68     		ldr	r2, [r3]
 1926 059a 8023     		mov	r3, #128
 1927 059c DB02     		lsl	r3, r3, #11
 1928 059e 1340     		and	r3, r2
 1929 05a0 5A1E     		sub	r2, r3, #1
 1930 05a2 9341     		sbc	r3, r3, r2
 1931 05a4 DBB2     		uxtb	r3, r3
 1932 05a6 1420     		mov	r0, #20
 1933 05a8 191C     		mov	r1, r3
 1934 05aa FFF7FEFF 		bl	inv_enable_sensor
 409:.\invn.c      ****                 dmp_reset_odr_counters();
 1935              		.loc 1 409 0
 1936 05ae FFF7FEFF 		bl	dmp_reset_odr_counters
 410:.\invn.c      **** 		if (hal.report & PRINT_CUBE_GEOMAG) set_output_rates(current_output_rate);
 1937              		.loc 1 410 0
 1938 05b2 3B4B     		ldr	r3, .L97
 1939 05b4 1A68     		ldr	r2, [r3]
 1940 05b6 8023     		mov	r3, #128
 1941 05b8 DB02     		lsl	r3, r3, #11
 1942 05ba 1340     		and	r3, r2
 1943 05bc 05D0     		beq	.L88
 1944              		.loc 1 410 0 is_stmt 0 discriminator 1
 1945 05be 3A4B     		ldr	r3, .L97+8
 1946 05c0 1B68     		ldr	r3, [r3]
 1947 05c2 181C     		add	r0, r3, #0
 1948 05c4 FFF7FEFF 		bl	set_output_rates
 411:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Cube GeoMAG RV....output toggled, now is: %s.\r\n", (hal.report 
 412:.\invn.c      **** 		//print_command_console(tst);
 413:.\invn.c      **** 		break;
 1949              		.loc 1 413 0 is_stmt 1 discriminator 1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 43


 1950 05c8 FFE0     		b	.L67
 1951              	.L88:
 1952              		.loc 1 413 0 is_stmt 0
 1953 05ca FEE0     		b	.L67
 1954              	.L65:
 414:.\invn.c      **** #endif
 415:.\invn.c      **** 	
 416:.\invn.c      **** 	case 'v':
 417:.\invn.c      ****                 dmp_reset_fifo();
 1955              		.loc 1 417 0 is_stmt 1
 1956 05cc FFF7FEFF 		bl	dmp_reset_fifo
 418:.\invn.c      **** 		hal.report ^= PRINT_GRAVITY;
 1957              		.loc 1 418 0
 1958 05d0 334B     		ldr	r3, .L97
 1959 05d2 1B68     		ldr	r3, [r3]
 1960 05d4 8022     		mov	r2, #128
 1961 05d6 9200     		lsl	r2, r2, #2
 1962 05d8 5A40     		eor	r2, r3
 1963 05da 314B     		ldr	r3, .L97
 1964 05dc 1A60     		str	r2, [r3]
 419:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_GRAVITY, !!(hal.report & PRINT_GRAVITY));
 1965              		.loc 1 419 0
 1966 05de 304B     		ldr	r3, .L97
 1967 05e0 1A68     		ldr	r2, [r3]
 1968 05e2 8023     		mov	r3, #128
 1969 05e4 9B00     		lsl	r3, r3, #2
 1970 05e6 1340     		and	r3, r2
 1971 05e8 5A1E     		sub	r2, r3, #1
 1972 05ea 9341     		sbc	r3, r3, r2
 1973 05ec DBB2     		uxtb	r3, r3
 1974 05ee 0920     		mov	r0, #9
 1975 05f0 191C     		mov	r1, r3
 1976 05f2 FFF7FEFF 		bl	inv_enable_sensor
 420:.\invn.c      ****                 dmp_reset_odr_counters();
 1977              		.loc 1 420 0
 1978 05f6 FFF7FEFF 		bl	dmp_reset_odr_counters
 421:.\invn.c      ****                 if (hal.report & PRINT_GRAVITY) set_output_rates(current_output_rate);
 1979              		.loc 1 421 0
 1980 05fa 294B     		ldr	r3, .L97
 1981 05fc 1A68     		ldr	r2, [r3]
 1982 05fe 8023     		mov	r3, #128
 1983 0600 9B00     		lsl	r3, r3, #2
 1984 0602 1340     		and	r3, r2
 1985 0604 05D0     		beq	.L89
 1986              		.loc 1 421 0 is_stmt 0 discriminator 1
 1987 0606 284B     		ldr	r3, .L97+8
 1988 0608 1B68     		ldr	r3, [r3]
 1989 060a 181C     		add	r0, r3, #0
 1990 060c FFF7FEFF 		bl	set_output_rates
 422:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Gravity....output toggled, now is: %s.\r\n", (hal.report & PRINT
 423:.\invn.c      **** 		//print_command_console(tst);
 424:.\invn.c      **** 		break;
 1991              		.loc 1 424 0 is_stmt 1 discriminator 1
 1992 0610 DBE0     		b	.L67
 1993              	.L89:
 1994              		.loc 1 424 0 is_stmt 0
 1995 0612 DAE0     		b	.L67
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 44


 1996              	.L58:
 425:.\invn.c      **** 	case 'l':
 426:.\invn.c      ****                 dmp_reset_fifo();
 1997              		.loc 1 426 0 is_stmt 1
 1998 0614 FFF7FEFF 		bl	dmp_reset_fifo
 427:.\invn.c      **** 		hal.report ^= PRINT_LINEAR_ACCEL;
 1999              		.loc 1 427 0
 2000 0618 214B     		ldr	r3, .L97
 2001 061a 1B68     		ldr	r3, [r3]
 2002 061c 8022     		mov	r2, #128
 2003 061e 5200     		lsl	r2, r2, #1
 2004 0620 5A40     		eor	r2, r3
 2005 0622 1F4B     		ldr	r3, .L97
 2006 0624 1A60     		str	r2, [r3]
 428:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_LINEAR_ACCELERATION, !!(hal.report & PRINT_LINEAR_ACCEL));
 2007              		.loc 1 428 0
 2008 0626 1E4B     		ldr	r3, .L97
 2009 0628 1A68     		ldr	r2, [r3]
 2010 062a 8023     		mov	r3, #128
 2011 062c 5B00     		lsl	r3, r3, #1
 2012 062e 1340     		and	r3, r2
 2013 0630 5A1E     		sub	r2, r3, #1
 2014 0632 9341     		sbc	r3, r3, r2
 2015 0634 DBB2     		uxtb	r3, r3
 2016 0636 0A20     		mov	r0, #10
 2017 0638 191C     		mov	r1, r3
 2018 063a FFF7FEFF 		bl	inv_enable_sensor
 429:.\invn.c      ****                 dmp_reset_odr_counters();
 2019              		.loc 1 429 0
 2020 063e FFF7FEFF 		bl	dmp_reset_odr_counters
 430:.\invn.c      ****                 if (hal.report & PRINT_LINEAR_ACCEL) set_output_rates(current_output_rate);
 2021              		.loc 1 430 0
 2022 0642 174B     		ldr	r3, .L97
 2023 0644 1A68     		ldr	r2, [r3]
 2024 0646 8023     		mov	r3, #128
 2025 0648 5B00     		lsl	r3, r3, #1
 2026 064a 1340     		and	r3, r2
 2027 064c 05D0     		beq	.L90
 2028              		.loc 1 430 0 is_stmt 0 discriminator 1
 2029 064e 164B     		ldr	r3, .L97+8
 2030 0650 1B68     		ldr	r3, [r3]
 2031 0652 181C     		add	r0, r3, #0
 2032 0654 FFF7FEFF 		bl	set_output_rates
 431:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Linear Accel....output toggled, now is: %s.\r\n", (hal.report & 
 432:.\invn.c      **** 		//print_command_console(tst);
 433:.\invn.c      **** 		break;
 2033              		.loc 1 433 0 is_stmt 1 discriminator 1
 2034 0658 B7E0     		b	.L67
 2035              	.L90:
 2036              		.loc 1 433 0 is_stmt 0
 2037 065a B6E0     		b	.L67
 2038              	.L60:
 434:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 435:.\invn.c      **** 	case 'o':
 436:.\invn.c      ****                 dmp_reset_fifo();
 2039              		.loc 1 436 0 is_stmt 1
 2040 065c FFF7FEFF 		bl	dmp_reset_fifo
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 45


 437:.\invn.c      **** 		hal.report ^= PRINT_ORIENT;
 2041              		.loc 1 437 0
 2042 0660 0F4B     		ldr	r3, .L97
 2043 0662 1B68     		ldr	r3, [r3]
 2044 0664 8022     		mov	r2, #128
 2045 0666 5A40     		eor	r2, r3
 2046 0668 0D4B     		ldr	r3, .L97
 2047 066a 1A60     		str	r2, [r3]
 438:.\invn.c      **** 		inv_enable_sensor(ANDROID_SENSOR_ORIENTATION, !!(hal.report & PRINT_ORIENT));
 2048              		.loc 1 438 0
 2049 066c 0C4B     		ldr	r3, .L97
 2050 066e 1B68     		ldr	r3, [r3]
 2051 0670 8022     		mov	r2, #128
 2052 0672 1340     		and	r3, r2
 2053 0674 5A1E     		sub	r2, r3, #1
 2054 0676 9341     		sbc	r3, r3, r2
 2055 0678 DBB2     		uxtb	r3, r3
 2056 067a 0320     		mov	r0, #3
 2057 067c 191C     		mov	r1, r3
 2058 067e FFF7FEFF 		bl	inv_enable_sensor
 439:.\invn.c      ****                 dmp_reset_odr_counters();
 2059              		.loc 1 439 0
 2060 0682 FFF7FEFF 		bl	dmp_reset_odr_counters
 440:.\invn.c      ****                 if (hal.report & PRINT_ORIENT) set_output_rates(current_output_rate);
 2061              		.loc 1 440 0
 2062 0686 064B     		ldr	r3, .L97
 2063 0688 1B68     		ldr	r3, [r3]
 2064 068a 8022     		mov	r2, #128
 2065 068c 1340     		and	r3, r2
 2066 068e 05D0     		beq	.L91
 2067              		.loc 1 440 0 is_stmt 0 discriminator 1
 2068 0690 054B     		ldr	r3, .L97+8
 2069 0692 1B68     		ldr	r3, [r3]
 2070 0694 181C     		add	r0, r3, #0
 2071 0696 FFF7FEFF 		bl	set_output_rates
 441:.\invn.c      **** 		//INV_SPRINTF(tst, INV_TST_LEN, "Orientation....output toggled, now is: %s.\r\n", (hal.report & P
 442:.\invn.c      **** 		//print_command_console(tst);
 443:.\invn.c      **** 		break;
 2072              		.loc 1 443 0 is_stmt 1 discriminator 1
 2073 069a 96E0     		b	.L67
 2074              	.L91:
 2075              		.loc 1 443 0 is_stmt 0
 2076 069c 95E0     		b	.L67
 2077              	.L98:
 2078 069e C046     		.align	2
 2079              	.L97:
 2080 06a0 00000000 		.word	hal
 2081 06a4 0000E142 		.word	1122041856
 2082 06a8 00000000 		.word	current_output_rate
 2083 06ac 0000A040 		.word	1084227584
 2084 06b0 00007041 		.word	1097859072
 2085 06b4 0000F041 		.word	1106247680
 2086 06b8 00004C42 		.word	1112276992
 2087 06bc 00006242 		.word	1113718784
 2088 06c0 00007042 		.word	1114636288
 2089 06c4 0000CC42 		.word	1120665600
 2090 06c8 00006143 		.word	1130430464
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 46


 2091 06cc 00000000 		.word	dmp_bias
 2092              	.L64:
 444:.\invn.c      **** 
 445:.\invn.c      **** 	case 't':
 446:.\invn.c      **** 		dmp_reset_fifo();
 2093              		.loc 1 446 0 is_stmt 1
 2094 06d0 FFF7FEFF 		bl	dmp_reset_fifo
 2095              	.LBB2:
 447:.\invn.c      **** 		{
 448:.\invn.c      **** 			int sensors_bias[9] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 2096              		.loc 1 448 0
 2097 06d4 0C23     		mov	r3, #12
 2098 06d6 FB18     		add	r3, r7, r3
 2099 06d8 0022     		mov	r2, #0
 2100 06da 1A60     		str	r2, [r3]
 2101 06dc 0C23     		mov	r3, #12
 2102 06de FB18     		add	r3, r7, r3
 2103 06e0 0022     		mov	r2, #0
 2104 06e2 5A60     		str	r2, [r3, #4]
 2105 06e4 0C23     		mov	r3, #12
 2106 06e6 FB18     		add	r3, r7, r3
 2107 06e8 0022     		mov	r2, #0
 2108 06ea 9A60     		str	r2, [r3, #8]
 2109 06ec 0C23     		mov	r3, #12
 2110 06ee FB18     		add	r3, r7, r3
 2111 06f0 0022     		mov	r2, #0
 2112 06f2 DA60     		str	r2, [r3, #12]
 2113 06f4 0C23     		mov	r3, #12
 2114 06f6 FB18     		add	r3, r7, r3
 2115 06f8 0022     		mov	r2, #0
 2116 06fa 1A61     		str	r2, [r3, #16]
 2117 06fc 0C23     		mov	r3, #12
 2118 06fe FB18     		add	r3, r7, r3
 2119 0700 0022     		mov	r2, #0
 2120 0702 5A61     		str	r2, [r3, #20]
 2121 0704 0C23     		mov	r3, #12
 2122 0706 FB18     		add	r3, r7, r3
 2123 0708 0022     		mov	r2, #0
 2124 070a 9A61     		str	r2, [r3, #24]
 2125 070c 0C23     		mov	r3, #12
 2126 070e FB18     		add	r3, r7, r3
 2127 0710 0022     		mov	r2, #0
 2128 0712 DA61     		str	r2, [r3, #28]
 2129 0714 0C23     		mov	r3, #12
 2130 0716 FB18     		add	r3, r7, r3
 2131 0718 0022     		mov	r2, #0
 2132 071a 1A62     		str	r2, [r3, #32]
 449:.\invn.c      **** 			char pass_str[] = { "PASS" };
 2133              		.loc 1 449 0
 2134 071c 3823     		mov	r3, #56
 2135 071e FB18     		add	r3, r7, r3
 2136 0720 2C4A     		ldr	r2, .L99
 2137 0722 1168     		ldr	r1, [r2]
 2138 0724 1960     		str	r1, [r3]
 2139 0726 1279     		ldrb	r2, [r2, #4]
 2140 0728 1A71     		strb	r2, [r3, #4]
 450:.\invn.c      **** 			char fail_str[] = { "FAIL" };
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 47


 2141              		.loc 1 450 0
 2142 072a 3023     		mov	r3, #48
 2143 072c FB18     		add	r3, r7, r3
 2144 072e 2A4A     		ldr	r2, .L99+4
 2145 0730 1168     		ldr	r1, [r2]
 2146 0732 1960     		str	r1, [r3]
 2147 0734 1279     		ldrb	r2, [r2, #4]
 2148 0736 1A71     		strb	r2, [r3, #4]
 451:.\invn.c      **** 
 452:.\invn.c      **** 		//	INV_SPRINTF(tst, INV_TST_LEN, "Selftest...Started\r\n");
 453:.\invn.c      **** 		//	print_command_console(tst);
 454:.\invn.c      **** 
 455:.\invn.c      **** 			self_test_result = inv_mems_run_selftest();
 2149              		.loc 1 455 0
 2150 0738 FFF7FEFF 		bl	inv_mems_run_selftest
 2151 073c 021C     		mov	r2, r0
 2152 073e 274B     		ldr	r3, .L99+8
 2153 0740 1A60     		str	r2, [r3]
 456:.\invn.c      **** 			//            self_test_result = 0x4 | 0x0 | 0x0;
 457:.\invn.c      **** 			dmp_get_bias_20648(sensors_bias);
 2154              		.loc 1 457 0
 2155 0742 0C23     		mov	r3, #12
 2156 0744 FB18     		add	r3, r7, r3
 2157 0746 181C     		mov	r0, r3
 2158 0748 FFF7FEFF 		bl	dmp_get_bias_20648
 458:.\invn.c      **** 
 459:.\invn.c      **** 			dmp_bias[0] = a_average[0] * (1 << 11);   // Change from LSB to format expected by DMP
 2159              		.loc 1 459 0
 2160 074c 244B     		ldr	r3, .L99+12
 2161 074e 1B68     		ldr	r3, [r3]
 2162 0750 DA02     		lsl	r2, r3, #11
 2163 0752 244B     		ldr	r3, .L99+16
 2164 0754 1A60     		str	r2, [r3]
 460:.\invn.c      **** 			dmp_bias[1] = a_average[1] * (1 << 11);
 2165              		.loc 1 460 0
 2166 0756 224B     		ldr	r3, .L99+12
 2167 0758 5B68     		ldr	r3, [r3, #4]
 2168 075a DA02     		lsl	r2, r3, #11
 2169 075c 214B     		ldr	r3, .L99+16
 2170 075e 5A60     		str	r2, [r3, #4]
 461:.\invn.c      **** 			dmp_bias[2] = (a_average[2] - 16384)*(1 << 11); //remove the gravity and scale (FSR=2 in selftes
 2171              		.loc 1 461 0
 2172 0760 1F4B     		ldr	r3, .L99+12
 2173 0762 9B68     		ldr	r3, [r3, #8]
 2174 0764 204A     		ldr	r2, .L99+20
 2175 0766 9446     		mov	ip, r2
 2176 0768 6344     		add	r3, r3, ip
 2177 076a DA02     		lsl	r2, r3, #11
 2178 076c 1D4B     		ldr	r3, .L99+16
 2179 076e 9A60     		str	r2, [r3, #8]
 462:.\invn.c      **** 			int scale = 2000 / 250; //self-test uses 250dps FSR, main() set the FSR to 2000dps
 2180              		.loc 1 462 0
 2181 0770 0823     		mov	r3, #8
 2182 0772 3B64     		str	r3, [r7, #64]
 463:.\invn.c      **** 			dmp_bias[3] = (g_average[0] / scale)*(1 << 15);
 2183              		.loc 1 463 0
 2184 0774 1D4B     		ldr	r3, .L99+24
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 48


 2185 0776 1B68     		ldr	r3, [r3]
 2186 0778 181C     		mov	r0, r3
 2187 077a 396C     		ldr	r1, [r7, #64]
 2188 077c FFF7FEFF 		bl	__aeabi_idiv
 2189 0780 031C     		mov	r3, r0
 2190 0782 DA03     		lsl	r2, r3, #15
 2191 0784 174B     		ldr	r3, .L99+16
 2192 0786 DA60     		str	r2, [r3, #12]
 464:.\invn.c      **** 			dmp_bias[4] = (g_average[1] / scale)*(1 << 15);
 2193              		.loc 1 464 0
 2194 0788 184B     		ldr	r3, .L99+24
 2195 078a 5B68     		ldr	r3, [r3, #4]
 2196 078c 181C     		mov	r0, r3
 2197 078e 396C     		ldr	r1, [r7, #64]
 2198 0790 FFF7FEFF 		bl	__aeabi_idiv
 2199 0794 031C     		mov	r3, r0
 2200 0796 DA03     		lsl	r2, r3, #15
 2201 0798 124B     		ldr	r3, .L99+16
 2202 079a 1A61     		str	r2, [r3, #16]
 465:.\invn.c      **** 			dmp_bias[5] = (g_average[2] / scale)*(1 << 15);
 2203              		.loc 1 465 0
 2204 079c 134B     		ldr	r3, .L99+24
 2205 079e 9B68     		ldr	r3, [r3, #8]
 2206 07a0 181C     		mov	r0, r3
 2207 07a2 396C     		ldr	r1, [r7, #64]
 2208 07a4 FFF7FEFF 		bl	__aeabi_idiv
 2209 07a8 031C     		mov	r3, r0
 2210 07aa DA03     		lsl	r2, r3, #15
 2211 07ac 0D4B     		ldr	r3, .L99+16
 2212 07ae 5A61     		str	r2, [r3, #20]
 466:.\invn.c      **** 
 467:.\invn.c      **** 		//	INV_SPRINTF(tst, INV_TST_LEN, "Selftest...Done...Ret=%d\r\n", self_test_result);
 468:.\invn.c      **** 		//	print_command_console(tst);
 469:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Result: Compass=%s, Accel=%s, Gyro=%s\r\n", (self_test_result &
 470:.\invn.c      **** //			print_command_console(tst);
 471:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Accel Average (LSB@FSR 2g)\r\n");
 472:.\invn.c      **** //			print_command_console(tst);
 473:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "\tX:%d Y:%d Z:%d\r\n", a_average[0], a_average[1], a_average[2]
 474:.\invn.c      **** //			print_command_console(tst);
 475:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Gyro Average (LSB@FSR 250dps)\r\n");
 476:.\invn.c      **** //			print_command_console(tst);
 477:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "\tX:%d Y:%d Z:%d\r\n", g_average[0], g_average[1], g_average[2]
 478:.\invn.c      **** //			print_command_console(tst);
 479:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Factory Cal - Accel DMP biases: \tX:%d Y:%d Z:%d\r\n", dmp_bias
 480:.\invn.c      **** //			print_command_console(tst);
 481:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Factory Cal - Gyro DMP biases:  \tX:%d Y:%d Z:%d\r\n", dmp_bias
 482:.\invn.c      **** //			print_command_console(tst);
 483:.\invn.c      **** 
 484:.\invn.c      **** 			if ((self_test_result & 0x3) == 0x3) {//Acc-Gyro self-test is passed already      
 2213              		.loc 1 484 0
 2214 07b0 0A4B     		ldr	r3, .L99+8
 2215 07b2 1B68     		ldr	r3, [r3]
 2216 07b4 0322     		mov	r2, #3
 2217 07b6 1340     		and	r3, r2
 2218 07b8 032B     		cmp	r3, #3
 2219 07ba 04D1     		bne	.L92
 485:.\invn.c      **** //				INV_SPRINTF(tst, INV_TST_LEN, "\r\nSetting the DMP biases with one-axis factory calibration v
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 49


 486:.\invn.c      **** 				dmp_set_bias_20648(dmp_bias); //update the DMP biases
 2220              		.loc 1 486 0
 2221 07bc 094B     		ldr	r3, .L99+16
 2222 07be 181C     		mov	r0, r3
 2223 07c0 FFF7FEFF 		bl	dmp_set_bias_20648
 2224              	.LBE2:
 487:.\invn.c      **** 			}
 488:.\invn.c      ****                         
 489:.\invn.c      **** //                        print_command_console("\n\n**RESTART BOARD**\n");
 490:.\invn.c      **** 
 491:.\invn.c      **** 		}
 492:.\invn.c      **** 		break;
 2225              		.loc 1 492 0
 2226 07c4 01E0     		b	.L67
 2227              	.L92:
 2228 07c6 00E0     		b	.L67
 2229              	.L94:
 493:.\invn.c      **** #endif
 494:.\invn.c      **** 		//case SHOW_COMMANDS:
 495:.\invn.c      **** 	default:
 496:.\invn.c      **** //	print_command_console("\r\n");
 497:.\invn.c      **** //        print_command_console("Press 'a' to toggle ACCEL output....................\r\n");       
 498:.\invn.c      **** //        print_command_console("Press 'g' to toggle Gyro output.....................\r\n");
 499:.\invn.c      **** //        print_command_console("Press 'G' to toggle Raw Gyro output.................\r\n");       
 500:.\invn.c      **** //        print_command_console("Press 'p' to toggle Step Counter output.............\r\n");     
 501:.\invn.c      **** //        print_command_console("Press 'd' to toggle Step Detector output............\r\n");
 502:.\invn.c      **** //        print_command_console("Press 'm' to toggle SMD Significant Motion output...\r\n");
 503:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)        
 504:.\invn.c      **** //        print_command_console("Press 'c' to toggle Compass output..................\r\n"); 
 505:.\invn.c      **** //        print_command_console("Press 'C' to toggle Raw Compass output..............\r\n");
 506:.\invn.c      **** #endif
 507:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20630)
 508:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 509:.\invn.c      **** //        print_command_console("Press 'b' to toggle Basic Activity Classifier output...\r\n");
 510:.\invn.c      **** //        print_command_console("Press 'T' to toggle Tilt output...\r\n");
 511:.\invn.c      **** //        print_command_console("Press 'F' to toggle Flip Pickup output...\r\n");
 512:.\invn.c      **** #endif
 513:.\invn.c      **** #endif
 514:.\invn.c      **** //        print_command_console("Press 'r' to toggle Game Rotation Vector output.....\r\n");       
 515:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)        
 516:.\invn.c      **** //        print_command_console("Press 'R' to toggle Rotation Vector output..........\r\n");
 517:.\invn.c      **** //        print_command_console("Press 'e' to toggle GeoMag Vector output............\r\n");
 518:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS
 519:.\invn.c      ****         print_command_console("Press 'l' to toggle Linear Acceleration output............\r\n");
 520:.\invn.c      ****         print_command_console("Press 'v' to toggle Gravity output............\r\n");
 521:.\invn.c      ****         print_command_console("Press 'o' to toggle Orientation output............\r\n");
 522:.\invn.c      **** #endif
 523:.\invn.c      **** 
 524:.\invn.c      **** //        print_command_console("Press 't' to invoke Self test.......................\r\n");
 525:.\invn.c      **** //        print_command_console("Press 'k' to get the DMP Biases.................\r\n");
 526:.\invn.c      **** #endif
 527:.\invn.c      **** //        print_command_console("Press '0' to set ODR @ 1Hz..........................\r\n");
 528:.\invn.c      **** //        print_command_console("Press '1' to set ODR @ 5Hz..........................\r\n");
 529:.\invn.c      **** //	print_command_console("Press '2' to set ODR @ 15Hz.........................\r\n");
 530:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20609) 
 531:.\invn.c      ****         print_command_console("Press '3' to set ODR @ 50Hz.........................\r\n");
 532:.\invn.c      ****         print_command_console("Press '4' to set ODR @ 100Hz.........................\r\n");
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 50


 533:.\invn.c      ****         print_command_console("Press '5' to set ODR @ 200Hz.........................\r\n");
 534:.\invn.c      **** #endif
 535:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)         
 536:.\invn.c      **** //        print_command_console("Press '3' to set ODR @ 30Hz.........................\r\n");
 537:.\invn.c      **** //        print_command_console("Press '4' to set ODR @ 51Hz.........................\r\n");
 538:.\invn.c      **** //        print_command_console("Press '5' to set ODR @ 56Hz.........................\r\n");
 539:.\invn.c      **** //        print_command_console("Press '6' to set ODR @ 60Hz.........................\r\n");
 540:.\invn.c      **** //        print_command_console("Press '7' to set ODR @ 102Hz.........................\r\n");
 541:.\invn.c      **** //        print_command_console("Press '8' to set ODR @ 112Hz.........................\r\n");
 542:.\invn.c      **** //        print_command_console("Press '9' to set ODR @ 225Hz.........................\r\n");
 543:.\invn.c      **** //        print_command_console("Press 'Q' to toggle Cube Rotation Vector output........\r\n");
 544:.\invn.c      **** //        print_command_console("Press '@' to toggle Cube GeoMAG Vector output..........\r\n");    
 545:.\invn.c      **** #endif
 546:.\invn.c      **** //        print_command_console("Press 'q' to toggle Cube Game Rotation Vector output...\r\n");
 547:.\invn.c      **** //        print_command_console("\r\n");
 548:.\invn.c      ****         break;
 2230              		.loc 1 548 0
 2231 07c8 C046     		mov	r8, r8
 2232              	.L67:
 549:.\invn.c      **** 	}
 550:.\invn.c      **** 
 551:.\invn.c      **** 	return 1;
 2233              		.loc 1 551 0
 2234 07ca 0123     		mov	r3, #1
 552:.\invn.c      **** }
 2235              		.loc 1 552 0
 2236 07cc 181C     		mov	r0, r3
 2237 07ce BD46     		mov	sp, r7
 2238 07d0 12B0     		add	sp, sp, #72
 2239              		@ sp needed
 2240 07d2 80BD     		pop	{r7, pc}
 2241              	.L100:
 2242              		.align	2
 2243              	.L99:
 2244 07d4 04000000 		.word	.LC6
 2245 07d8 0C000000 		.word	.LC8
 2246 07dc 00000000 		.word	self_test_result
 2247 07e0 00000000 		.word	a_average
 2248 07e4 00000000 		.word	dmp_bias
 2249 07e8 00C0FFFF 		.word	-16384
 2250 07ec 00000000 		.word	g_average
 2251              		.cfi_endproc
 2252              	.LFE43:
 2253              		.size	handle_char_input, .-handle_char_input
 2254              		.section	.text.invn_perform_selftest,"ax",%progbits
 2255              		.align	2
 2256              		.global	invn_perform_selftest
 2257              		.code	16
 2258              		.thumb_func
 2259              		.type	invn_perform_selftest, %function
 2260              	invn_perform_selftest:
 2261              	.LFB44:
 553:.\invn.c      **** 
 554:.\invn.c      **** void invn_perform_selftest(void)
 555:.\invn.c      **** {
 2262              		.loc 1 555 0
 2263              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 51


 2264 0000 80B5     		push	{r7, lr}
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 7, -8
 2267              		.cfi_offset 14, -4
 2268 0002 8EB0     		sub	sp, sp, #56
 2269              		.cfi_def_cfa_offset 64
 2270 0004 00AF     		add	r7, sp, #0
 2271              		.cfi_def_cfa_register 7
 556:.\invn.c      **** 			dmp_reset_fifo();
 2272              		.loc 1 556 0
 2273 0006 FFF7FEFF 		bl	dmp_reset_fifo
 557:.\invn.c      **** 			int sensors_bias[9] = { 0, 0, 0, 0, 0, 0, 0, 0, 0 };
 2274              		.loc 1 557 0
 2275 000a 1023     		mov	r3, #16
 2276 000c FB18     		add	r3, r7, r3
 2277 000e 0022     		mov	r2, #0
 2278 0010 1A60     		str	r2, [r3]
 2279 0012 1023     		mov	r3, #16
 2280 0014 FB18     		add	r3, r7, r3
 2281 0016 0022     		mov	r2, #0
 2282 0018 5A60     		str	r2, [r3, #4]
 2283 001a 1023     		mov	r3, #16
 2284 001c FB18     		add	r3, r7, r3
 2285 001e 0022     		mov	r2, #0
 2286 0020 9A60     		str	r2, [r3, #8]
 2287 0022 1023     		mov	r3, #16
 2288 0024 FB18     		add	r3, r7, r3
 2289 0026 0022     		mov	r2, #0
 2290 0028 DA60     		str	r2, [r3, #12]
 2291 002a 1023     		mov	r3, #16
 2292 002c FB18     		add	r3, r7, r3
 2293 002e 0022     		mov	r2, #0
 2294 0030 1A61     		str	r2, [r3, #16]
 2295 0032 1023     		mov	r3, #16
 2296 0034 FB18     		add	r3, r7, r3
 2297 0036 0022     		mov	r2, #0
 2298 0038 5A61     		str	r2, [r3, #20]
 2299 003a 1023     		mov	r3, #16
 2300 003c FB18     		add	r3, r7, r3
 2301 003e 0022     		mov	r2, #0
 2302 0040 9A61     		str	r2, [r3, #24]
 2303 0042 1023     		mov	r3, #16
 2304 0044 FB18     		add	r3, r7, r3
 2305 0046 0022     		mov	r2, #0
 2306 0048 DA61     		str	r2, [r3, #28]
 2307 004a 1023     		mov	r3, #16
 2308 004c FB18     		add	r3, r7, r3
 2309 004e 0022     		mov	r2, #0
 2310 0050 1A62     		str	r2, [r3, #32]
 558:.\invn.c      **** 			char pass_str[] = { "PASS" };
 2311              		.loc 1 558 0
 2312 0052 0823     		mov	r3, #8
 2313 0054 FB18     		add	r3, r7, r3
 2314 0056 2A4A     		ldr	r2, .L103
 2315 0058 1168     		ldr	r1, [r2]
 2316 005a 1960     		str	r1, [r3]
 2317 005c 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 52


 2318 005e 1A71     		strb	r2, [r3, #4]
 559:.\invn.c      **** 			char fail_str[] = { "FAIL" };
 2319              		.loc 1 559 0
 2320 0060 3B1C     		mov	r3, r7
 2321 0062 284A     		ldr	r2, .L103+4
 2322 0064 1168     		ldr	r1, [r2]
 2323 0066 1960     		str	r1, [r3]
 2324 0068 1279     		ldrb	r2, [r2, #4]
 2325 006a 1A71     		strb	r2, [r3, #4]
 560:.\invn.c      **** 
 561:.\invn.c      **** 			self_test_result = inv_mems_run_selftest();
 2326              		.loc 1 561 0
 2327 006c FFF7FEFF 		bl	inv_mems_run_selftest
 2328 0070 021C     		mov	r2, r0
 2329 0072 254B     		ldr	r3, .L103+8
 2330 0074 1A60     		str	r2, [r3]
 562:.\invn.c      **** 			dmp_get_bias_20648(sensors_bias);
 2331              		.loc 1 562 0
 2332 0076 1023     		mov	r3, #16
 2333 0078 FB18     		add	r3, r7, r3
 2334 007a 181C     		mov	r0, r3
 2335 007c FFF7FEFF 		bl	dmp_get_bias_20648
 563:.\invn.c      **** 
 564:.\invn.c      **** 			dmp_bias[0] = a_average[0] * (1 << 11);   // Change from LSB to format expected by DMP
 2336              		.loc 1 564 0
 2337 0080 224B     		ldr	r3, .L103+12
 2338 0082 1B68     		ldr	r3, [r3]
 2339 0084 DA02     		lsl	r2, r3, #11
 2340 0086 224B     		ldr	r3, .L103+16
 2341 0088 1A60     		str	r2, [r3]
 565:.\invn.c      **** 			dmp_bias[1] = a_average[1] * (1 << 11);
 2342              		.loc 1 565 0
 2343 008a 204B     		ldr	r3, .L103+12
 2344 008c 5B68     		ldr	r3, [r3, #4]
 2345 008e DA02     		lsl	r2, r3, #11
 2346 0090 1F4B     		ldr	r3, .L103+16
 2347 0092 5A60     		str	r2, [r3, #4]
 566:.\invn.c      **** 			dmp_bias[2] = (a_average[2] - 16384)*(1 << 11); //remove the gravity and scale (FSR=2 in selftes
 2348              		.loc 1 566 0
 2349 0094 1D4B     		ldr	r3, .L103+12
 2350 0096 9B68     		ldr	r3, [r3, #8]
 2351 0098 1E4A     		ldr	r2, .L103+20
 2352 009a 9446     		mov	ip, r2
 2353 009c 6344     		add	r3, r3, ip
 2354 009e DA02     		lsl	r2, r3, #11
 2355 00a0 1B4B     		ldr	r3, .L103+16
 2356 00a2 9A60     		str	r2, [r3, #8]
 567:.\invn.c      **** 			int scale = 2000 / 250; //self-test uses 250dps FSR, main() set the FSR to 2000dps
 2357              		.loc 1 567 0
 2358 00a4 0823     		mov	r3, #8
 2359 00a6 7B63     		str	r3, [r7, #52]
 568:.\invn.c      **** 			dmp_bias[3] = (g_average[0] / scale)*(1 << 15);
 2360              		.loc 1 568 0
 2361 00a8 1B4B     		ldr	r3, .L103+24
 2362 00aa 1B68     		ldr	r3, [r3]
 2363 00ac 181C     		mov	r0, r3
 2364 00ae 796B     		ldr	r1, [r7, #52]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 53


 2365 00b0 FFF7FEFF 		bl	__aeabi_idiv
 2366 00b4 031C     		mov	r3, r0
 2367 00b6 DA03     		lsl	r2, r3, #15
 2368 00b8 154B     		ldr	r3, .L103+16
 2369 00ba DA60     		str	r2, [r3, #12]
 569:.\invn.c      **** 			dmp_bias[4] = (g_average[1] / scale)*(1 << 15);
 2370              		.loc 1 569 0
 2371 00bc 164B     		ldr	r3, .L103+24
 2372 00be 5B68     		ldr	r3, [r3, #4]
 2373 00c0 181C     		mov	r0, r3
 2374 00c2 796B     		ldr	r1, [r7, #52]
 2375 00c4 FFF7FEFF 		bl	__aeabi_idiv
 2376 00c8 031C     		mov	r3, r0
 2377 00ca DA03     		lsl	r2, r3, #15
 2378 00cc 104B     		ldr	r3, .L103+16
 2379 00ce 1A61     		str	r2, [r3, #16]
 570:.\invn.c      **** 			dmp_bias[5] = (g_average[2] / scale)*(1 << 15);
 2380              		.loc 1 570 0
 2381 00d0 114B     		ldr	r3, .L103+24
 2382 00d2 9B68     		ldr	r3, [r3, #8]
 2383 00d4 181C     		mov	r0, r3
 2384 00d6 796B     		ldr	r1, [r7, #52]
 2385 00d8 FFF7FEFF 		bl	__aeabi_idiv
 2386 00dc 031C     		mov	r3, r0
 2387 00de DA03     		lsl	r2, r3, #15
 2388 00e0 0B4B     		ldr	r3, .L103+16
 2389 00e2 5A61     		str	r2, [r3, #20]
 571:.\invn.c      **** 
 572:.\invn.c      **** 		//	INV_SPRINTF(tst, INV_TST_LEN, "Selftest...Done...Ret=%d\r\n", self_test_result);
 573:.\invn.c      **** 		//	print_command_console(tst);
 574:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Result: Compass=%s, Accel=%s, Gyro=%s\r\n", (self_test_result &
 575:.\invn.c      **** //			print_command_console(tst);
 576:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Accel Average (LSB@FSR 2g)\r\n");
 577:.\invn.c      **** //			print_command_console(tst);
 578:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "\tX:%d Y:%d Z:%d\r\n", a_average[0], a_average[1], a_average[2]
 579:.\invn.c      **** //			print_command_console(tst);
 580:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Gyro Average (LSB@FSR 250dps)\r\n");
 581:.\invn.c      **** //			print_command_console(tst);
 582:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "\tX:%d Y:%d Z:%d\r\n", g_average[0], g_average[1], g_average[2]
 583:.\invn.c      **** //			print_command_console(tst);
 584:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Factory Cal - Accel DMP biases: \tX:%d Y:%d Z:%d\r\n", dmp_bias
 585:.\invn.c      **** //			print_command_console(tst);
 586:.\invn.c      **** //			INV_SPRINTF(tst, INV_TST_LEN, "Factory Cal - Gyro DMP biases:  \tX:%d Y:%d Z:%d\r\n", dmp_bias
 587:.\invn.c      **** //			print_command_console(tst);
 588:.\invn.c      **** 
 589:.\invn.c      **** 			if ((self_test_result & 0x3) == 0x3) {//Acc-Gyro self-test is passed already      
 2390              		.loc 1 589 0
 2391 00e4 084B     		ldr	r3, .L103+8
 2392 00e6 1B68     		ldr	r3, [r3]
 2393 00e8 0322     		mov	r2, #3
 2394 00ea 1340     		and	r3, r2
 2395 00ec 032B     		cmp	r3, #3
 2396 00ee 03D1     		bne	.L101
 590:.\invn.c      **** //				INV_SPRINTF(tst, INV_TST_LEN, "\r\nSetting the DMP biases with one-axis factory calibration v
 591:.\invn.c      **** 				dmp_set_bias_20648(dmp_bias); //update the DMP biases
 2397              		.loc 1 591 0
 2398 00f0 074B     		ldr	r3, .L103+16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 54


 2399 00f2 181C     		mov	r0, r3
 2400 00f4 FFF7FEFF 		bl	dmp_set_bias_20648
 2401              	.L101:
 592:.\invn.c      **** 			}
 593:.\invn.c      **** 
 594:.\invn.c      **** }
 2402              		.loc 1 594 0
 2403 00f8 BD46     		mov	sp, r7
 2404 00fa 0EB0     		add	sp, sp, #56
 2405              		@ sp needed
 2406 00fc 80BD     		pop	{r7, pc}
 2407              	.L104:
 2408 00fe C046     		.align	2
 2409              	.L103:
 2410 0100 04000000 		.word	.LC6
 2411 0104 0C000000 		.word	.LC8
 2412 0108 00000000 		.word	self_test_result
 2413 010c 00000000 		.word	a_average
 2414 0110 00000000 		.word	dmp_bias
 2415 0114 00C0FFFF 		.word	-16384
 2416 0118 00000000 		.word	g_average
 2417              		.cfi_endproc
 2418              	.LFE44:
 2419              		.size	invn_perform_selftest, .-invn_perform_selftest
 2420              		.section	.text.process_sensor_output,"ax",%progbits
 2421              		.align	2
 2422              		.global	process_sensor_output
 2423              		.code	16
 2424              		.thumb_func
 2425              		.type	process_sensor_output, %function
 2426              	process_sensor_output:
 2427              	.LFB45:
 595:.\invn.c      **** 
 596:.\invn.c      **** void process_sensor_output()
 597:.\invn.c      **** {
 2428              		.loc 1 597 0
 2429              		.cfi_startproc
 2430 0000 80B5     		push	{r7, lr}
 2431              		.cfi_def_cfa_offset 8
 2432              		.cfi_offset 7, -8
 2433              		.cfi_offset 14, -4
 2434 0002 86B0     		sub	sp, sp, #24
 2435              		.cfi_def_cfa_offset 32
 2436 0004 00AF     		add	r7, sp, #0
 2437              		.cfi_def_cfa_register 7
 598:.\invn.c      **** 	
 599:.\invn.c      **** 	signed long  long_quat[3] = { 0 };
 2438              		.loc 1 599 0
 2439 0006 0C23     		mov	r3, #12
 2440 0008 FB18     		add	r3, r7, r3
 2441 000a 0022     		mov	r2, #0
 2442 000c 1A60     		str	r2, [r3]
 2443 000e 0022     		mov	r2, #0
 2444 0010 5A60     		str	r2, [r3, #4]
 2445 0012 0022     		mov	r2, #0
 2446 0014 9A60     		str	r2, [r3, #8]
 600:.\invn.c      **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 55


 601:.\invn.c      **** 	if (hal.report & PRINT_ACCEL) {
 2447              		.loc 1 601 0
 2448 0016 624B     		ldr	r3, .L123
 2449 0018 1B68     		ldr	r3, [r3]
 2450 001a 0122     		mov	r2, #1
 2451 001c 1340     		and	r3, r2
 2452 001e 11D0     		beq	.L106
 602:.\invn.c      **** 		if (accel_data_was_set == 1) {
 2453              		.loc 1 602 0
 2454 0020 604B     		ldr	r3, .L123+4
 2455 0022 1B88     		ldrh	r3, [r3]
 2456 0024 012B     		cmp	r3, #1
 2457 0026 0DD1     		bne	.L106
 603:.\invn.c      **** 			if (self_test_result && (accel_accuracy == 0)) //self-test is done already
 2458              		.loc 1 603 0
 2459 0028 5F4B     		ldr	r3, .L123+8
 2460 002a 1B68     		ldr	r3, [r3]
 2461 002c 002B     		cmp	r3, #0
 2462 002e 06D0     		beq	.L107
 2463              		.loc 1 603 0 is_stmt 0 discriminator 1
 2464 0030 5E4B     		ldr	r3, .L123+12
 2465 0032 1B68     		ldr	r3, [r3]
 2466 0034 002B     		cmp	r3, #0
 2467 0036 02D1     		bne	.L107
 604:.\invn.c      **** 				accel_accuracy = 1; //accuracy reaches intermediate level after one-axis factory cal--yd
 2468              		.loc 1 604 0 is_stmt 1
 2469 0038 5C4B     		ldr	r3, .L123+12
 2470 003a 0122     		mov	r2, #1
 2471 003c 1A60     		str	r2, [r3]
 2472              	.L107:
 605:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "Accel Data\t %8.5f, %8.5f, %8.5f, %d, %lld\r\n", accel_float[0]
 606:.\invn.c      **** 			accel_data_was_set = 0;
 2473              		.loc 1 606 0
 2474 003e 594B     		ldr	r3, .L123+4
 2475 0040 0022     		mov	r2, #0
 2476 0042 1A80     		strh	r2, [r3]
 2477              	.L106:
 607:.\invn.c      **** 		}
 608:.\invn.c      **** 	}
 609:.\invn.c      **** 
 610:.\invn.c      **** 	if (hal.report & PRINT_GYRO) {
 2478              		.loc 1 610 0
 2479 0044 564B     		ldr	r3, .L123
 2480 0046 1B68     		ldr	r3, [r3]
 2481 0048 0222     		mov	r2, #2
 2482 004a 1340     		and	r3, r2
 2483 004c 11D0     		beq	.L108
 611:.\invn.c      **** 		if (gyro_data_was_set == 1) {
 2484              		.loc 1 611 0
 2485 004e 584B     		ldr	r3, .L123+16
 2486 0050 1B88     		ldrh	r3, [r3]
 2487 0052 012B     		cmp	r3, #1
 2488 0054 0DD1     		bne	.L108
 612:.\invn.c      **** 			if (self_test_result && (gyro_accuracy == 0)) //self-test is done already
 2489              		.loc 1 612 0
 2490 0056 544B     		ldr	r3, .L123+8
 2491 0058 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 56


 2492 005a 002B     		cmp	r3, #0
 2493 005c 06D0     		beq	.L109
 2494              		.loc 1 612 0 is_stmt 0 discriminator 1
 2495 005e 554B     		ldr	r3, .L123+20
 2496 0060 1B68     		ldr	r3, [r3]
 2497 0062 002B     		cmp	r3, #0
 2498 0064 02D1     		bne	.L109
 613:.\invn.c      **** 				gyro_accuracy = 1; //accuracy reaches intermediate level after one-axis factory cal--yd
 2499              		.loc 1 613 0 is_stmt 1
 2500 0066 534B     		ldr	r3, .L123+20
 2501 0068 0122     		mov	r2, #1
 2502 006a 1A60     		str	r2, [r3]
 2503              	.L109:
 614:.\invn.c      ****                         //INV_SPRINTF(tst, INV_TST_LEN, "Gyro Data\t %7.5f, %7.5f, %7.5f, %d, %lld\
 615:.\invn.c      **** 			gyro_data_was_set = 0;
 2504              		.loc 1 615 0
 2505 006c 504B     		ldr	r3, .L123+16
 2506 006e 0022     		mov	r2, #0
 2507 0070 1A80     		strh	r2, [r3]
 2508              	.L108:
 616:.\invn.c      **** 		}
 617:.\invn.c      **** 	}
 618:.\invn.c      **** 
 619:.\invn.c      **** 	if (hal.report & PRINT_RAW_GYRO) {
 2509              		.loc 1 619 0
 2510 0072 4B4B     		ldr	r3, .L123
 2511 0074 1B68     		ldr	r3, [r3]
 2512 0076 0422     		mov	r2, #4
 2513 0078 1340     		and	r3, r2
 2514 007a 06D0     		beq	.L110
 620:.\invn.c      **** #if ((MEMS_CHIP == HW_ICM30630) || (MEMS_CHIP == HW_ICM20648) || (MEMS_CHIP == HW_ICM20609))
 621:.\invn.c      **** 		if (raw_gyro_data_was_set == 1) {
 2515              		.loc 1 621 0
 2516 007c 4E4B     		ldr	r3, .L123+24
 2517 007e 1B88     		ldrh	r3, [r3]
 2518 0080 012B     		cmp	r3, #1
 2519 0082 02D1     		bne	.L110
 622:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "Raw Gyro Data\t %7.5f, %7.5f, %7.5f,%d, %lld\r\n", gyro_raw_flo
 623:.\invn.c      ****             //            INV_SPRINTF(tst, INV_TST_LEN, "Gyro Bias\t %7.5f, %7.5f, %7.5f\r\n", gyro
 624:.\invn.c      **** 			raw_gyro_data_was_set = 0;
 2520              		.loc 1 624 0
 2521 0084 4C4B     		ldr	r3, .L123+24
 2522 0086 0022     		mov	r2, #0
 2523 0088 1A80     		strh	r2, [r3]
 2524              	.L110:
 625:.\invn.c      **** 		}
 626:.\invn.c      **** #endif
 627:.\invn.c      **** 	}
 628:.\invn.c      **** 
 629:.\invn.c      **** 	if (quat6_data_was_set == 1){
 2525              		.loc 1 629 0
 2526 008a 4C4B     		ldr	r3, .L123+28
 2527 008c 1B88     		ldrh	r3, [r3]
 2528 008e 012B     		cmp	r3, #1
 2529 0090 14D1     		bne	.L111
 630:.\invn.c      **** 		if (hal.report & PRINT_GRV) {
 631:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "Game RV\t %7.5f, %7.5f, %7.5f, %7.5f, %lld\r\n", grv_float[0], 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 57


 632:.\invn.c      **** 			//print_data_console(tst);
 633:.\invn.c      ****                 }
 634:.\invn.c      ****                 if (hal.report & PRINT_CUBE_GRV) {
 2530              		.loc 1 634 0
 2531 0092 434B     		ldr	r3, .L123
 2532 0094 1A68     		ldr	r2, [r3]
 2533 0096 8023     		mov	r3, #128
 2534 0098 5B02     		lsl	r3, r3, #9
 2535 009a 1340     		and	r3, r2
 2536 009c 0BD0     		beq	.L112
 635:.\invn.c      **** 			dmp_get_6quaternion(long_quat);
 2537              		.loc 1 635 0
 2538 009e 0C23     		mov	r3, #12
 2539 00a0 FB18     		add	r3, r7, r3
 2540 00a2 181C     		mov	r0, r3
 2541 00a4 FFF7FEFF 		bl	dmp_get_6quaternion
 636:.\invn.c      **** 			inv_compute_scalar_part(long_quat, result_quat);
 2542              		.loc 1 636 0
 2543 00a8 0C23     		mov	r3, #12
 2544 00aa FA18     		add	r2, r7, r3
 2545 00ac 444B     		ldr	r3, .L123+32
 2546 00ae 101C     		mov	r0, r2
 2547 00b0 191C     		mov	r1, r3
 2548 00b2 FFF7FEFF 		bl	inv_compute_scalar_part
 2549              	.L112:
 637:.\invn.c      **** 			//send_data_packet(PACKET_TYPE_QUAT, (void *)result_quat);
 638:.\invn.c      ****                 }
 639:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)                
 640:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS       
 641:.\invn.c      **** 		if (hal.report & PRINT_GRAVITY) {
 642:.\invn.c      **** 			INV_SPRINTF(tst, INV_TST_LEN, "Gravity\t %7.5f, %7.5f, %7.5f, %lld\r\n", gravityFloat[0], gravit
 643:.\invn.c      **** 			print_data_console(tst);
 644:.\invn.c      **** 		}
 645:.\invn.c      **** 		if (hal.report & PRINT_LINEAR_ACCEL) {
 646:.\invn.c      **** 			INV_SPRINTF(tst, INV_TST_LEN, "LinearAcc\t %7.5f, %7.5f, %7.5f, %lld\r\n", linAccFloat[0], linAc
 647:.\invn.c      **** 			print_data_console(tst);
 648:.\invn.c      **** 		}
 649:.\invn.c      ****                 
 650:.\invn.c      **** #endif      
 651:.\invn.c      **** #endif
 652:.\invn.c      ****                 quat6_data_was_set = 0;
 2550              		.loc 1 652 0
 2551 00b6 414B     		ldr	r3, .L123+28
 2552 00b8 0022     		mov	r2, #0
 2553 00ba 1A80     		strh	r2, [r3]
 2554              	.L111:
 653:.\invn.c      **** 	}
 654:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 655:.\invn.c      ****         if (hal.report & PRINT_COMPASS) {
 2555              		.loc 1 655 0
 2556 00bc 384B     		ldr	r3, .L123
 2557 00be 1B68     		ldr	r3, [r3]
 2558 00c0 0822     		mov	r2, #8
 2559 00c2 1340     		and	r3, r2
 2560 00c4 06D0     		beq	.L113
 656:.\invn.c      **** 		if (compass_data_was_set == 1) {
 2561              		.loc 1 656 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 58


 2562 00c6 3F4B     		ldr	r3, .L123+36
 2563 00c8 1B88     		ldrh	r3, [r3]
 2564 00ca 012B     		cmp	r3, #1
 2565 00cc 02D1     		bne	.L113
 657:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "Compass Data\t %7.5f, %7.5f, %7.5f,\t%d, %lld\r\n", compass_flo
 658:.\invn.c      **** 			compass_data_was_set = 0;
 2566              		.loc 1 658 0
 2567 00ce 3D4B     		ldr	r3, .L123+36
 2568 00d0 0022     		mov	r2, #0
 2569 00d2 1A80     		strh	r2, [r3]
 2570              	.L113:
 659:.\invn.c      **** 		}
 660:.\invn.c      **** 	}
 661:.\invn.c      **** 
 662:.\invn.c      **** 	if (hal.report & PRINT_RAW_COMPASS) {
 2571              		.loc 1 662 0
 2572 00d4 324B     		ldr	r3, .L123
 2573 00d6 1B68     		ldr	r3, [r3]
 2574 00d8 1022     		mov	r2, #16
 2575 00da 1340     		and	r3, r2
 2576 00dc 06D0     		beq	.L114
 663:.\invn.c      **** 		if (raw_compass_data_was_set == 1) {
 2577              		.loc 1 663 0
 2578 00de 3A4B     		ldr	r3, .L123+40
 2579 00e0 1B88     		ldrh	r3, [r3]
 2580 00e2 012B     		cmp	r3, #1
 2581 00e4 02D1     		bne	.L114
 664:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "Raw Compass Data\t %7.5f, %7.5f, %7.5f,\t%d, %lld\r\n", compass
 665:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "Compass Bias\t %7.3f, %7.3f, %7.3f\r\n", compass_bias[0], compa
 666:.\invn.c      **** 			raw_compass_data_was_set = 0;
 2582              		.loc 1 666 0
 2583 00e6 384B     		ldr	r3, .L123+40
 2584 00e8 0022     		mov	r2, #0
 2585 00ea 1A80     		strh	r2, [r3]
 2586              	.L114:
 667:.\invn.c      **** 		}
 668:.\invn.c      **** 	}
 669:.\invn.c      **** 
 670:.\invn.c      **** 		
 671:.\invn.c      **** 	if (quat9_data_was_set == 1) {
 2587              		.loc 1 671 0
 2588 00ec 374B     		ldr	r3, .L123+44
 2589 00ee 1B88     		ldrh	r3, [r3]
 2590 00f0 012B     		cmp	r3, #1
 2591 00f2 17D1     		bne	.L115
 672:.\invn.c      **** 		if (hal.report & PRINT_RV) {
 673:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "RV\t %7.5f, %7.5f, %7.5f, %7.5f, %d, %lld\r\n", rv_float[0], rv
 674:.\invn.c      **** 			//print_data_console(tst);
 675:.\invn.c      **** 		}
 676:.\invn.c      **** 		if (hal.report &  PRINT_CUBE_RV) {
 2592              		.loc 1 676 0
 2593 00f4 2A4B     		ldr	r3, .L123
 2594 00f6 1A68     		ldr	r2, [r3]
 2595 00f8 8023     		mov	r3, #128
 2596 00fa 9B02     		lsl	r3, r3, #10
 2597 00fc 1340     		and	r3, r2
 2598 00fe 11D0     		beq	.L115
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 59


 2599              	.LBB3:
 677:.\invn.c      ****                   long temp_long_quat[3];
 678:.\invn.c      **** 			dmp_get_9quaternion(long_quat);
 2600              		.loc 1 678 0
 2601 0100 0C23     		mov	r3, #12
 2602 0102 FB18     		add	r3, r7, r3
 2603 0104 181C     		mov	r0, r3
 2604 0106 FFF7FEFF 		bl	dmp_get_9quaternion
 679:.\invn.c      ****                         inv_convert_rotation_vector_1(long_quat, temp_long_quat);
 2605              		.loc 1 679 0
 2606 010a 0C23     		mov	r3, #12
 2607 010c FA18     		add	r2, r7, r3
 2608 010e 3B1C     		mov	r3, r7
 2609 0110 101C     		mov	r0, r2
 2610 0112 191C     		mov	r1, r3
 2611 0114 FFF7FEFF 		bl	inv_convert_rotation_vector_1
 680:.\invn.c      **** 			inv_compute_scalar_part(temp_long_quat, result_quat);
 2612              		.loc 1 680 0
 2613 0118 3A1C     		mov	r2, r7
 2614 011a 294B     		ldr	r3, .L123+32
 2615 011c 101C     		mov	r0, r2
 2616 011e 191C     		mov	r1, r3
 2617 0120 FFF7FEFF 		bl	inv_compute_scalar_part
 2618              	.L115:
 2619              	.LBE3:
 681:.\invn.c      **** 			//send_data_packet(PACKET_TYPE_QUAT, (void *)result_quat);
 682:.\invn.c      **** 
 683:.\invn.c      **** 		}
 684:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS
 685:.\invn.c      **** 		if (hal.report & PRINT_ORIENT) {
 686:.\invn.c      **** 			INV_SPRINTF(tst, INV_TST_LEN, "Orientation\t %7.5f, %7.5f, %7.5f, %lld\r\n", orientationFloat[0]
 687:.\invn.c      **** 			print_data_console(tst);
 688:.\invn.c      **** 		}
 689:.\invn.c      **** 		quat9_data_was_set = 0;
 690:.\invn.c      **** #endif
 691:.\invn.c      **** 	}
 692:.\invn.c      ****       
 693:.\invn.c      **** 	if (gmrv_quat_was_set == 1) {
 2620              		.loc 1 693 0
 2621 0124 2A4B     		ldr	r3, .L123+48
 2622 0126 1B88     		ldrh	r3, [r3]
 2623 0128 012B     		cmp	r3, #1
 2624 012a 02D1     		bne	.L116
 694:.\invn.c      **** 		if (hal.report & PRINT_GEOMAG)
 695:.\invn.c      **** 		{
 696:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "GeoMAG RV\t %7.5f, %7.5f, %7.5f, %7.5f, %d, %lld\r\n", gmrv_flo
 697:.\invn.c      **** 			//print_data_console(tst);
 698:.\invn.c      **** 		}
 699:.\invn.c      ****                 if (hal.report & PRINT_CUBE_GEOMAG) {
 700:.\invn.c      **** 			//send_data_packet(PACKET_TYPE_QUAT, (void *)cube_gmrv);
 701:.\invn.c      **** 		}
 702:.\invn.c      ****                 gmrv_quat_was_set = 0;
 2625              		.loc 1 702 0
 2626 012c 284B     		ldr	r3, .L123+48
 2627 012e 0022     		mov	r2, #0
 2628 0130 1A80     		strh	r2, [r3]
 2629              	.L116:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 60


 703:.\invn.c      **** 	}
 704:.\invn.c      **** 
 705:.\invn.c      **** 	if (hal.report & PRINT_BAC) {
 2630              		.loc 1 705 0
 2631 0132 1B4B     		ldr	r3, .L123
 2632 0134 1A68     		ldr	r2, [r3]
 2633 0136 8023     		mov	r3, #128
 2634 0138 5B03     		lsl	r3, r3, #13
 2635 013a 1340     		and	r3, r2
 2636 013c 06D0     		beq	.L117
 706:.\invn.c      **** 		if (bac_data_was_set == 1)
 2637              		.loc 1 706 0
 2638 013e 254B     		ldr	r3, .L123+52
 2639 0140 1B88     		ldrh	r3, [r3]
 2640 0142 012B     		cmp	r3, #1
 2641 0144 02D1     		bne	.L117
 707:.\invn.c      **** 		{
 708:.\invn.c      **** 			//INV_SPRINTF(tst, INV_TST_LEN, "BAC Ts:\t %ld\r\n", bac_ts);
 709:.\invn.c      **** 			//print_data_console(tst);
 710:.\invn.c      **** //			if ((bac_state >> 8) & BAC_DRIVE)
 711:.\invn.c      **** //				print_data_console("\t Enter Drive\r\n");
 712:.\invn.c      **** //			if ((bac_state >> 8) & BAC_WALK)
 713:.\invn.c      **** //				print_data_console("\t Enter Walk\r\n");
 714:.\invn.c      **** //			if ((bac_state >> 8) & BAC_RUN)
 715:.\invn.c      **** //				print_data_console("\t Enter Run\r\n");
 716:.\invn.c      **** //			if ((bac_state >> 8) & BAC_BIKE)
 717:.\invn.c      **** //				print_data_console("\t Enter Bike\r\n");
 718:.\invn.c      **** //			if ((bac_state >> 8) & BAC_TILT)
 719:.\invn.c      **** //				print_data_console("\t Enter Tilt\r\n");
 720:.\invn.c      **** //			if ((bac_state >> 8) & BAC_STILL)
 721:.\invn.c      **** //				print_data_console("\t Enter Still\r\n");
 722:.\invn.c      **** //			if (bac_state & BAC_DRIVE)
 723:.\invn.c      **** //				print_data_console("\t Exit Drive\r\n");
 724:.\invn.c      **** //			if (bac_state & BAC_WALK)
 725:.\invn.c      **** //				print_data_console("\t Exit Walk\r\n");
 726:.\invn.c      **** //			if (bac_state & BAC_RUN)
 727:.\invn.c      **** //				print_data_console("\t Exit Run\r\n");
 728:.\invn.c      **** //			if (bac_state & BAC_BIKE)
 729:.\invn.c      **** //				print_data_console("\t Exit Bike\r\n");
 730:.\invn.c      **** //			if (bac_state & BAC_TILT)
 731:.\invn.c      **** //				print_data_console("\t Exit tilt\r\n");
 732:.\invn.c      **** //			if (bac_state & BAC_STILL)
 733:.\invn.c      **** //				print_data_console("\t Exit Still\r\n");
 734:.\invn.c      **** 
 735:.\invn.c      **** 			bac_data_was_set = 0;
 2642              		.loc 1 735 0
 2643 0146 234B     		ldr	r3, .L123+52
 2644 0148 0022     		mov	r2, #0
 2645 014a 1A80     		strh	r2, [r3]
 2646              	.L117:
 736:.\invn.c      **** 			//bac_prev_ts = ts;
 737:.\invn.c      **** 		}
 738:.\invn.c      **** 	}
 739:.\invn.c      **** 
 740:.\invn.c      **** 	if (hal.report & PRINT_FLIP_PICKUP) {
 2647              		.loc 1 740 0
 2648 014c 144B     		ldr	r3, .L123
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 61


 2649 014e 1A68     		ldr	r2, [r3]
 2650 0150 8023     		mov	r3, #128
 2651 0152 9B03     		lsl	r3, r3, #14
 2652 0154 1340     		and	r3, r2
 2653 0156 06D0     		beq	.L118
 741:.\invn.c      **** 		if (flip_data_was_set == 1) {
 2654              		.loc 1 741 0
 2655 0158 1F4B     		ldr	r3, .L123+56
 2656 015a 1B88     		ldrh	r3, [r3]
 2657 015c 012B     		cmp	r3, #1
 2658 015e 02D1     		bne	.L118
 742:.\invn.c      **** 			if (flip_pickup == 1){}
 743:.\invn.c      **** 			//	print_data_console("\t Flip Detected\r\n");
 744:.\invn.c      **** 			else if (flip_pickup == 2){}
 745:.\invn.c      **** 			//	print_data_console("\t Pickup Detected\r\n");
 746:.\invn.c      **** 			flip_data_was_set = 0;
 2659              		.loc 1 746 0
 2660 0160 1D4B     		ldr	r3, .L123+56
 2661 0162 0022     		mov	r2, #0
 2662 0164 1A80     		strh	r2, [r3]
 2663              	.L118:
 747:.\invn.c      **** 		}
 748:.\invn.c      **** 	}
 749:.\invn.c      **** 
 750:.\invn.c      **** 	if (hal.report & PRINT_TILT) {
 2664              		.loc 1 750 0
 2665 0166 0E4B     		ldr	r3, .L123
 2666 0168 1A68     		ldr	r2, [r3]
 2667 016a 8023     		mov	r3, #128
 2668 016c DB03     		lsl	r3, r3, #15
 2669 016e 1340     		and	r3, r2
 2670 0170 06D0     		beq	.L120
 751:.\invn.c      **** 		if (tilt_data_was_set == 1) {
 2671              		.loc 1 751 0
 2672 0172 1A4B     		ldr	r3, .L123+60
 2673 0174 1B88     		ldrh	r3, [r3]
 2674 0176 012B     		cmp	r3, #1
 2675 0178 02D1     		bne	.L120
 752:.\invn.c      **** 			if (tilt_state == 2){}
 753:.\invn.c      **** 			//	print_data_console("\t Tilt Started\r\n");
 754:.\invn.c      **** 			else if (tilt_state == 1){}
 755:.\invn.c      **** 			//	print_data_console("\t Tilt Ended\r\n");
 756:.\invn.c      **** 			tilt_data_was_set = 0;
 2676              		.loc 1 756 0
 2677 017a 184B     		ldr	r3, .L123+60
 2678 017c 0022     		mov	r2, #0
 2679 017e 1A80     		strh	r2, [r3]
 2680              	.L120:
 757:.\invn.c      **** 		}
 758:.\invn.c      **** 	}
 759:.\invn.c      **** #endif     
 760:.\invn.c      ****         if (hal.report & PRINT_STEP_DETECTOR) {
 2681              		.loc 1 760 0
 2682 0180 074B     		ldr	r3, .L123
 2683 0182 1A68     		ldr	r2, [r3]
 2684 0184 8023     		mov	r3, #128
 2685 0186 1B01     		lsl	r3, r3, #4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 62


 2686 0188 1340     		and	r3, r2
 2687 018a 06D0     		beq	.L105
 761:.\invn.c      ****                 if (step_detected == 1)
 2688              		.loc 1 761 0
 2689 018c 144B     		ldr	r3, .L123+64
 2690 018e 1B78     		ldrb	r3, [r3]
 2691 0190 012B     		cmp	r3, #1
 2692 0192 02D1     		bne	.L105
 762:.\invn.c      ****                 //    print_data_console("Step Detected>>>>\r\n");
 763:.\invn.c      ****                 step_detected = 0;
 2693              		.loc 1 763 0
 2694 0194 124B     		ldr	r3, .L123+64
 2695 0196 0022     		mov	r2, #0
 2696 0198 1A70     		strb	r2, [r3]
 2697              	.L105:
 764:.\invn.c      ****         }
 765:.\invn.c      **** 
 766:.\invn.c      **** 	
 767:.\invn.c      **** }
 2698              		.loc 1 767 0
 2699 019a BD46     		mov	sp, r7
 2700 019c 06B0     		add	sp, sp, #24
 2701              		@ sp needed
 2702 019e 80BD     		pop	{r7, pc}
 2703              	.L124:
 2704              		.align	2
 2705              	.L123:
 2706 01a0 00000000 		.word	hal
 2707 01a4 00000000 		.word	accel_data_was_set
 2708 01a8 00000000 		.word	self_test_result
 2709 01ac 00000000 		.word	accel_accuracy
 2710 01b0 00000000 		.word	gyro_data_was_set
 2711 01b4 00000000 		.word	gyro_accuracy
 2712 01b8 00000000 		.word	raw_gyro_data_was_set
 2713 01bc 00000000 		.word	quat6_data_was_set
 2714 01c0 00000000 		.word	result_quat
 2715 01c4 00000000 		.word	compass_data_was_set
 2716 01c8 00000000 		.word	raw_compass_data_was_set
 2717 01cc 00000000 		.word	quat9_data_was_set
 2718 01d0 00000000 		.word	gmrv_quat_was_set
 2719 01d4 00000000 		.word	bac_data_was_set
 2720 01d8 00000000 		.word	flip_data_was_set
 2721 01dc 00000000 		.word	tilt_data_was_set
 2722 01e0 00000000 		.word	step_detected
 2723              		.cfi_endproc
 2724              	.LFE45:
 2725              		.size	process_sensor_output, .-process_sensor_output
 2726              		.global	__aeabi_ldivmod
 2727              		.global	__aeabi_fadd
 2728              		.global	__aeabi_fmul
 2729              		.global	__aeabi_fsub
 2730              		.global	__aeabi_f2iz
 2731              		.section	.text.fifo_handler,"ax",%progbits
 2732              		.align	2
 2733              		.global	fifo_handler
 2734              		.code	16
 2735              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 63


 2736              		.type	fifo_handler, %function
 2737              	fifo_handler:
 2738              	.LFB46:
 768:.\invn.c      **** 
 769:.\invn.c      **** void fifo_handler()
 770:.\invn.c      **** {
 2739              		.loc 1 770 0
 2740              		.cfi_startproc
 2741 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2742              		.cfi_def_cfa_offset 20
 2743              		.cfi_offset 4, -20
 2744              		.cfi_offset 5, -16
 2745              		.cfi_offset 6, -12
 2746              		.cfi_offset 7, -8
 2747              		.cfi_offset 14, -4
 2748 0002 B1B0     		sub	sp, sp, #196
 2749              		.cfi_def_cfa_offset 216
 2750 0004 00AF     		add	r7, sp, #0
 2751              		.cfi_def_cfa_register 7
 771:.\invn.c      **** 	short              int_read_back = 0;
 2752              		.loc 1 771 0
 2753 0006 B223     		mov	r3, #178
 2754 0008 FB18     		add	r3, r7, r3
 2755 000a 0022     		mov	r2, #0
 2756 000c 1A80     		strh	r2, [r3]
 772:.\invn.c      **** 	unsigned short     header = 0, header2 = 0;
 2757              		.loc 1 772 0
 2758 000e B023     		mov	r3, #176
 2759 0010 FB18     		add	r3, r7, r3
 2760 0012 0022     		mov	r2, #0
 2761 0014 1A80     		strh	r2, [r3]
 2762 0016 AE23     		mov	r3, #174
 2763 0018 FB18     		add	r3, r7, r3
 2764 001a 0022     		mov	r2, #0
 2765 001c 1A80     		strh	r2, [r3]
 773:.\invn.c      **** 	int data_left_in_fifo = 0;
 2766              		.loc 1 773 0
 2767 001e 0023     		mov	r3, #0
 2768 0020 A822     		mov	r2, #168
 2769 0022 BA18     		add	r2, r7, r2
 2770 0024 1360     		str	r3, [r2]
 774:.\invn.c      **** 	short short_data[3] = { 0 };
 2771              		.loc 1 774 0
 2772 0026 A023     		mov	r3, #160
 2773 0028 FB18     		add	r3, r7, r3
 2774 002a 0022     		mov	r2, #0
 2775 002c 1A60     		str	r2, [r3]
 2776 002e 0022     		mov	r2, #0
 2777 0030 9A80     		strh	r2, [r3, #4]
 775:.\invn.c      **** 	signed long  long_data[3] = { 0 };
 2778              		.loc 1 775 0
 2779 0032 9423     		mov	r3, #148
 2780 0034 FB18     		add	r3, r7, r3
 2781 0036 0022     		mov	r2, #0
 2782 0038 1A60     		str	r2, [r3]
 2783 003a 0022     		mov	r2, #0
 2784 003c 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 64


 2785 003e 0022     		mov	r2, #0
 2786 0040 9A60     		str	r2, [r3, #8]
 776:.\invn.c      **** 	signed long  long_quat[3] = { 0 };
 2787              		.loc 1 776 0
 2788 0042 8823     		mov	r3, #136
 2789 0044 FB18     		add	r3, r7, r3
 2790 0046 0022     		mov	r2, #0
 2791 0048 1A60     		str	r2, [r3]
 2792 004a 0022     		mov	r2, #0
 2793 004c 5A60     		str	r2, [r3, #4]
 2794 004e 0022     		mov	r2, #0
 2795 0050 9A60     		str	r2, [r3, #8]
 777:.\invn.c      **** 	static mpu_time_t lastIrqTimeUs = 0;
 778:.\invn.c      **** 	static mpu_time_t currentIrqTimeUs = 0;
 779:.\invn.c      **** 	unsigned short sample_cnt_array[GENERAL_SENSORS_MAX] = { 0 };
 2796              		.loc 1 779 0
 2797 0052 2423     		mov	r3, #36
 2798 0054 FB18     		add	r3, r7, r3
 2799 0056 1A1C     		mov	r2, r3
 2800 0058 6223     		mov	r3, #98
 2801 005a 101C     		mov	r0, r2
 2802 005c 0021     		mov	r1, #0
 2803 005e 1A1C     		mov	r2, r3
 2804 0060 FFF7FEFF 		bl	memset
 780:.\invn.c      ****         
 781:.\invn.c      **** 	// Process Incoming INT and Get/Pack FIFO Data
 782:.\invn.c      **** 	inv_identify_interrupt(&int_read_back);
 2805              		.loc 1 782 0
 2806 0064 B223     		mov	r3, #178
 2807 0066 FB18     		add	r3, r7, r3
 2808 0068 181C     		mov	r0, r3
 2809 006a FFF7FEFF 		bl	inv_identify_interrupt
 783:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 784:.\invn.c      **** 	if (int_read_back & (BIT_MSG_DMP_INT | BIT_MSG_DMP_INT_0 | BIT_MSG_DMP_INT_2 | BIT_MSG_DMP_INT_5))
 2810              		.loc 1 784 0
 2811 006e B223     		mov	r3, #178
 2812 0070 FB18     		add	r3, r7, r3
 2813 0072 1B88     		ldrh	r3, [r3]
 2814 0074 9BB2     		uxth	r3, r3
 2815 0076 1A1C     		mov	r2, r3
 2816 0078 254B     		ldr	r3, .L156
 2817 007a 1340     		and	r3, r2
 2818 007c 00D1     		bne	.LCB2264
 2819 007e 2CE3     		b	.L125	@long jump
 2820              	.LCB2264:
 2821              	.LBB4:
 785:.\invn.c      **** #else
 786:.\invn.c      ****         if (int_read_back & BIT_DMP_INT_CI)
 787:.\invn.c      **** #endif
 788:.\invn.c      ****         {
 789:.\invn.c      **** 		// Read FIFO contents and parse it.
 790:.\invn.c      **** 		unsigned short total_sample_cnt = 0;
 2822              		.loc 1 790 0
 2823 0080 2223     		mov	r3, #34
 2824 0082 FB18     		add	r3, r7, r3
 2825 0084 0022     		mov	r2, #0
 2826 0086 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 65


 2827              	.L151:
 791:.\invn.c      **** 		//currentIrqTimeUs = inv_get_tick_count();	
 792:.\invn.c      ****                         
 793:.\invn.c      ****                         do {
 794:.\invn.c      **** 			
 795:.\invn.c      ****         
 796:.\invn.c      **** 			if (inv_mems_fifo_swmirror(&data_left_in_fifo, &total_sample_cnt, sample_cnt_array))
 2828              		.loc 1 796 0
 2829 0088 A823     		mov	r3, #168
 2830 008a F918     		add	r1, r7, r3
 2831 008c 2223     		mov	r3, #34
 2832 008e FA18     		add	r2, r7, r3
 2833 0090 2423     		mov	r3, #36
 2834 0092 FB18     		add	r3, r7, r3
 2835 0094 081C     		mov	r0, r1
 2836 0096 111C     		mov	r1, r2
 2837 0098 1A1C     		mov	r2, r3
 2838 009a FFF7FEFF 		bl	inv_mems_fifo_swmirror
 2839 009e 031E     		sub	r3, r0, #0
 2840 00a0 00D0     		beq	.L127
 797:.\invn.c      ****                           break;
 2841              		.loc 1 797 0
 2842 00a2 FFE2     		b	.L128
 2843              	.L127:
 798:.\invn.c      ****                         
 799:.\invn.c      **** 			if (lastIrqTimeUs != 0)
 2844              		.loc 1 799 0
 2845 00a4 1B4B     		ldr	r3, .L156+4
 2846 00a6 5C68     		ldr	r4, [r3, #4]
 2847 00a8 1B68     		ldr	r3, [r3]
 2848 00aa 1A1C     		mov	r2, r3
 2849 00ac 2243     		orr	r2, r4
 2850 00ae 1AD0     		beq	.L129
 800:.\invn.c      **** 				ts = (currentIrqTimeUs - lastIrqTimeUs) / total_sample_cnt;
 2851              		.loc 1 800 0
 2852 00b0 194B     		ldr	r3, .L156+8
 2853 00b2 1968     		ldr	r1, [r3]
 2854 00b4 5A68     		ldr	r2, [r3, #4]
 2855 00b6 174B     		ldr	r3, .L156+4
 2856 00b8 5C68     		ldr	r4, [r3, #4]
 2857 00ba 1B68     		ldr	r3, [r3]
 2858 00bc C91A     		sub	r1, r1, r3
 2859 00be A241     		sbc	r2, r2, r4
 2860 00c0 0B1C     		mov	r3, r1
 2861 00c2 141C     		mov	r4, r2
 2862 00c4 2222     		mov	r2, #34
 2863 00c6 BA18     		add	r2, r7, r2
 2864 00c8 1288     		ldrh	r2, [r2]
 2865 00ca 151C     		mov	r5, r2
 2866 00cc 0022     		mov	r2, #0
 2867 00ce 161C     		mov	r6, r2
 2868 00d0 181C     		mov	r0, r3
 2869 00d2 211C     		mov	r1, r4
 2870 00d4 2A1C     		mov	r2, r5
 2871 00d6 331C     		mov	r3, r6
 2872 00d8 FFF7FEFF 		bl	__aeabi_ldivmod
 2873 00dc 031C     		mov	r3, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 66


 2874 00de 0C1C     		mov	r4, r1
 2875 00e0 0E4A     		ldr	r2, .L156+12
 2876 00e2 1360     		str	r3, [r2]
 2877 00e4 5460     		str	r4, [r2, #4]
 2878              	.L129:
 801:.\invn.c      ****                         
 802:.\invn.c      **** 			lastIrqTimeUs = currentIrqTimeUs;
 2879              		.loc 1 802 0
 2880 00e6 0C4B     		ldr	r3, .L156+8
 2881 00e8 5C68     		ldr	r4, [r3, #4]
 2882 00ea 1B68     		ldr	r3, [r3]
 2883 00ec 094A     		ldr	r2, .L156+4
 2884 00ee 1360     		str	r3, [r2]
 2885 00f0 5460     		str	r4, [r2, #4]
 803:.\invn.c      ****                         while (total_sample_cnt--){
 2886              		.loc 1 803 0
 2887 00f2 C0E2     		b	.L131
 2888              	.L149:
 804:.\invn.c      **** 				if (inv_mems_fifo_pop(&header, &header2, &data_left_in_fifo))
 2889              		.loc 1 804 0
 2890 00f4 B023     		mov	r3, #176
 2891 00f6 F918     		add	r1, r7, r3
 2892 00f8 AE23     		mov	r3, #174
 2893 00fa FA18     		add	r2, r7, r3
 2894 00fc A823     		mov	r3, #168
 2895 00fe FB18     		add	r3, r7, r3
 2896 0100 081C     		mov	r0, r1
 2897 0102 111C     		mov	r1, r2
 2898 0104 1A1C     		mov	r2, r3
 2899 0106 FFF7FEFF 		bl	inv_mems_fifo_pop
 2900 010a 031E     		sub	r3, r0, #0
 2901 010c 08D0     		beq	.L132
 805:.\invn.c      **** 					break;
 2902              		.loc 1 805 0
 2903 010e BDE2     		b	.L133
 2904              	.L157:
 2905              		.align	2
 2906              	.L156:
 2907 0110 02230000 		.word	8962
 2908 0114 D8010000 		.word	lastIrqTimeUs.9389
 2909 0118 E0010000 		.word	currentIrqTimeUs.9390
 2910 011c 00000000 		.word	ts
 2911              	.L132:
 806:.\invn.c      **** 
 807:.\invn.c      **** 				if (header & ACCEL_SET) {
 2912              		.loc 1 807 0
 2913 0120 B023     		mov	r3, #176
 2914 0122 FB18     		add	r3, r7, r3
 2915 0124 1B88     		ldrh	r3, [r3]
 2916 0126 9BB2     		uxth	r3, r3
 2917 0128 1BB2     		sxth	r3, r3
 2918 012a 002B     		cmp	r3, #0
 2919 012c 39DA     		bge	.L134
 2920              	.LBB5:
 808:.\invn.c      **** 					float scale;
 809:.\invn.c      **** 
 810:.\invn.c      **** 					accel_data_was_set = 1;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 67


 2921              		.loc 1 810 0
 2922 012e F04B     		ldr	r3, .L158
 2923 0130 0122     		mov	r2, #1
 2924 0132 1A80     		strh	r2, [r3]
 811:.\invn.c      **** 					dmp_get_accel(long_data);
 2925              		.loc 1 811 0
 2926 0134 9423     		mov	r3, #148
 2927 0136 FB18     		add	r3, r7, r3
 2928 0138 181C     		mov	r0, r3
 2929 013a FFF7FEFF 		bl	dmp_get_accel
 812:.\invn.c      **** 
 813:.\invn.c      **** 					accel_accuracy = inv_get_accel_accuracy();
 2930              		.loc 1 813 0
 2931 013e FFF7FEFF 		bl	inv_get_accel_accuracy
 2932 0142 021C     		mov	r2, r0
 2933 0144 EB4B     		ldr	r3, .L158+4
 2934 0146 1A60     		str	r2, [r3]
 814:.\invn.c      **** 					scale = (1 << inv_get_accel_fullscale()) * 2.f / (1L << 30); // Convert from raw units to g's
 2935              		.loc 1 814 0
 2936 0148 FFF7FEFF 		bl	inv_get_accel_fullscale
 2937 014c 031C     		mov	r3, r0
 2938 014e 1A1C     		mov	r2, r3
 2939 0150 0123     		mov	r3, #1
 2940 0152 9340     		lsl	r3, r3, r2
 2941 0154 181C     		mov	r0, r3
 2942 0156 FFF7FEFF 		bl	__aeabi_i2f
 2943 015a 031C     		add	r3, r0, #0
 2944 015c 181C     		add	r0, r3, #0
 2945 015e 191C     		add	r1, r3, #0
 2946 0160 FFF7FEFF 		bl	__aeabi_fadd
 2947 0164 031C     		add	r3, r0, #0
 2948 0166 181C     		add	r0, r3, #0
 2949 0168 9D21     		mov	r1, #157
 2950 016a C905     		lsl	r1, r1, #23
 2951 016c FFF7FEFF 		bl	__aeabi_fdiv
 2952 0170 031C     		add	r3, r0, #0
 2953 0172 BC22     		mov	r2, #188
 2954 0174 BA18     		add	r2, r7, r2
 2955 0176 1360     		str	r3, [r2]
 815:.\invn.c      **** 					scale *= 9.80665f; // Convert to m/s^2
 2956              		.loc 1 815 0
 2957 0178 BC23     		mov	r3, #188
 2958 017a FB18     		add	r3, r7, r3
 2959 017c 1868     		ldr	r0, [r3]
 2960 017e DE49     		ldr	r1, .L158+8
 2961 0180 FFF7FEFF 		bl	__aeabi_fmul
 2962 0184 031C     		add	r3, r0, #0
 2963 0186 BC22     		mov	r2, #188
 2964 0188 BA18     		add	r2, r7, r2
 2965 018a 1360     		str	r3, [r2]
 816:.\invn.c      **** 					inv_convert_dmp3_to_body(long_data, scale, accel_float);
 2966              		.loc 1 816 0
 2967 018c 9423     		mov	r3, #148
 2968 018e F918     		add	r1, r7, r3
 2969 0190 BC23     		mov	r3, #188
 2970 0192 FB18     		add	r3, r7, r3
 2971 0194 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 68


 2972 0196 D94B     		ldr	r3, .L158+12
 2973 0198 081C     		mov	r0, r1
 2974 019a 111C     		add	r1, r2, #0
 2975 019c 1A1C     		mov	r2, r3
 2976 019e FFF7FEFF 		bl	inv_convert_dmp3_to_body
 2977              	.L134:
 2978              	.LBE5:
 817:.\invn.c      **** 
 818:.\invn.c      **** 				}
 819:.\invn.c      **** 
 820:.\invn.c      **** 
 821:.\invn.c      **** 				if (header & GYRO_SET) {
 2979              		.loc 1 821 0
 2980 01a2 B023     		mov	r3, #176
 2981 01a4 FB18     		add	r3, r7, r3
 2982 01a6 1B88     		ldrh	r3, [r3]
 2983 01a8 1A1C     		mov	r2, r3
 2984 01aa 8023     		mov	r3, #128
 2985 01ac DB01     		lsl	r3, r3, #7
 2986 01ae 1340     		and	r3, r2
 2987 01b0 00D1     		bne	.LCB2422
 2988 01b2 D8E0     		b	.L135	@long jump
 2989              	.LCB2422:
 2990              	.LBB6:
 822:.\invn.c      **** 					float scale;
 823:.\invn.c      **** 					signed long  raw_data[3] = { 0 };
 2991              		.loc 1 823 0
 2992 01b4 1423     		mov	r3, #20
 2993 01b6 FB18     		add	r3, r7, r3
 2994 01b8 0022     		mov	r2, #0
 2995 01ba 1A60     		str	r2, [r3]
 2996 01bc 0022     		mov	r2, #0
 2997 01be 5A60     		str	r2, [r3, #4]
 2998 01c0 0022     		mov	r2, #0
 2999 01c2 9A60     		str	r2, [r3, #8]
 824:.\invn.c      **** #if ((MEMS_CHIP == HW_ICM30630) || (MEMS_CHIP == HW_ICM20648) || (MEMS_CHIP == HW_ICM20609))
 825:.\invn.c      **** 					signed long  bias_data[3] = { 0 };
 3000              		.loc 1 825 0
 3001 01c4 0823     		mov	r3, #8
 3002 01c6 FB18     		add	r3, r7, r3
 3003 01c8 0022     		mov	r2, #0
 3004 01ca 1A60     		str	r2, [r3]
 3005 01cc 0022     		mov	r2, #0
 3006 01ce 5A60     		str	r2, [r3, #4]
 3007 01d0 0022     		mov	r2, #0
 3008 01d2 9A60     		str	r2, [r3, #8]
 826:.\invn.c      **** #endif
 827:.\invn.c      **** 
 828:.\invn.c      **** 					raw_gyro_data_was_set = 1;
 3009              		.loc 1 828 0
 3010 01d4 CA4B     		ldr	r3, .L158+16
 3011 01d6 0122     		mov	r2, #1
 3012 01d8 1A80     		strh	r2, [r3]
 829:.\invn.c      **** 					dmp_get_raw_gyro(short_data);
 3013              		.loc 1 829 0
 3014 01da A023     		mov	r3, #160
 3015 01dc FB18     		add	r3, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 69


 3016 01de 181C     		mov	r0, r3
 3017 01e0 FFF7FEFF 		bl	dmp_get_raw_gyro
 830:.\invn.c      ****                                         scale = (1 << inv_get_gyro_fullscale()) * 250.f / (1L << 15
 3018              		.loc 1 830 0
 3019 01e4 FFF7FEFF 		bl	inv_get_gyro_fullscale
 3020 01e8 031C     		mov	r3, r0
 3021 01ea 1A1C     		mov	r2, r3
 3022 01ec 0123     		mov	r3, #1
 3023 01ee 9340     		lsl	r3, r3, r2
 3024 01f0 181C     		mov	r0, r3
 3025 01f2 FFF7FEFF 		bl	__aeabi_i2f
 3026 01f6 031C     		add	r3, r0, #0
 3027 01f8 181C     		add	r0, r3, #0
 3028 01fa C249     		ldr	r1, .L158+20
 3029 01fc FFF7FEFF 		bl	__aeabi_fmul
 3030 0200 031C     		add	r3, r0, #0
 3031 0202 181C     		add	r0, r3, #0
 3032 0204 8E21     		mov	r1, #142
 3033 0206 C905     		lsl	r1, r1, #23
 3034 0208 FFF7FEFF 		bl	__aeabi_fdiv
 3035 020c 031C     		add	r3, r0, #0
 3036 020e B822     		mov	r2, #184
 3037 0210 BA18     		add	r2, r7, r2
 3038 0212 1360     		str	r3, [r2]
 831:.\invn.c      **** 					scale *= (float)M_PI / 180.f; // Convert to radian.
 3039              		.loc 1 831 0
 3040 0214 B823     		mov	r3, #184
 3041 0216 FB18     		add	r3, r7, r3
 3042 0218 1868     		ldr	r0, [r3]
 3043 021a BB49     		ldr	r1, .L158+24
 3044 021c FFF7FEFF 		bl	__aeabi_fmul
 3045 0220 031C     		add	r3, r0, #0
 3046 0222 B822     		mov	r2, #184
 3047 0224 BA18     		add	r2, r7, r2
 3048 0226 1360     		str	r3, [r2]
 832:.\invn.c      ****                                         raw_data[0] = (long)short_data[0];
 3049              		.loc 1 832 0
 3050 0228 A023     		mov	r3, #160
 3051 022a FB18     		add	r3, r7, r3
 3052 022c 1B88     		ldrh	r3, [r3]
 3053 022e 1AB2     		sxth	r2, r3
 3054 0230 1423     		mov	r3, #20
 3055 0232 FB18     		add	r3, r7, r3
 3056 0234 1A60     		str	r2, [r3]
 833:.\invn.c      ****                                         raw_data[1] = (long)short_data[1];
 3057              		.loc 1 833 0
 3058 0236 A023     		mov	r3, #160
 3059 0238 FB18     		add	r3, r7, r3
 3060 023a 5B88     		ldrh	r3, [r3, #2]
 3061 023c 1AB2     		sxth	r2, r3
 3062 023e 1423     		mov	r3, #20
 3063 0240 FB18     		add	r3, r7, r3
 3064 0242 5A60     		str	r2, [r3, #4]
 834:.\invn.c      ****                                         raw_data[2] = (long)short_data[2];
 3065              		.loc 1 834 0
 3066 0244 A023     		mov	r3, #160
 3067 0246 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 70


 3068 0248 9B88     		ldrh	r3, [r3, #4]
 3069 024a 1AB2     		sxth	r2, r3
 3070 024c 1423     		mov	r3, #20
 3071 024e FB18     		add	r3, r7, r3
 3072 0250 9A60     		str	r2, [r3, #8]
 835:.\invn.c      ****                                         inv_convert_dmp3_to_body(raw_data, scale, gyro_raw_float);
 3073              		.loc 1 835 0
 3074 0252 1423     		mov	r3, #20
 3075 0254 F918     		add	r1, r7, r3
 3076 0256 B823     		mov	r3, #184
 3077 0258 FB18     		add	r3, r7, r3
 3078 025a 1A68     		ldr	r2, [r3]
 3079 025c AB4B     		ldr	r3, .L158+28
 3080 025e 081C     		mov	r0, r1
 3081 0260 111C     		add	r1, r2, #0
 3082 0262 1A1C     		mov	r2, r3
 3083 0264 FFF7FEFF 		bl	inv_convert_dmp3_to_body
 836:.\invn.c      ****                                         
 837:.\invn.c      **** #if ((MEMS_CHIP == HW_ICM30630) || (MEMS_CHIP == HW_ICM20648))
 838:.\invn.c      ****                                       // We have gyro bias data in raw units, scaled by 2^5
 839:.\invn.c      ****                                         scale = (1 << inv_get_gyro_fullscale()) * 250.f / (1L << 20
 3084              		.loc 1 839 0
 3085 0268 FFF7FEFF 		bl	inv_get_gyro_fullscale
 3086 026c 031C     		mov	r3, r0
 3087 026e 1A1C     		mov	r2, r3
 3088 0270 0123     		mov	r3, #1
 3089 0272 9340     		lsl	r3, r3, r2
 3090 0274 181C     		mov	r0, r3
 3091 0276 FFF7FEFF 		bl	__aeabi_i2f
 3092 027a 031C     		add	r3, r0, #0
 3093 027c 181C     		add	r0, r3, #0
 3094 027e A149     		ldr	r1, .L158+20
 3095 0280 FFF7FEFF 		bl	__aeabi_fmul
 3096 0284 031C     		add	r3, r0, #0
 3097 0286 181C     		add	r0, r3, #0
 3098 0288 9321     		mov	r1, #147
 3099 028a C905     		lsl	r1, r1, #23
 3100 028c FFF7FEFF 		bl	__aeabi_fdiv
 3101 0290 031C     		add	r3, r0, #0
 3102 0292 B822     		mov	r2, #184
 3103 0294 BA18     		add	r2, r7, r2
 3104 0296 1360     		str	r3, [r2]
 840:.\invn.c      **** 					scale *= (float)M_PI / 180.f; // Convert to radian.
 3105              		.loc 1 840 0
 3106 0298 B823     		mov	r3, #184
 3107 029a FB18     		add	r3, r7, r3
 3108 029c 1868     		ldr	r0, [r3]
 3109 029e 9A49     		ldr	r1, .L158+24
 3110 02a0 FFF7FEFF 		bl	__aeabi_fmul
 3111 02a4 031C     		add	r3, r0, #0
 3112 02a6 B822     		mov	r2, #184
 3113 02a8 BA18     		add	r2, r7, r2
 3114 02aa 1360     		str	r3, [r2]
 841:.\invn.c      **** 					dmp_get_gyro_bias(short_data);
 3115              		.loc 1 841 0
 3116 02ac A023     		mov	r3, #160
 3117 02ae FB18     		add	r3, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 71


 3118 02b0 181C     		mov	r0, r3
 3119 02b2 FFF7FEFF 		bl	dmp_get_gyro_bias
 842:.\invn.c      **** 					bias_data[0] = (long)short_data[0];
 3120              		.loc 1 842 0
 3121 02b6 A023     		mov	r3, #160
 3122 02b8 FB18     		add	r3, r7, r3
 3123 02ba 1B88     		ldrh	r3, [r3]
 3124 02bc 1AB2     		sxth	r2, r3
 3125 02be 0823     		mov	r3, #8
 3126 02c0 FB18     		add	r3, r7, r3
 3127 02c2 1A60     		str	r2, [r3]
 843:.\invn.c      **** 					bias_data[1] = (long)short_data[1];
 3128              		.loc 1 843 0
 3129 02c4 A023     		mov	r3, #160
 3130 02c6 FB18     		add	r3, r7, r3
 3131 02c8 5B88     		ldrh	r3, [r3, #2]
 3132 02ca 1AB2     		sxth	r2, r3
 3133 02cc 0823     		mov	r3, #8
 3134 02ce FB18     		add	r3, r7, r3
 3135 02d0 5A60     		str	r2, [r3, #4]
 844:.\invn.c      **** 					bias_data[2] = (long)short_data[2];
 3136              		.loc 1 844 0
 3137 02d2 A023     		mov	r3, #160
 3138 02d4 FB18     		add	r3, r7, r3
 3139 02d6 9B88     		ldrh	r3, [r3, #4]
 3140 02d8 1AB2     		sxth	r2, r3
 3141 02da 0823     		mov	r3, #8
 3142 02dc FB18     		add	r3, r7, r3
 3143 02de 9A60     		str	r2, [r3, #8]
 845:.\invn.c      **** 					inv_convert_dmp3_to_body(bias_data, scale, gyro_bias_float);
 3144              		.loc 1 845 0
 3145 02e0 0823     		mov	r3, #8
 3146 02e2 F918     		add	r1, r7, r3
 3147 02e4 B823     		mov	r3, #184
 3148 02e6 FB18     		add	r3, r7, r3
 3149 02e8 1A68     		ldr	r2, [r3]
 3150 02ea 894B     		ldr	r3, .L158+32
 3151 02ec 081C     		mov	r0, r1
 3152 02ee 111C     		add	r1, r2, #0
 3153 02f0 1A1C     		mov	r2, r3
 3154 02f2 FFF7FEFF 		bl	inv_convert_dmp3_to_body
 846:.\invn.c      **** 
 847:.\invn.c      ****                                       if(hal.report & PRINT_GYRO){
 3155              		.loc 1 847 0
 3156 02f6 874B     		ldr	r3, .L158+36
 3157 02f8 1B68     		ldr	r3, [r3]
 3158 02fa 0222     		mov	r2, #2
 3159 02fc 1340     		and	r3, r2
 3160 02fe 2DD0     		beq	.L136
 848:.\invn.c      **** 					// shift to Q20 to do all operations in Q20
 849:.\invn.c      **** 					raw_data[0] = raw_data[0] << 5;
 3161              		.loc 1 849 0
 3162 0300 1423     		mov	r3, #20
 3163 0302 FB18     		add	r3, r7, r3
 3164 0304 1B68     		ldr	r3, [r3]
 3165 0306 5A01     		lsl	r2, r3, #5
 3166 0308 1423     		mov	r3, #20
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 72


 3167 030a FB18     		add	r3, r7, r3
 3168 030c 1A60     		str	r2, [r3]
 850:.\invn.c      **** 					raw_data[1] = raw_data[1] << 5;
 3169              		.loc 1 850 0
 3170 030e 1423     		mov	r3, #20
 3171 0310 FB18     		add	r3, r7, r3
 3172 0312 5B68     		ldr	r3, [r3, #4]
 3173 0314 5A01     		lsl	r2, r3, #5
 3174 0316 1423     		mov	r3, #20
 3175 0318 FB18     		add	r3, r7, r3
 3176 031a 5A60     		str	r2, [r3, #4]
 851:.\invn.c      **** 					raw_data[2] = raw_data[2] << 5;
 3177              		.loc 1 851 0
 3178 031c 1423     		mov	r3, #20
 3179 031e FB18     		add	r3, r7, r3
 3180 0320 9B68     		ldr	r3, [r3, #8]
 3181 0322 5A01     		lsl	r2, r3, #5
 3182 0324 1423     		mov	r3, #20
 3183 0326 FB18     		add	r3, r7, r3
 3184 0328 9A60     		str	r2, [r3, #8]
 852:.\invn.c      **** 					inv_mems_dmp_get_calibrated_gyro(long_data, raw_data, bias_data);
 3185              		.loc 1 852 0
 3186 032a 9423     		mov	r3, #148
 3187 032c F918     		add	r1, r7, r3
 3188 032e 1423     		mov	r3, #20
 3189 0330 FA18     		add	r2, r7, r3
 3190 0332 0823     		mov	r3, #8
 3191 0334 FB18     		add	r3, r7, r3
 3192 0336 081C     		mov	r0, r1
 3193 0338 111C     		mov	r1, r2
 3194 033a 1A1C     		mov	r2, r3
 3195 033c FFF7FEFF 		bl	inv_mems_dmp_get_calibrated_gyro
 853:.\invn.c      **** 					inv_convert_dmp3_to_body(long_data, scale, gyro_float);
 3196              		.loc 1 853 0
 3197 0340 9423     		mov	r3, #148
 3198 0342 F918     		add	r1, r7, r3
 3199 0344 B823     		mov	r3, #184
 3200 0346 FB18     		add	r3, r7, r3
 3201 0348 1A68     		ldr	r2, [r3]
 3202 034a 734B     		ldr	r3, .L158+40
 3203 034c 081C     		mov	r0, r1
 3204 034e 111C     		add	r1, r2, #0
 3205 0350 1A1C     		mov	r2, r3
 3206 0352 FFF7FEFF 		bl	inv_convert_dmp3_to_body
 854:.\invn.c      ****                                         gyro_data_was_set = 1;
 3207              		.loc 1 854 0
 3208 0356 714B     		ldr	r3, .L158+44
 3209 0358 0122     		mov	r2, #1
 3210 035a 1A80     		strh	r2, [r3]
 3211              	.L136:
 855:.\invn.c      ****                                       }
 856:.\invn.c      ****                                       gyro_accuracy = inv_get_gyro_accuracy();
 3212              		.loc 1 856 0
 3213 035c FFF7FEFF 		bl	inv_get_gyro_accuracy
 3214 0360 021C     		mov	r2, r0
 3215 0362 6F4B     		ldr	r3, .L158+48
 3216 0364 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 73


 3217              	.L135:
 3218              	.LBE6:
 857:.\invn.c      ****                                       
 858:.\invn.c      **** #elif (MEMS_CHIP == HW_ICM20609)           
 859:.\invn.c      ****                                       dmp_get_gyro_bias(bias_data);
 860:.\invn.c      ****                                         scale = (1 << inv_get_gyro_fullscale()) * 250.f / (1L << 20
 861:.\invn.c      **** 					scale *= (float)M_PI / 180.f; // Convert to radian.
 862:.\invn.c      ****                                         inv_convert_dmp3_to_body(bias_data, scale, gyro_bias_float)
 863:.\invn.c      ****                                         
 864:.\invn.c      ****                                       if(hal.report & PRINT_GYRO){                                 
 865:.\invn.c      ****                                         inv_mems_dmp_get_calibrated_gyro(long_data, short_data, bia
 866:.\invn.c      **** 					// shift to Q30 to do all operations in Q30
 867:.\invn.c      **** 					scale = (1 << inv_get_gyro_fullscale()) * 250.f / (1L << 30); // From raw to dps
 868:.\invn.c      **** 					scale *= (float)M_PI / 180.f; // Convert to radian.
 869:.\invn.c      **** 					
 870:.\invn.c      **** 					inv_convert_dmp3_to_body(long_data, scale, gyro_float);
 871:.\invn.c      ****                                         
 872:.\invn.c      ****                                         gyro_data_was_set = 1;
 873:.\invn.c      ****                                       }
 874:.\invn.c      ****                                       if((bias_data[0] != 0) && (bias_data[1] != 0) && (bias_data[2
 875:.\invn.c      ****                                         gyro_accuracy = 3;
 876:.\invn.c      **** #endif
 877:.\invn.c      **** 				}
 878:.\invn.c      **** 
 879:.\invn.c      **** 				if (header & GYRO_CALIBR_SET) {
 880:.\invn.c      **** #if ((MEMS_CHIP != HW_ICM30630) && (MEMS_CHIP != HW_ICM20648))
 881:.\invn.c      **** 					float scale;
 882:.\invn.c      **** 					gyro_data_was_set = 1;
 883:.\invn.c      **** 					dmp_get_calibrated_gyro(long_data);
 884:.\invn.c      **** 
 885:.\invn.c      **** 					gyro_accuracy = inv_get_gyro_accuracy();
 886:.\invn.c      **** 					// We have gyro data in raw units, scaled by 2^15
 887:.\invn.c      **** 					scale = (1 << inv_get_gyro_fullscale()) * 250.f / (1L << 30); // From raw to dps
 888:.\invn.c      **** 					scale *= (float)M_PI / 180.f; // Convert to radian.
 889:.\invn.c      **** 					inv_convert_dmp3_to_body(long_data, scale, gyro_float);
 890:.\invn.c      **** #endif
 891:.\invn.c      **** 				}
 892:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 893:.\invn.c      **** 				if (header & CPASS_CALIBR_SET) {
 3219              		.loc 1 893 0
 3220 0366 B023     		mov	r3, #176
 3221 0368 FB18     		add	r3, r7, r3
 3222 036a 1B88     		ldrh	r3, [r3]
 3223 036c 1A1C     		mov	r2, r3
 3224 036e 2023     		mov	r3, #32
 3225 0370 1340     		and	r3, r2
 3226 0372 1CD0     		beq	.L137
 3227              	.LBB7:
 894:.\invn.c      **** 					float scale;
 895:.\invn.c      **** 					compass_data_was_set = 1;
 3228              		.loc 1 895 0
 3229 0374 6B4B     		ldr	r3, .L158+52
 3230 0376 0122     		mov	r2, #1
 3231 0378 1A80     		strh	r2, [r3]
 896:.\invn.c      **** 					dmp_get_calibrated_compass(long_data);
 3232              		.loc 1 896 0
 3233 037a 9423     		mov	r3, #148
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 74


 3234 037c FB18     		add	r3, r7, r3
 3235 037e 181C     		mov	r0, r3
 3236 0380 FFF7FEFF 		bl	dmp_get_calibrated_compass
 897:.\invn.c      **** 					compass_accuracy = inv_get_mag_accuracy();
 3237              		.loc 1 897 0
 3238 0384 FFF7FEFF 		bl	inv_get_mag_accuracy
 3239 0388 021C     		mov	r2, r0
 3240 038a 674B     		ldr	r3, .L158+56
 3241 038c 1A60     		str	r2, [r3]
 898:.\invn.c      **** 					scale = 1.52587890625e-005f; //COMPASS_CONVERSION
 3242              		.loc 1 898 0
 3243 038e DE23     		mov	r3, #222
 3244 0390 9B05     		lsl	r3, r3, #22
 3245 0392 B422     		mov	r2, #180
 3246 0394 BA18     		add	r2, r7, r2
 3247 0396 1360     		str	r3, [r2]
 899:.\invn.c      **** 					inv_convert_dmp3_to_body(long_data, scale, compass_float);
 3248              		.loc 1 899 0
 3249 0398 9423     		mov	r3, #148
 3250 039a F918     		add	r1, r7, r3
 3251 039c B423     		mov	r3, #180
 3252 039e FB18     		add	r3, r7, r3
 3253 03a0 1A68     		ldr	r2, [r3]
 3254 03a2 624B     		ldr	r3, .L158+60
 3255 03a4 081C     		mov	r0, r1
 3256 03a6 111C     		add	r1, r2, #0
 3257 03a8 1A1C     		mov	r2, r3
 3258 03aa FFF7FEFF 		bl	inv_convert_dmp3_to_body
 3259              	.L137:
 3260              	.LBE7:
 900:.\invn.c      **** 				}
 901:.\invn.c      **** 
 902:.\invn.c      **** 				if (header & CPASS_SET) {
 3261              		.loc 1 902 0
 3262 03ae B023     		mov	r3, #176
 3263 03b0 FB18     		add	r3, r7, r3
 3264 03b2 1B88     		ldrh	r3, [r3]
 3265 03b4 1A1C     		mov	r2, r3
 3266 03b6 8023     		mov	r3, #128
 3267 03b8 9B01     		lsl	r3, r3, #6
 3268 03ba 1340     		and	r3, r2
 3269 03bc 5BD0     		beq	.L138
 903:.\invn.c      **** 					// Raw compass [DMP]
 904:.\invn.c      **** 					dmp_get_raw_compass(long_data);
 3270              		.loc 1 904 0
 3271 03be 9423     		mov	r3, #148
 3272 03c0 FB18     		add	r3, r7, r3
 3273 03c2 181C     		mov	r0, r3
 3274 03c4 FFF7FEFF 		bl	dmp_get_raw_compass
 905:.\invn.c      **** 					compass_raw_float[0] = long_data[0] * 1.52587890625e-005f;
 3275              		.loc 1 905 0
 3276 03c8 9423     		mov	r3, #148
 3277 03ca FB18     		add	r3, r7, r3
 3278 03cc 1B68     		ldr	r3, [r3]
 3279 03ce 181C     		mov	r0, r3
 3280 03d0 FFF7FEFF 		bl	__aeabi_i2f
 3281 03d4 031C     		add	r3, r0, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 75


 3282 03d6 181C     		add	r0, r3, #0
 3283 03d8 DE21     		mov	r1, #222
 3284 03da 8905     		lsl	r1, r1, #22
 3285 03dc FFF7FEFF 		bl	__aeabi_fmul
 3286 03e0 031C     		add	r3, r0, #0
 3287 03e2 1A1C     		add	r2, r3, #0
 3288 03e4 524B     		ldr	r3, .L158+64
 3289 03e6 1A60     		str	r2, [r3]
 906:.\invn.c      **** 					compass_raw_float[1] = long_data[1] * 1.52587890625e-005f;
 3290              		.loc 1 906 0
 3291 03e8 9423     		mov	r3, #148
 3292 03ea FB18     		add	r3, r7, r3
 3293 03ec 5B68     		ldr	r3, [r3, #4]
 3294 03ee 181C     		mov	r0, r3
 3295 03f0 FFF7FEFF 		bl	__aeabi_i2f
 3296 03f4 031C     		add	r3, r0, #0
 3297 03f6 181C     		add	r0, r3, #0
 3298 03f8 DE21     		mov	r1, #222
 3299 03fa 8905     		lsl	r1, r1, #22
 3300 03fc FFF7FEFF 		bl	__aeabi_fmul
 3301 0400 031C     		add	r3, r0, #0
 3302 0402 1A1C     		add	r2, r3, #0
 3303 0404 4A4B     		ldr	r3, .L158+64
 3304 0406 5A60     		str	r2, [r3, #4]
 907:.\invn.c      **** 					compass_raw_float[2] = long_data[2] * 1.52587890625e-005f;
 3305              		.loc 1 907 0
 3306 0408 9423     		mov	r3, #148
 3307 040a FB18     		add	r3, r7, r3
 3308 040c 9B68     		ldr	r3, [r3, #8]
 3309 040e 181C     		mov	r0, r3
 3310 0410 FFF7FEFF 		bl	__aeabi_i2f
 3311 0414 031C     		add	r3, r0, #0
 3312 0416 181C     		add	r0, r3, #0
 3313 0418 DE21     		mov	r1, #222
 3314 041a 8905     		lsl	r1, r1, #22
 3315 041c FFF7FEFF 		bl	__aeabi_fmul
 3316 0420 031C     		add	r3, r0, #0
 3317 0422 1A1C     		add	r2, r3, #0
 3318 0424 424B     		ldr	r3, .L158+64
 3319 0426 9A60     		str	r2, [r3, #8]
 908:.\invn.c      ****                                         compass_bias[0] = compass_raw_float[0] - compass_float[0];
 3320              		.loc 1 908 0
 3321 0428 414B     		ldr	r3, .L158+64
 3322 042a 1A68     		ldr	r2, [r3]
 3323 042c 3F4B     		ldr	r3, .L158+60
 3324 042e 1B68     		ldr	r3, [r3]
 3325 0430 101C     		add	r0, r2, #0
 3326 0432 191C     		add	r1, r3, #0
 3327 0434 FFF7FEFF 		bl	__aeabi_fsub
 3328 0438 031C     		add	r3, r0, #0
 3329 043a 1A1C     		add	r2, r3, #0
 3330 043c 3D4B     		ldr	r3, .L158+68
 3331 043e 1A60     		str	r2, [r3]
 909:.\invn.c      ****                                         compass_bias[1] = compass_raw_float[1] - compass_float[1];
 3332              		.loc 1 909 0
 3333 0440 3B4B     		ldr	r3, .L158+64
 3334 0442 5A68     		ldr	r2, [r3, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 76


 3335 0444 394B     		ldr	r3, .L158+60
 3336 0446 5B68     		ldr	r3, [r3, #4]
 3337 0448 101C     		add	r0, r2, #0
 3338 044a 191C     		add	r1, r3, #0
 3339 044c FFF7FEFF 		bl	__aeabi_fsub
 3340 0450 031C     		add	r3, r0, #0
 3341 0452 1A1C     		add	r2, r3, #0
 3342 0454 374B     		ldr	r3, .L158+68
 3343 0456 5A60     		str	r2, [r3, #4]
 910:.\invn.c      ****                                         compass_bias[2] = compass_raw_float[2] - compass_float[2];
 3344              		.loc 1 910 0
 3345 0458 354B     		ldr	r3, .L158+64
 3346 045a 9A68     		ldr	r2, [r3, #8]
 3347 045c 334B     		ldr	r3, .L158+60
 3348 045e 9B68     		ldr	r3, [r3, #8]
 3349 0460 101C     		add	r0, r2, #0
 3350 0462 191C     		add	r1, r3, #0
 3351 0464 FFF7FEFF 		bl	__aeabi_fsub
 3352 0468 031C     		add	r3, r0, #0
 3353 046a 1A1C     		add	r2, r3, #0
 3354 046c 314B     		ldr	r3, .L158+68
 3355 046e 9A60     		str	r2, [r3, #8]
 911:.\invn.c      **** 					raw_compass_data_was_set = 1;
 3356              		.loc 1 911 0
 3357 0470 314B     		ldr	r3, .L158+72
 3358 0472 0122     		mov	r2, #1
 3359 0474 1A80     		strh	r2, [r3]
 3360              	.L138:
 912:.\invn.c      **** 				}
 913:.\invn.c      **** #endif
 914:.\invn.c      **** 
 915:.\invn.c      **** 				if (header & QUAT6_SET) {
 3361              		.loc 1 915 0
 3362 0476 B023     		mov	r3, #176
 3363 0478 FB18     		add	r3, r7, r3
 3364 047a 1B88     		ldrh	r3, [r3]
 3365 047c 1A1C     		mov	r2, r3
 3366 047e 8023     		mov	r3, #128
 3367 0480 1B01     		lsl	r3, r3, #4
 3368 0482 1340     		and	r3, r2
 3369 0484 0ED0     		beq	.L139
 916:.\invn.c      **** 					quat6_data_was_set = 1;
 3370              		.loc 1 916 0
 3371 0486 2D4B     		ldr	r3, .L158+76
 3372 0488 0122     		mov	r2, #1
 3373 048a 1A80     		strh	r2, [r3]
 917:.\invn.c      **** 					
 918:.\invn.c      **** 					dmp_get_6quaternion(long_quat);
 3374              		.loc 1 918 0
 3375 048c 8823     		mov	r3, #136
 3376 048e FB18     		add	r3, r7, r3
 3377 0490 181C     		mov	r0, r3
 3378 0492 FFF7FEFF 		bl	dmp_get_6quaternion
 919:.\invn.c      ****                                         inv_convert_rotation_vector(long_quat, grv_float);
 3379              		.loc 1 919 0
 3380 0496 8823     		mov	r3, #136
 3381 0498 FA18     		add	r2, r7, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 77


 3382 049a 294B     		ldr	r3, .L158+80
 3383 049c 101C     		mov	r0, r2
 3384 049e 191C     		mov	r1, r3
 3385 04a0 FFF7FEFF 		bl	inv_convert_rotation_vector
 3386              	.L139:
 920:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS
 921:.\invn.c      ****                                         long gravityQ16[3], temp_gravityQ16[3];
 922:.\invn.c      **** 					long linAccQ16[3];
 923:.\invn.c      **** 					long accelQ16[3];
 924:.\invn.c      ****                                         /*Calculate Gravity*/
 925:.\invn.c      ****                                           inv_convert_rotation_vector_1(long_quat, temp_gravityQ16)
 926:.\invn.c      ****                                           inv_mems_augmented_sensors_get_gravity(gravityQ16, temp_g
 927:.\invn.c      ****                                           gravityFloat[0] = inv_q16_to_float(gravityQ16[0]);
 928:.\invn.c      ****                                           gravityFloat[1] = inv_q16_to_float(gravityQ16[1]);
 929:.\invn.c      ****                                           gravityFloat[2] = inv_q16_to_float(gravityQ16[2]);
 930:.\invn.c      ****                                         /*Calculate Linear Acceleration*/
 931:.\invn.c      ****                                           accelQ16[0] = (int32_t)((float)(accel_float[0])*(1ULL << 
 932:.\invn.c      ****                                           accelQ16[1] = (int32_t)((float)(accel_float[1])*(1ULL << 
 933:.\invn.c      ****                                           accelQ16[2] = (int32_t)((float)(accel_float[2])*(1ULL << 
 934:.\invn.c      ****                                           inv_mems_augmented_sensors_get_linearacceleration(linAccQ
 935:.\invn.c      ****                                           linAccFloat[0] = inv_q16_to_float(linAccQ16[0]);
 936:.\invn.c      ****                                           linAccFloat[1] = inv_q16_to_float(linAccQ16[1]);
 937:.\invn.c      ****                                           linAccFloat[2] = inv_q16_to_float(linAccQ16[2]);
 938:.\invn.c      **** #endif                
 939:.\invn.c      **** 				}
 940:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)
 941:.\invn.c      **** 				/* 9axis orientation quaternion sample available from DMP FIFO */
 942:.\invn.c      **** 				if (header & QUAT9_SET) {
 3387              		.loc 1 942 0
 3388 04a4 B023     		mov	r3, #176
 3389 04a6 FB18     		add	r3, r7, r3
 3390 04a8 1B88     		ldrh	r3, [r3]
 3391 04aa 1A1C     		mov	r2, r3
 3392 04ac 8023     		mov	r3, #128
 3393 04ae DB00     		lsl	r3, r3, #3
 3394 04b0 1340     		and	r3, r2
 3395 04b2 50D0     		beq	.L140
 943:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS
 944:.\invn.c      **** 					long orientationQ16[3],temp_orientationQ16[3];
 945:.\invn.c      **** #endif
 946:.\invn.c      **** 
 947:.\invn.c      **** 					quat9_data_was_set = 1;
 3396              		.loc 1 947 0
 3397 04b4 234B     		ldr	r3, .L158+84
 3398 04b6 0122     		mov	r2, #1
 3399 04b8 1A80     		strh	r2, [r3]
 948:.\invn.c      **** 					dmp_get_9quaternion(long_quat);
 3400              		.loc 1 948 0
 3401 04ba 8823     		mov	r3, #136
 3402 04bc FB18     		add	r3, r7, r3
 3403 04be 181C     		mov	r0, r3
 3404 04c0 FFF7FEFF 		bl	dmp_get_9quaternion
 949:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20630 || MEMS_CHIP == HW_ICM20648)
 950:.\invn.c      **** 					rv_accuracy = (int)((float)inv_get_rv_accuracy() / (float)(1ULL << (29)));
 3405              		.loc 1 950 0
 3406 04c4 FFF7FEFF 		bl	inv_get_rv_accuracy
 3407 04c8 031C     		mov	r3, r0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 78


 3408 04ca 181C     		mov	r0, r3
 3409 04cc FFF7FEFF 		bl	__aeabi_i2f
 3410 04d0 031C     		add	r3, r0, #0
 3411 04d2 181C     		add	r0, r3, #0
 3412 04d4 9C21     		mov	r1, #156
 3413 04d6 C905     		lsl	r1, r1, #23
 3414 04d8 FFF7FEFF 		bl	__aeabi_fdiv
 3415 04dc 031C     		add	r3, r0, #0
 3416 04de 181C     		add	r0, r3, #0
 3417 04e0 FFF7FEFF 		bl	__aeabi_f2iz
 3418 04e4 021C     		mov	r2, r0
 3419 04e6 184B     		ldr	r3, .L158+88
 3420 04e8 1A60     		str	r2, [r3]
 951:.\invn.c      **** #else
 952:.\invn.c      **** 					compass_accuracy = inv_get_mag_accuracy();
 953:.\invn.c      **** #endif
 954:.\invn.c      **** 					inv_convert_rotation_vector(long_quat, rv_float);
 3421              		.loc 1 954 0
 3422 04ea 8823     		mov	r3, #136
 3423 04ec FA18     		add	r2, r7, r3
 3424 04ee 2DE0     		b	.L159
 3425              	.L160:
 3426              		.align	2
 3427              	.L158:
 3428 04f0 00000000 		.word	accel_data_was_set
 3429 04f4 00000000 		.word	accel_accuracy
 3430 04f8 0AE81C41 		.word	1092413450
 3431 04fc 00000000 		.word	accel_float
 3432 0500 00000000 		.word	raw_gyro_data_was_set
 3433 0504 00007A43 		.word	1132068864
 3434 0508 35FA8E3C 		.word	1016003125
 3435 050c 00000000 		.word	gyro_raw_float
 3436 0510 00000000 		.word	gyro_bias_float
 3437 0514 00000000 		.word	hal
 3438 0518 00000000 		.word	gyro_float
 3439 051c 00000000 		.word	gyro_data_was_set
 3440 0520 00000000 		.word	gyro_accuracy
 3441 0524 00000000 		.word	compass_data_was_set
 3442 0528 00000000 		.word	compass_accuracy
 3443 052c 00000000 		.word	compass_float
 3444 0530 00000000 		.word	compass_raw_float
 3445 0534 00000000 		.word	compass_bias
 3446 0538 00000000 		.word	raw_compass_data_was_set
 3447 053c 00000000 		.word	quat6_data_was_set
 3448 0540 00000000 		.word	grv_float
 3449 0544 00000000 		.word	quat9_data_was_set
 3450 0548 00000000 		.word	rv_accuracy
 3451              	.L159:
 3452 054c 644B     		ldr	r3, .L161
 3453 054e 101C     		mov	r0, r2
 3454 0550 191C     		mov	r1, r3
 3455 0552 FFF7FEFF 		bl	inv_convert_rotation_vector
 3456              	.L140:
 955:.\invn.c      **** 
 956:.\invn.c      **** #if defined MEMS_AUGMENTED_SENSORS
 957:.\invn.c      ****                                         if(hal.report & PRINT_ORIENT){
 958:.\invn.c      ****                                           inv_convert_rotation_vector_1(long_quat, temp_orientation
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 79


 959:.\invn.c      ****                                           inv_mems_augmented_sensors_get_orientation(orientationQ16
 960:.\invn.c      ****                                           orientationFloat[0] = inv_q16_to_float(orientationQ16[0])
 961:.\invn.c      ****                                           orientationFloat[1] = inv_q16_to_float(orientationQ16[1])
 962:.\invn.c      ****                                           orientationFloat[2] = inv_q16_to_float(orientationQ16[2])
 963:.\invn.c      ****                                         }
 964:.\invn.c      **** #endif
 965:.\invn.c      **** 				}
 966:.\invn.c      **** 
 967:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20648) 
 968:.\invn.c      **** 				/* 6axis AM orientation quaternion sample available from DMP FIFO */
 969:.\invn.c      **** 				if (header & GEOMAG_SET) {
 3457              		.loc 1 969 0
 3458 0556 B023     		mov	r3, #176
 3459 0558 FB18     		add	r3, r7, r3
 3460 055a 1B88     		ldrh	r3, [r3]
 3461 055c 1A1C     		mov	r2, r3
 3462 055e 8023     		mov	r3, #128
 3463 0560 5B00     		lsl	r3, r3, #1
 3464 0562 1340     		and	r3, r2
 3465 0564 34D0     		beq	.L141
 970:.\invn.c      **** 					/* Read 6 axis quaternion out of DMP FIFO in Q30 and convert it to Android format */
 971:.\invn.c      **** 					dmp_get_gmrvquaternion(long_quat);
 3466              		.loc 1 971 0
 3467 0566 8823     		mov	r3, #136
 3468 0568 FB18     		add	r3, r7, r3
 3469 056a 181C     		mov	r0, r3
 3470 056c FFF7FEFF 		bl	dmp_get_gmrvquaternion
 972:.\invn.c      ****                                         if(hal.report & PRINT_CUBE_GEOMAG)
 3471              		.loc 1 972 0
 3472 0570 5C4B     		ldr	r3, .L161+4
 3473 0572 1A68     		ldr	r2, [r3]
 3474 0574 8023     		mov	r3, #128
 3475 0576 DB02     		lsl	r3, r3, #11
 3476 0578 1340     		and	r3, r2
 3477 057a 06D0     		beq	.L142
 973:.\invn.c      ****                                                 inv_compute_scalar_part(long_quat, cube_gmrv);
 3478              		.loc 1 973 0
 3479 057c 8823     		mov	r3, #136
 3480 057e FA18     		add	r2, r7, r3
 3481 0580 594B     		ldr	r3, .L161+8
 3482 0582 101C     		mov	r0, r2
 3483 0584 191C     		mov	r1, r3
 3484 0586 FFF7FEFF 		bl	inv_compute_scalar_part
 3485              	.L142:
 974:.\invn.c      ****                                         if(hal.report & PRINT_GEOMAG){
 3486              		.loc 1 974 0
 3487 058a 564B     		ldr	r3, .L161+4
 3488 058c 1A68     		ldr	r2, [r3]
 3489 058e 8023     		mov	r3, #128
 3490 0590 9B01     		lsl	r3, r3, #6
 3491 0592 1340     		and	r3, r2
 3492 0594 19D0     		beq	.L143
 975:.\invn.c      ****                                                 inv_convert_rotation_vector(long_quat, gmrv_float);
 3493              		.loc 1 975 0
 3494 0596 8823     		mov	r3, #136
 3495 0598 FA18     		add	r2, r7, r3
 3496 059a 544B     		ldr	r3, .L161+12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 80


 3497 059c 101C     		mov	r0, r2
 3498 059e 191C     		mov	r1, r3
 3499 05a0 FFF7FEFF 		bl	inv_convert_rotation_vector
 976:.\invn.c      ****                                                 /* Read geomagnetic rotation vector heading accurac
 977:.\invn.c      ****                                                 gmrv_accuracy = (int)((float)inv_get_gmrv_accuracy(
 3500              		.loc 1 977 0
 3501 05a4 FFF7FEFF 		bl	inv_get_gmrv_accuracy
 3502 05a8 031C     		mov	r3, r0
 3503 05aa 181C     		mov	r0, r3
 3504 05ac FFF7FEFF 		bl	__aeabi_i2f
 3505 05b0 031C     		add	r3, r0, #0
 3506 05b2 181C     		add	r0, r3, #0
 3507 05b4 9C21     		mov	r1, #156
 3508 05b6 C905     		lsl	r1, r1, #23
 3509 05b8 FFF7FEFF 		bl	__aeabi_fdiv
 3510 05bc 031C     		add	r3, r0, #0
 3511 05be 181C     		add	r0, r3, #0
 3512 05c0 FFF7FEFF 		bl	__aeabi_f2iz
 3513 05c4 021C     		mov	r2, r0
 3514 05c6 4A4B     		ldr	r3, .L161+16
 3515 05c8 1A60     		str	r2, [r3]
 3516              	.L143:
 978:.\invn.c      ****                                         }
 979:.\invn.c      ****                                         gmrv_quat_was_set = 1;
 3517              		.loc 1 979 0
 3518 05ca 4A4B     		ldr	r3, .L161+20
 3519 05cc 0122     		mov	r2, #1
 3520 05ce 1A80     		strh	r2, [r3]
 3521              	.L141:
 980:.\invn.c      **** 				}
 981:.\invn.c      **** #endif
 982:.\invn.c      **** 
 983:.\invn.c      ****                                 
 984:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20645e) || (MEMS_CHIP == HW_ICM20648) 
 985:.\invn.c      **** 				/* Activity recognition sample available from DMP FIFO */
 986:.\invn.c      **** 				if (header2 & ACT_RECOG_SET) {
 3522              		.loc 1 986 0
 3523 05d0 AE23     		mov	r3, #174
 3524 05d2 FB18     		add	r3, r7, r3
 3525 05d4 1B88     		ldrh	r3, [r3]
 3526 05d6 1A1C     		mov	r2, r3
 3527 05d8 8023     		mov	r3, #128
 3528 05da 1340     		and	r3, r2
 3529 05dc 34D0     		beq	.L144
 987:.\invn.c      **** 					/* Read activity type and associated timestamp out of DMP FIFO
 988:.\invn.c      **** 					activity type is a set of 2 bytes :
 989:.\invn.c      **** 					- high byte indicates activity start
 990:.\invn.c      **** 					- low byte indicates activity end */
 991:.\invn.c      **** 					dmp_get_bac_state(&bac_state);
 3530              		.loc 1 991 0
 3531 05de 464B     		ldr	r3, .L161+24
 3532 05e0 181C     		mov	r0, r3
 3533 05e2 FFF7FEFF 		bl	dmp_get_bac_state
 992:.\invn.c      **** 					dmp_get_bac_ts(&bac_ts);
 3534              		.loc 1 992 0
 3535 05e6 454B     		ldr	r3, .L161+28
 3536 05e8 181C     		mov	r0, r3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 81


 3537 05ea FFF7FEFF 		bl	dmp_get_bac_ts
 993:.\invn.c      **** 
 994:.\invn.c      **** 					if (hal.report & PRINT_TILT) {
 3538              		.loc 1 994 0
 3539 05ee 3D4B     		ldr	r3, .L161+4
 3540 05f0 1A68     		ldr	r2, [r3]
 3541 05f2 8023     		mov	r3, #128
 3542 05f4 DB03     		lsl	r3, r3, #15
 3543 05f6 1340     		and	r3, r2
 3544 05f8 14D0     		beq	.L145
 995:.\invn.c      **** 						/* Tilt information is inside BAC, so extract it out */
 996:.\invn.c      **** 
 997:.\invn.c      **** 						/* Check if bit tilt is set for activity start byte */
 998:.\invn.c      **** 						if ((bac_state >> 8) & BAC_TILT) {
 3545              		.loc 1 998 0
 3546 05fa 3F4B     		ldr	r3, .L161+24
 3547 05fc 1B88     		ldrh	r3, [r3]
 3548 05fe 1B0A     		lsr	r3, r3, #8
 3549 0600 9BB2     		uxth	r3, r3
 3550 0602 1A1C     		mov	r2, r3
 3551 0604 1023     		mov	r3, #16
 3552 0606 1340     		and	r3, r2
 3553 0608 03D0     		beq	.L146
 999:.\invn.c      **** 							/* Start of tilt detected */
1000:.\invn.c      **** 							tilt_state = 2;
 3554              		.loc 1 1000 0
 3555 060a 3D4B     		ldr	r3, .L161+32
 3556 060c 0222     		mov	r2, #2
 3557 060e 1A70     		strb	r2, [r3]
 3558 0610 08E0     		b	.L145
 3559              	.L146:
1001:.\invn.c      **** 						}
1002:.\invn.c      **** 						/* Check if bit tilt is set for activity end byte */
1003:.\invn.c      **** 						else if (bac_state & BAC_TILT) {
 3560              		.loc 1 1003 0
 3561 0612 394B     		ldr	r3, .L161+24
 3562 0614 1B88     		ldrh	r3, [r3]
 3563 0616 1A1C     		mov	r2, r3
 3564 0618 1023     		mov	r3, #16
 3565 061a 1340     		and	r3, r2
 3566 061c 02D0     		beq	.L145
1004:.\invn.c      **** 							/* End of tilt detected */
1005:.\invn.c      **** 							tilt_state = 1;
 3567              		.loc 1 1005 0
 3568 061e 384B     		ldr	r3, .L161+32
 3569 0620 0122     		mov	r2, #1
 3570 0622 1A70     		strb	r2, [r3]
 3571              	.L145:
1006:.\invn.c      **** 						}
1007:.\invn.c      **** 
1008:.\invn.c      **** 					}
1009:.\invn.c      **** 
1010:.\invn.c      **** 					if (hal.report & PRINT_BAC)
 3572              		.loc 1 1010 0
 3573 0624 2F4B     		ldr	r3, .L161+4
 3574 0626 1A68     		ldr	r2, [r3]
 3575 0628 8023     		mov	r3, #128
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 82


 3576 062a 5B03     		lsl	r3, r3, #13
 3577 062c 1340     		and	r3, r2
 3578 062e 02D0     		beq	.L147
1011:.\invn.c      **** 						bac_data_was_set = 1;
 3579              		.loc 1 1011 0
 3580 0630 344B     		ldr	r3, .L161+36
 3581 0632 0122     		mov	r2, #1
 3582 0634 1A80     		strh	r2, [r3]
 3583              	.L147:
1012:.\invn.c      **** 					if (hal.report & PRINT_TILT)
 3584              		.loc 1 1012 0
 3585 0636 2B4B     		ldr	r3, .L161+4
 3586 0638 1A68     		ldr	r2, [r3]
 3587 063a 8023     		mov	r3, #128
 3588 063c DB03     		lsl	r3, r3, #15
 3589 063e 1340     		and	r3, r2
 3590 0640 02D0     		beq	.L144
1013:.\invn.c      **** 						tilt_data_was_set = 1;
 3591              		.loc 1 1013 0
 3592 0642 314B     		ldr	r3, .L161+40
 3593 0644 0122     		mov	r2, #1
 3594 0646 1A80     		strh	r2, [r3]
 3595              	.L144:
1014:.\invn.c      **** 				}
1015:.\invn.c      **** 
1016:.\invn.c      **** 				if (header2 & FLIP_PICKUP_SET) {
 3596              		.loc 1 1016 0
 3597 0648 AE23     		mov	r3, #174
 3598 064a FB18     		add	r3, r7, r3
 3599 064c 1B88     		ldrh	r3, [r3]
 3600 064e 1A1C     		mov	r2, r3
 3601 0650 8023     		mov	r3, #128
 3602 0652 DB00     		lsl	r3, r3, #3
 3603 0654 1340     		and	r3, r2
 3604 0656 0CD0     		beq	.L148
1017:.\invn.c      **** 					if (hal.report & PRINT_FLIP_PICKUP) {
 3605              		.loc 1 1017 0
 3606 0658 224B     		ldr	r3, .L161+4
 3607 065a 1A68     		ldr	r2, [r3]
 3608 065c 8023     		mov	r3, #128
 3609 065e 9B03     		lsl	r3, r3, #14
 3610 0660 1340     		and	r3, r2
 3611 0662 06D0     		beq	.L148
1018:.\invn.c      **** 						dmp_get_flip_pickup_state(&flip_pickup);
 3612              		.loc 1 1018 0
 3613 0664 294B     		ldr	r3, .L161+44
 3614 0666 181C     		mov	r0, r3
 3615 0668 FFF7FEFF 		bl	dmp_get_flip_pickup_state
1019:.\invn.c      **** 						flip_data_was_set = 1;
 3616              		.loc 1 1019 0
 3617 066c 284B     		ldr	r3, .L161+48
 3618 066e 0122     		mov	r2, #1
 3619 0670 1A80     		strh	r2, [r3]
 3620              	.L148:
1020:.\invn.c      **** 					}
1021:.\invn.c      **** 				}
1022:.\invn.c      **** #endif
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 83


1023:.\invn.c      **** #endif
1024:.\invn.c      **** 
1025:.\invn.c      **** 				process_sensor_output();
 3621              		.loc 1 1025 0
 3622 0672 FFF7FEFF 		bl	process_sensor_output
 3623              	.L131:
 803:.\invn.c      **** 				if (inv_mems_fifo_pop(&header, &header2, &data_left_in_fifo))
 3624              		.loc 1 803 0
 3625 0676 2223     		mov	r3, #34
 3626 0678 FB18     		add	r3, r7, r3
 3627 067a 1B88     		ldrh	r3, [r3]
 3628 067c 5A1E     		sub	r2, r3, #1
 3629 067e 91B2     		uxth	r1, r2
 3630 0680 2222     		mov	r2, #34
 3631 0682 BA18     		add	r2, r7, r2
 3632 0684 1180     		strh	r1, [r2]
 3633 0686 002B     		cmp	r3, #0
 3634 0688 00D0     		beq	.LCB3027
 3635 068a 33E5     		b	.L149	@long jump
 3636              	.LCB3027:
 3637              	.L133:
1026:.\invn.c      **** 			}
1027:.\invn.c      **** 			if (!data_left_in_fifo)
 3638              		.loc 1 1027 0
 3639 068c A823     		mov	r3, #168
 3640 068e FB18     		add	r3, r7, r3
 3641 0690 1B68     		ldr	r3, [r3]
 3642 0692 002B     		cmp	r3, #0
 3643 0694 00D1     		bne	.L150
1028:.\invn.c      **** 				break;
 3644              		.loc 1 1028 0
 3645 0696 05E0     		b	.L128
 3646              	.L150:
1029:.\invn.c      **** 
1030:.\invn.c      **** 		} while (data_left_in_fifo);
 3647              		.loc 1 1030 0
 3648 0698 A823     		mov	r3, #168
 3649 069a FB18     		add	r3, r7, r3
 3650 069c 1B68     		ldr	r3, [r3]
 3651 069e 002B     		cmp	r3, #0
 3652 06a0 00D0     		beq	.LCB3042
 3653 06a2 F1E4     		b	.L151	@long jump
 3654              	.LCB3042:
 3655              	.L128:
1031:.\invn.c      **** 
1032:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20609)                
1033:.\invn.c      **** 		if (int_read_back & DMP_INT_SMD) {
1034:.\invn.c      ****                   if (hal.report & PRINT_SMD){
1035:.\invn.c      **** 				print_command_console(">> SMD Interrupt *********\r\n");
1036:.\invn.c      ****                   }
1037:.\invn.c      ****                         
1038:.\invn.c      **** 		}
1039:.\invn.c      **** #endif
1040:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)                
1041:.\invn.c      ****                 if (int_read_back & BIT_MSG_DMP_INT_3) {
1042:.\invn.c      **** #else
1043:.\invn.c      **** 		if (int_read_back & DMP_INT_PED) {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 84


1044:.\invn.c      **** #endif                  
1045:.\invn.c      ****                   if (hal.report & PRINT_STEP_DETECTOR){
1046:.\invn.c      **** //				print_command_console("Step Detected>>>>>>>\r\n");
1047:.\invn.c      ****                                 
1048:.\invn.c      ****                   }
1049:.\invn.c      ****                 }
1050:.\invn.c      **** #if (MEMS_CHIP != HW_ICM20609)                
1051:.\invn.c      ****                 if (header & PED_STEPDET_SET){
 3656              		.loc 1 1051 0
 3657 06a4 B023     		mov	r3, #176
 3658 06a6 FB18     		add	r3, r7, r3
 3659 06a8 1B88     		ldrh	r3, [r3]
 3660 06aa 1A1C     		mov	r2, r3
 3661 06ac 1023     		mov	r3, #16
 3662 06ae 1340     		and	r3, r2
 3663 06b0 13D0     		beq	.L125
1052:.\invn.c      **** #else
1053:.\invn.c      **** 		if (int_read_back & DMP_INT_PED) {
1054:.\invn.c      **** #endif
1055:.\invn.c      ****                         if (hal.report & PRINT_STEP_COUNTER){
 3664              		.loc 1 1055 0
 3665 06b2 0C4B     		ldr	r3, .L161+4
 3666 06b4 1A68     		ldr	r2, [r3]
 3667 06b6 8023     		mov	r3, #128
 3668 06b8 DB00     		lsl	r3, r3, #3
 3669 06ba 1340     		and	r3, r2
 3670 06bc 0DD0     		beq	.L125
 3671              	.LBB8:
1056:.\invn.c      **** 				unsigned long steps = 0;
 3672              		.loc 1 1056 0
 3673 06be 0023     		mov	r3, #0
 3674 06c0 7B60     		str	r3, [r7, #4]
1057:.\invn.c      **** 				static unsigned long old_steps;
1058:.\invn.c      **** 				dmp_get_pedometer_num_of_steps(&steps);
 3675              		.loc 1 1058 0
 3676 06c2 3B1D     		add	r3, r7, #4
 3677 06c4 181C     		mov	r0, r3
 3678 06c6 FFF7FEFF 		bl	dmp_get_pedometer_num_of_steps
1059:.\invn.c      **** 
1060:.\invn.c      **** 				if (steps != old_steps){
 3679              		.loc 1 1060 0
 3680 06ca 7A68     		ldr	r2, [r7, #4]
 3681 06cc 114B     		ldr	r3, .L161+52
 3682 06ce 1B68     		ldr	r3, [r3]
 3683 06d0 9A42     		cmp	r2, r3
 3684 06d2 02D0     		beq	.L153
1061:.\invn.c      **** //					INV_SPRINTF(tst, INV_TST_LEN, "\tStep Counter %d\r\n", steps);
1062:.\invn.c      **** //					print_command_console(tst);
1063:.\invn.c      **** 					old_steps = steps;
 3685              		.loc 1 1063 0
 3686 06d4 7A68     		ldr	r2, [r7, #4]
 3687 06d6 0F4B     		ldr	r3, .L161+52
 3688 06d8 1A60     		str	r2, [r3]
 3689              	.L153:
 3690              	.L125:
 3691              	.LBE8:
 3692              	.LBE4:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 85


1064:.\invn.c      **** 				}
1065:.\invn.c      ****                         }
1066:.\invn.c      **** 		}
1067:.\invn.c      **** 
1068:.\invn.c      **** #if (MEMS_CHIP == HW_ICM20648)
1069:.\invn.c      ****                 if (int_read_back & BIT_MSG_DMP_INT_2) {
1070:.\invn.c      **** 			if (hal.report & PRINT_SMD){}
1071:.\invn.c      **** //				print_command_console(">> SMD Interrupt *********\r\n");
1072:.\invn.c      **** 		}
1073:.\invn.c      **** #endif
1074:.\invn.c      ****        }
1075:.\invn.c      **** }
 3693              		.loc 1 1075 0
 3694 06da BD46     		mov	sp, r7
 3695 06dc 31B0     		add	sp, sp, #196
 3696              		@ sp needed
 3697 06de F0BD     		pop	{r4, r5, r6, r7, pc}
 3698              	.L162:
 3699              		.align	2
 3700              	.L161:
 3701 06e0 00000000 		.word	rv_float
 3702 06e4 00000000 		.word	hal
 3703 06e8 00000000 		.word	cube_gmrv
 3704 06ec 00000000 		.word	gmrv_float
 3705 06f0 00000000 		.word	gmrv_accuracy
 3706 06f4 00000000 		.word	gmrv_quat_was_set
 3707 06f8 00000000 		.word	bac_state
 3708 06fc 00000000 		.word	bac_ts
 3709 0700 00000000 		.word	tilt_state
 3710 0704 00000000 		.word	bac_data_was_set
 3711 0708 00000000 		.word	tilt_data_was_set
 3712 070c 00000000 		.word	flip_pickup
 3713 0710 00000000 		.word	flip_data_was_set
 3714 0714 E8010000 		.word	old_steps.9404
 3715              		.cfi_endproc
 3716              	.LFE46:
 3717              		.size	fifo_handler, .-fifo_handler
 3718              		.bss
 3719              		.align	3
 3720              	lastIrqTimeUs.9389:
 3721 01d8 00000000 		.space	8
 3721      00000000 
 3722              		.align	3
 3723              	currentIrqTimeUs.9390:
 3724 01e0 00000000 		.space	8
 3724      00000000 
 3725              		.align	2
 3726              	old_steps.9404:
 3727 01e8 00000000 		.space	4
 3728 01ec 00000000 		.text
 3729              	.Letext0:
 3730              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3731              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 3732              		.file 4 "Generated_Source\\PSoC4/BLE_Stack.h"
 3733              		.file 5 "Generated_Source\\PSoC4/BLE_dis.h"
 3734              		.file 6 "./.\\20648_driver\\invn\\invn_types.h"
 3735              		.file 7 "./.\\20648_driver\\common\\mltypes.h"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 86


 3736              		.file 8 "./invn.h"
 3737              		.file 9 "./.\\20648_driver\\drivers\\inv_mems_defines.h"
 3738              		.section	.debug_info,"",%progbits
 3739              	.Ldebug_info0:
 3740 0000 590B0000 		.4byte	0xb59
 3741 0004 0400     		.2byte	0x4
 3742 0006 00000000 		.4byte	.Ldebug_abbrev0
 3743 000a 04       		.byte	0x4
 3744 000b 01       		.uleb128 0x1
 3745 000c 4D130000 		.4byte	.LASF225
 3746 0010 01       		.byte	0x1
 3747 0011 860A0000 		.4byte	.LASF226
 3748 0015 700E0000 		.4byte	.LASF227
 3749 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3750 001d 00000000 		.4byte	0
 3751 0021 00000000 		.4byte	.Ldebug_line0
 3752 0025 02       		.uleb128 0x2
 3753 0026 01       		.byte	0x1
 3754 0027 06       		.byte	0x6
 3755 0028 D6030000 		.4byte	.LASF0
 3756 002c 03       		.uleb128 0x3
 3757 002d 42010000 		.4byte	.LASF3
 3758 0031 02       		.byte	0x2
 3759 0032 1D       		.byte	0x1d
 3760 0033 37000000 		.4byte	0x37
 3761 0037 02       		.uleb128 0x2
 3762 0038 01       		.byte	0x1
 3763 0039 08       		.byte	0x8
 3764 003a B20D0000 		.4byte	.LASF1
 3765 003e 02       		.uleb128 0x2
 3766 003f 02       		.byte	0x2
 3767 0040 05       		.byte	0x5
 3768 0041 ED090000 		.4byte	.LASF2
 3769 0045 03       		.uleb128 0x3
 3770 0046 9B100000 		.4byte	.LASF4
 3771 004a 02       		.byte	0x2
 3772 004b 2B       		.byte	0x2b
 3773 004c 50000000 		.4byte	0x50
 3774 0050 02       		.uleb128 0x2
 3775 0051 02       		.byte	0x2
 3776 0052 07       		.byte	0x7
 3777 0053 92080000 		.4byte	.LASF5
 3778 0057 02       		.uleb128 0x2
 3779 0058 04       		.byte	0x4
 3780 0059 05       		.byte	0x5
 3781 005a 65140000 		.4byte	.LASF6
 3782 005e 02       		.uleb128 0x2
 3783 005f 04       		.byte	0x4
 3784 0060 07       		.byte	0x7
 3785 0061 94070000 		.4byte	.LASF7
 3786 0065 02       		.uleb128 0x2
 3787 0066 08       		.byte	0x8
 3788 0067 05       		.byte	0x5
 3789 0068 C8030000 		.4byte	.LASF8
 3790 006c 02       		.uleb128 0x2
 3791 006d 08       		.byte	0x8
 3792 006e 07       		.byte	0x7
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 87


 3793 006f 48020000 		.4byte	.LASF9
 3794 0073 04       		.uleb128 0x4
 3795 0074 04       		.byte	0x4
 3796 0075 05       		.byte	0x5
 3797 0076 696E7400 		.ascii	"int\000"
 3798 007a 02       		.uleb128 0x2
 3799 007b 04       		.byte	0x4
 3800 007c 07       		.byte	0x7
 3801 007d 8E100000 		.4byte	.LASF10
 3802 0081 03       		.uleb128 0x3
 3803 0082 B5120000 		.4byte	.LASF11
 3804 0086 03       		.byte	0x3
 3805 0087 15       		.byte	0x15
 3806 0088 2C000000 		.4byte	0x2c
 3807 008c 03       		.uleb128 0x3
 3808 008d 92050000 		.4byte	.LASF12
 3809 0091 03       		.byte	0x3
 3810 0092 21       		.byte	0x21
 3811 0093 45000000 		.4byte	0x45
 3812 0097 02       		.uleb128 0x2
 3813 0098 04       		.byte	0x4
 3814 0099 04       		.byte	0x4
 3815 009a 480D0000 		.4byte	.LASF13
 3816 009e 02       		.uleb128 0x2
 3817 009f 08       		.byte	0x8
 3818 00a0 04       		.byte	0x4
 3819 00a1 9B050000 		.4byte	.LASF14
 3820 00a5 02       		.uleb128 0x2
 3821 00a6 01       		.byte	0x1
 3822 00a7 08       		.byte	0x8
 3823 00a8 3C100000 		.4byte	.LASF15
 3824 00ac 02       		.uleb128 0x2
 3825 00ad 04       		.byte	0x4
 3826 00ae 07       		.byte	0x7
 3827 00af 410B0000 		.4byte	.LASF16
 3828 00b3 05       		.uleb128 0x5
 3829 00b4 01       		.byte	0x1
 3830 00b5 04       		.byte	0x4
 3831 00b6 4201     		.2byte	0x142
 3832 00b8 70020000 		.4byte	0x270
 3833 00bc 06       		.uleb128 0x6
 3834 00bd A5080000 		.4byte	.LASF17
 3835 00c1 00       		.sleb128 0
 3836 00c2 06       		.uleb128 0x6
 3837 00c3 E2030000 		.4byte	.LASF18
 3838 00c7 01       		.sleb128 1
 3839 00c8 06       		.uleb128 0x6
 3840 00c9 D8010000 		.4byte	.LASF19
 3841 00cd 02       		.sleb128 2
 3842 00ce 06       		.uleb128 0x6
 3843 00cf 8C110000 		.4byte	.LASF20
 3844 00d3 03       		.sleb128 3
 3845 00d4 06       		.uleb128 0x6
 3846 00d5 5F020000 		.4byte	.LASF21
 3847 00d9 04       		.sleb128 4
 3848 00da 06       		.uleb128 0x6
 3849 00db 1E000000 		.4byte	.LASF22
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 88


 3850 00df 05       		.sleb128 5
 3851 00e0 06       		.uleb128 0x6
 3852 00e1 D5080000 		.4byte	.LASF23
 3853 00e5 06       		.sleb128 6
 3854 00e6 06       		.uleb128 0x6
 3855 00e7 D6060000 		.4byte	.LASF24
 3856 00eb 20       		.sleb128 32
 3857 00ec 06       		.uleb128 0x6
 3858 00ed 6B040000 		.4byte	.LASF25
 3859 00f1 21       		.sleb128 33
 3860 00f2 06       		.uleb128 0x6
 3861 00f3 41090000 		.4byte	.LASF26
 3862 00f7 22       		.sleb128 34
 3863 00f8 06       		.uleb128 0x6
 3864 00f9 F7090000 		.4byte	.LASF27
 3865 00fd 23       		.sleb128 35
 3866 00fe 06       		.uleb128 0x6
 3867 00ff 820C0000 		.4byte	.LASF28
 3868 0103 24       		.sleb128 36
 3869 0104 06       		.uleb128 0x6
 3870 0105 DC0B0000 		.4byte	.LASF29
 3871 0109 25       		.sleb128 37
 3872 010a 06       		.uleb128 0x6
 3873 010b 1D050000 		.4byte	.LASF30
 3874 010f 26       		.sleb128 38
 3875 0110 06       		.uleb128 0x6
 3876 0111 65090000 		.4byte	.LASF31
 3877 0115 27       		.sleb128 39
 3878 0116 06       		.uleb128 0x6
 3879 0117 6C100000 		.4byte	.LASF32
 3880 011b 28       		.sleb128 40
 3881 011c 06       		.uleb128 0x6
 3882 011d 70030000 		.4byte	.LASF33
 3883 0121 29       		.sleb128 41
 3884 0122 06       		.uleb128 0x6
 3885 0123 CF000000 		.4byte	.LASF34
 3886 0127 2A       		.sleb128 42
 3887 0128 06       		.uleb128 0x6
 3888 0129 A9020000 		.4byte	.LASF35
 3889 012d 2B       		.sleb128 43
 3890 012e 06       		.uleb128 0x6
 3891 012f 540F0000 		.4byte	.LASF36
 3892 0133 2C       		.sleb128 44
 3893 0134 06       		.uleb128 0x6
 3894 0135 8D030000 		.4byte	.LASF37
 3895 0139 2D       		.sleb128 45
 3896 013a 06       		.uleb128 0x6
 3897 013b E9100000 		.4byte	.LASF38
 3898 013f 2E       		.sleb128 46
 3899 0140 06       		.uleb128 0x6
 3900 0141 19010000 		.4byte	.LASF39
 3901 0145 2F       		.sleb128 47
 3902 0146 06       		.uleb128 0x6
 3903 0147 440C0000 		.4byte	.LASF40
 3904 014b 30       		.sleb128 48
 3905 014c 06       		.uleb128 0x6
 3906 014d EF140000 		.4byte	.LASF41
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 89


 3907 0151 31       		.sleb128 49
 3908 0152 06       		.uleb128 0x6
 3909 0153 230C0000 		.4byte	.LASF42
 3910 0157 32       		.sleb128 50
 3911 0158 06       		.uleb128 0x6
 3912 0159 C20F0000 		.4byte	.LASF43
 3913 015d 33       		.sleb128 51
 3914 015e 06       		.uleb128 0x6
 3915 015f 8C0F0000 		.4byte	.LASF44
 3916 0163 C000     		.sleb128 64
 3917 0165 06       		.uleb128 0x6
 3918 0166 360A0000 		.4byte	.LASF45
 3919 016a C100     		.sleb128 65
 3920 016c 06       		.uleb128 0x6
 3921 016d 36150000 		.4byte	.LASF46
 3922 0171 C200     		.sleb128 66
 3923 0173 06       		.uleb128 0x6
 3924 0174 2C120000 		.4byte	.LASF47
 3925 0178 C300     		.sleb128 67
 3926 017a 06       		.uleb128 0x6
 3927 017b E2070000 		.4byte	.LASF48
 3928 017f C400     		.sleb128 68
 3929 0181 06       		.uleb128 0x6
 3930 0182 4C010000 		.4byte	.LASF49
 3931 0186 C500     		.sleb128 69
 3932 0188 06       		.uleb128 0x6
 3933 0189 A3090000 		.4byte	.LASF50
 3934 018d C600     		.sleb128 70
 3935 018f 06       		.uleb128 0x6
 3936 0190 08100000 		.4byte	.LASF51
 3937 0194 C700     		.sleb128 71
 3938 0196 06       		.uleb128 0x6
 3939 0197 DB130000 		.4byte	.LASF52
 3940 019b C800     		.sleb128 72
 3941 019d 06       		.uleb128 0x6
 3942 019e 82040000 		.4byte	.LASF53
 3943 01a2 C900     		.sleb128 73
 3944 01a4 06       		.uleb128 0x6
 3945 01a5 00000000 		.4byte	.LASF54
 3946 01a9 CA00     		.sleb128 74
 3947 01ab 06       		.uleb128 0x6
 3948 01ac 4D100000 		.4byte	.LASF55
 3949 01b0 CB00     		.sleb128 75
 3950 01b2 06       		.uleb128 0x6
 3951 01b3 C8070000 		.4byte	.LASF56
 3952 01b7 CC00     		.sleb128 76
 3953 01b9 06       		.uleb128 0x6
 3954 01ba CF100000 		.4byte	.LASF57
 3955 01be CD00     		.sleb128 77
 3956 01c0 06       		.uleb128 0x6
 3957 01c1 CB040000 		.4byte	.LASF58
 3958 01c5 CE00     		.sleb128 78
 3959 01c7 06       		.uleb128 0x6
 3960 01c8 DB0E0000 		.4byte	.LASF59
 3961 01cc CF00     		.sleb128 79
 3962 01ce 06       		.uleb128 0x6
 3963 01cf EE080000 		.4byte	.LASF60
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 90


 3964 01d3 D000     		.sleb128 80
 3965 01d5 06       		.uleb128 0x6
 3966 01d6 EC120000 		.4byte	.LASF61
 3967 01da D100     		.sleb128 81
 3968 01dc 06       		.uleb128 0x6
 3969 01dd 4E080000 		.4byte	.LASF62
 3970 01e1 D200     		.sleb128 82
 3971 01e3 06       		.uleb128 0x6
 3972 01e4 F30D0000 		.4byte	.LASF63
 3973 01e8 D300     		.sleb128 83
 3974 01ea 06       		.uleb128 0x6
 3975 01eb 4E0D0000 		.4byte	.LASF64
 3976 01ef D400     		.sleb128 84
 3977 01f1 06       		.uleb128 0x6
 3978 01f2 00080000 		.4byte	.LASF65
 3979 01f6 D500     		.sleb128 85
 3980 01f8 06       		.uleb128 0x6
 3981 01f9 74020000 		.4byte	.LASF66
 3982 01fd D600     		.sleb128 86
 3983 01ff 06       		.uleb128 0x6
 3984 0200 A6100000 		.4byte	.LASF67
 3985 0204 D700     		.sleb128 87
 3986 0206 06       		.uleb128 0x6
 3987 0207 E9040000 		.4byte	.LASF68
 3988 020b D800     		.sleb128 88
 3989 020d 06       		.uleb128 0x6
 3990 020e 38030000 		.4byte	.LASF69
 3991 0212 F000     		.sleb128 112
 3992 0214 06       		.uleb128 0x6
 3993 0215 C9140000 		.4byte	.LASF70
 3994 0219 F100     		.sleb128 113
 3995 021b 06       		.uleb128 0x6
 3996 021c 8F0A0000 		.4byte	.LASF71
 3997 0220 F200     		.sleb128 114
 3998 0222 06       		.uleb128 0x6
 3999 0223 D50A0000 		.4byte	.LASF72
 4000 0227 F300     		.sleb128 115
 4001 0229 06       		.uleb128 0x6
 4002 022a ED0C0000 		.4byte	.LASF73
 4003 022e F400     		.sleb128 116
 4004 0230 06       		.uleb128 0x6
 4005 0231 3A140000 		.4byte	.LASF74
 4006 0235 F500     		.sleb128 117
 4007 0237 06       		.uleb128 0x6
 4008 0238 F8000000 		.4byte	.LASF75
 4009 023c F600     		.sleb128 118
 4010 023e 06       		.uleb128 0x6
 4011 023f 45000000 		.4byte	.LASF76
 4012 0243 F700     		.sleb128 119
 4013 0245 06       		.uleb128 0x6
 4014 0246 0D110000 		.4byte	.LASF77
 4015 024a F800     		.sleb128 120
 4016 024c 06       		.uleb128 0x6
 4017 024d 3C110000 		.4byte	.LASF78
 4018 0251 F900     		.sleb128 121
 4019 0253 06       		.uleb128 0x6
 4020 0254 B2060000 		.4byte	.LASF79
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 91


 4021 0258 FA00     		.sleb128 122
 4022 025a 06       		.uleb128 0x6
 4023 025b ED020000 		.4byte	.LASF80
 4024 025f FA01     		.sleb128 250
 4025 0261 06       		.uleb128 0x6
 4026 0262 49070000 		.4byte	.LASF81
 4027 0266 FB01     		.sleb128 251
 4028 0268 06       		.uleb128 0x6
 4029 0269 89060000 		.4byte	.LASF82
 4030 026d FF01     		.sleb128 255
 4031 026f 00       		.byte	0
 4032 0270 07       		.uleb128 0x7
 4033 0271 01       		.byte	0x1
 4034 0272 05       		.byte	0x5
 4035 0273 22       		.byte	0x22
 4036 0274 B5020000 		.4byte	0x2b5
 4037 0278 06       		.uleb128 0x6
 4038 0279 13150000 		.4byte	.LASF83
 4039 027d 00       		.sleb128 0
 4040 027e 06       		.uleb128 0x6
 4041 027f B0110000 		.4byte	.LASF84
 4042 0283 01       		.sleb128 1
 4043 0284 06       		.uleb128 0x6
 4044 0285 790D0000 		.4byte	.LASF85
 4045 0289 02       		.sleb128 2
 4046 028a 06       		.uleb128 0x6
 4047 028b 72060000 		.4byte	.LASF86
 4048 028f 03       		.sleb128 3
 4049 0290 06       		.uleb128 0x6
 4050 0291 B3050000 		.4byte	.LASF87
 4051 0295 04       		.sleb128 4
 4052 0296 06       		.uleb128 0x6
 4053 0297 590E0000 		.4byte	.LASF88
 4054 029b 05       		.sleb128 5
 4055 029c 06       		.uleb128 0x6
 4056 029d B80A0000 		.4byte	.LASF89
 4057 02a1 06       		.sleb128 6
 4058 02a2 06       		.uleb128 0x6
 4059 02a3 C60C0000 		.4byte	.LASF90
 4060 02a7 07       		.sleb128 7
 4061 02a8 06       		.uleb128 0x6
 4062 02a9 C4090000 		.4byte	.LASF91
 4063 02ad 08       		.sleb128 8
 4064 02ae 06       		.uleb128 0x6
 4065 02af C00D0000 		.4byte	.LASF92
 4066 02b3 09       		.sleb128 9
 4067 02b4 00       		.byte	0
 4068 02b5 02       		.uleb128 0x2
 4069 02b6 08       		.byte	0x8
 4070 02b7 04       		.byte	0x4
 4071 02b8 30100000 		.4byte	.LASF93
 4072 02bc 03       		.uleb128 0x3
 4073 02bd EA010000 		.4byte	.LASF94
 4074 02c1 06       		.byte	0x6
 4075 02c2 2F       		.byte	0x2f
 4076 02c3 65000000 		.4byte	0x65
 4077 02c7 08       		.uleb128 0x8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 92


 4078 02c8 97000000 		.4byte	0x97
 4079 02cc D7020000 		.4byte	0x2d7
 4080 02d0 09       		.uleb128 0x9
 4081 02d1 AC000000 		.4byte	0xac
 4082 02d5 03       		.byte	0x3
 4083 02d6 00       		.byte	0
 4084 02d7 0A       		.uleb128 0xa
 4085 02d8 B8070000 		.4byte	.LASF228
 4086 02dc 01       		.byte	0x1
 4087 02dd 09       		.byte	0x9
 4088 02de 9202     		.2byte	0x292
 4089 02e0 11040000 		.4byte	0x411
 4090 02e4 06       		.uleb128 0x6
 4091 02e5 1D0A0000 		.4byte	.LASF95
 4092 02e9 00       		.sleb128 0
 4093 02ea 06       		.uleb128 0x6
 4094 02eb F5030000 		.4byte	.LASF96
 4095 02ef 01       		.sleb128 1
 4096 02f0 06       		.uleb128 0x6
 4097 02f1 4A0B0000 		.4byte	.LASF97
 4098 02f5 02       		.sleb128 2
 4099 02f6 06       		.uleb128 0x6
 4100 02f7 18130000 		.4byte	.LASF98
 4101 02fb 03       		.sleb128 3
 4102 02fc 06       		.uleb128 0x6
 4103 02fd 960B0000 		.4byte	.LASF99
 4104 0301 04       		.sleb128 4
 4105 0302 06       		.uleb128 0x6
 4106 0303 F5010000 		.4byte	.LASF100
 4107 0307 05       		.sleb128 5
 4108 0308 06       		.uleb128 0x6
 4109 0309 D5090000 		.4byte	.LASF101
 4110 030d 06       		.sleb128 6
 4111 030e 06       		.uleb128 0x6
 4112 030f FA060000 		.4byte	.LASF102
 4113 0313 07       		.sleb128 7
 4114 0314 06       		.uleb128 0x6
 4115 0315 74070000 		.4byte	.LASF103
 4116 0319 08       		.sleb128 8
 4117 031a 06       		.uleb128 0x6
 4118 031b 9E0C0000 		.4byte	.LASF104
 4119 031f 09       		.sleb128 9
 4120 0320 06       		.uleb128 0x6
 4121 0321 6F080000 		.4byte	.LASF105
 4122 0325 0A       		.sleb128 10
 4123 0326 06       		.uleb128 0x6
 4124 0327 19030000 		.4byte	.LASF106
 4125 032b 0B       		.sleb128 11
 4126 032c 06       		.uleb128 0x6
 4127 032d 5F120000 		.4byte	.LASF107
 4128 0331 0C       		.sleb128 12
 4129 0332 06       		.uleb128 0x6
 4130 0333 2C060000 		.4byte	.LASF108
 4131 0337 0D       		.sleb128 13
 4132 0338 06       		.uleb128 0x6
 4133 0339 1D0D0000 		.4byte	.LASF109
 4134 033d 0E       		.sleb128 14
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 93


 4135 033e 06       		.uleb128 0x6
 4136 033f 620A0000 		.4byte	.LASF110
 4137 0343 0F       		.sleb128 15
 4138 0344 06       		.uleb128 0x6
 4139 0345 0D090000 		.4byte	.LASF111
 4140 0349 10       		.sleb128 16
 4141 034a 06       		.uleb128 0x6
 4142 034b 73010000 		.4byte	.LASF112
 4143 034f 11       		.sleb128 17
 4144 0350 06       		.uleb128 0x6
 4145 0351 650C0000 		.4byte	.LASF113
 4146 0355 12       		.sleb128 18
 4147 0356 06       		.uleb128 0x6
 4148 0357 6E140000 		.4byte	.LASF114
 4149 035b 13       		.sleb128 19
 4150 035c 06       		.uleb128 0x6
 4151 035d 6B0B0000 		.4byte	.LASF115
 4152 0361 14       		.sleb128 20
 4153 0362 06       		.uleb128 0x6
 4154 0363 70150000 		.4byte	.LASF116
 4155 0367 15       		.sleb128 21
 4156 0368 06       		.uleb128 0x6
 4157 0369 BC080000 		.4byte	.LASF117
 4158 036d 16       		.sleb128 22
 4159 036e 06       		.uleb128 0x6
 4160 036f 88120000 		.4byte	.LASF118
 4161 0373 17       		.sleb128 23
 4162 0374 06       		.uleb128 0x6
 4163 0375 C8020000 		.4byte	.LASF119
 4164 0379 18       		.sleb128 24
 4165 037a 06       		.uleb128 0x6
 4166 037b A0140000 		.4byte	.LASF120
 4167 037f 19       		.sleb128 25
 4168 0380 06       		.uleb128 0x6
 4169 0381 AF000000 		.4byte	.LASF121
 4170 0385 1A       		.sleb128 26
 4171 0386 06       		.uleb128 0x6
 4172 0387 54150000 		.4byte	.LASF122
 4173 038b 1B       		.sleb128 27
 4174 038c 06       		.uleb128 0x6
 4175 038d A2040000 		.4byte	.LASF123
 4176 0391 1C       		.sleb128 28
 4177 0392 06       		.uleb128 0x6
 4178 0393 E8050000 		.4byte	.LASF124
 4179 0397 1D       		.sleb128 29
 4180 0398 06       		.uleb128 0x6
 4181 0399 9C010000 		.4byte	.LASF125
 4182 039d 1E       		.sleb128 30
 4183 039e 06       		.uleb128 0x6
 4184 039f 15070000 		.4byte	.LASF126
 4185 03a3 1F       		.sleb128 31
 4186 03a4 06       		.uleb128 0x6
 4187 03a5 BD120000 		.4byte	.LASF127
 4188 03a9 20       		.sleb128 32
 4189 03aa 06       		.uleb128 0x6
 4190 03ab 2A0F0000 		.4byte	.LASF128
 4191 03af 21       		.sleb128 33
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 94


 4192 03b0 06       		.uleb128 0x6
 4193 03b1 53050000 		.4byte	.LASF129
 4194 03b5 22       		.sleb128 34
 4195 03b6 06       		.uleb128 0x6
 4196 03b7 140E0000 		.4byte	.LASF130
 4197 03bb 23       		.sleb128 35
 4198 03bc 06       		.uleb128 0x6
 4199 03bd AF0B0000 		.4byte	.LASF131
 4200 03c1 24       		.sleb128 36
 4201 03c2 06       		.uleb128 0x6
 4202 03c3 F90A0000 		.4byte	.LASF132
 4203 03c7 25       		.sleb128 37
 4204 03c8 06       		.uleb128 0x6
 4205 03c9 4F060000 		.4byte	.LASF133
 4206 03cd 26       		.sleb128 38
 4207 03ce 06       		.uleb128 0x6
 4208 03cf C7110000 		.4byte	.LASF134
 4209 03d3 27       		.sleb128 39
 4210 03d4 06       		.uleb128 0x6
 4211 03d5 64000000 		.4byte	.LASF135
 4212 03d9 28       		.sleb128 40
 4213 03da 06       		.uleb128 0x6
 4214 03db 1D0B0000 		.4byte	.LASF136
 4215 03df 29       		.sleb128 41
 4216 03e0 06       		.uleb128 0x6
 4217 03e1 2D040000 		.4byte	.LASF137
 4218 03e5 2A       		.sleb128 42
 4219 03e6 06       		.uleb128 0x6
 4220 03e7 9C000000 		.4byte	.LASF138
 4221 03eb 2B       		.sleb128 43
 4222 03ec 06       		.uleb128 0x6
 4223 03ed 12040000 		.4byte	.LASF139
 4224 03f1 2C       		.sleb128 44
 4225 03f2 06       		.uleb128 0x6
 4226 03f3 06060000 		.4byte	.LASF140
 4227 03f7 2D       		.sleb128 45
 4228 03f8 06       		.uleb128 0x6
 4229 03f9 E90F0000 		.4byte	.LASF141
 4230 03fd 2E       		.sleb128 46
 4231 03fe 06       		.uleb128 0x6
 4232 03ff 200F0000 		.4byte	.LASF142
 4233 0403 2F       		.sleb128 47
 4234 0404 06       		.uleb128 0x6
 4235 0405 65040000 		.4byte	.LASF143
 4236 0409 30       		.sleb128 48
 4237 040a 06       		.uleb128 0x6
 4238 040b C70E0000 		.4byte	.LASF144
 4239 040f 31       		.sleb128 49
 4240 0410 00       		.byte	0
 4241 0411 03       		.uleb128 0x3
 4242 0412 68070000 		.4byte	.LASF145
 4243 0416 07       		.byte	0x7
 4244 0417 24       		.byte	0x24
 4245 0418 73000000 		.4byte	0x73
 4246 041c 08       		.uleb128 0x8
 4247 041d 57000000 		.4byte	0x57
 4248 0421 2C040000 		.4byte	0x42c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 95


 4249 0425 09       		.uleb128 0x9
 4250 0426 AC000000 		.4byte	0xac
 4251 042a 02       		.byte	0x2
 4252 042b 00       		.byte	0
 4253 042c 08       		.uleb128 0x8
 4254 042d 3E000000 		.4byte	0x3e
 4255 0431 3C040000 		.4byte	0x43c
 4256 0435 09       		.uleb128 0x9
 4257 0436 AC000000 		.4byte	0xac
 4258 043a 02       		.byte	0x2
 4259 043b 00       		.byte	0
 4260 043c 0B       		.uleb128 0xb
 4261 043d C2140000 		.4byte	.LASF229
 4262 0441 10       		.byte	0x10
 4263 0442 08       		.byte	0x8
 4264 0443 0E       		.byte	0xe
 4265 0444 79040000 		.4byte	0x479
 4266 0448 0C       		.uleb128 0xc
 4267 0449 9B040000 		.4byte	.LASF146
 4268 044d 08       		.byte	0x8
 4269 044e 0F       		.byte	0xf
 4270 044f 57000000 		.4byte	0x57
 4271 0453 00       		.byte	0
 4272 0454 0C       		.uleb128 0xc
 4273 0455 85050000 		.4byte	.LASF147
 4274 0459 08       		.byte	0x8
 4275 045a 10       		.byte	0x10
 4276 045b 37000000 		.4byte	0x37
 4277 045f 04       		.byte	0x4
 4278 0460 0C       		.uleb128 0xc
 4279 0461 3F0E0000 		.4byte	.LASF148
 4280 0465 08       		.byte	0x8
 4281 0466 11       		.byte	0x11
 4282 0467 73000000 		.4byte	0x73
 4283 046b 08       		.byte	0x8
 4284 046c 0C       		.uleb128 0xc
 4285 046d 44130000 		.4byte	.LASF149
 4286 0471 08       		.byte	0x8
 4287 0472 12       		.byte	0x12
 4288 0473 79040000 		.4byte	0x479
 4289 0477 0C       		.byte	0xc
 4290 0478 00       		.byte	0
 4291 0479 0D       		.uleb128 0xd
 4292 047a 37000000 		.4byte	0x37
 4293 047e 0E       		.uleb128 0xe
 4294 047f 6D110000 		.4byte	.LASF230
 4295 0483 01       		.byte	0x1
 4296 0484 65       		.byte	0x65
 4297 0485 00000000 		.4byte	.LFB41
 4298 0489 14000000 		.4byte	.LFE41-.LFB41
 4299 048d 01       		.uleb128 0x1
 4300 048e 9C       		.byte	0x9c
 4301 048f 0F       		.uleb128 0xf
 4302 0490 1B120000 		.4byte	.LASF152
 4303 0494 01       		.byte	0x1
 4304 0495 6A       		.byte	0x6a
 4305 0496 11040000 		.4byte	0x411
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 96


 4306 049a 00000000 		.4byte	.LFB42
 4307 049e FC040000 		.4byte	.LFE42-.LFB42
 4308 04a2 01       		.uleb128 0x1
 4309 04a3 9C       		.byte	0x9c
 4310 04a4 D3040000 		.4byte	0x4d3
 4311 04a8 10       		.uleb128 0x10
 4312 04a9 30110000 		.4byte	.LASF154
 4313 04ad 01       		.byte	0x1
 4314 04ae 6A       		.byte	0x6a
 4315 04af 97000000 		.4byte	0x97
 4316 04b3 02       		.uleb128 0x2
 4317 04b4 91       		.byte	0x91
 4318 04b5 6C       		.sleb128 -20
 4319 04b6 11       		.uleb128 0x11
 4320 04b7 C1040000 		.4byte	.LASF150
 4321 04bb 01       		.byte	0x1
 4322 04bc 6F       		.byte	0x6f
 4323 04bd 50000000 		.4byte	0x50
 4324 04c1 02       		.uleb128 0x2
 4325 04c2 91       		.byte	0x91
 4326 04c3 72       		.sleb128 -14
 4327 04c4 11       		.uleb128 0x11
 4328 04c5 2F150000 		.4byte	.LASF151
 4329 04c9 01       		.byte	0x1
 4330 04ca 72       		.byte	0x72
 4331 04cb 11040000 		.4byte	0x411
 4332 04cf 02       		.uleb128 0x2
 4333 04d0 91       		.byte	0x91
 4334 04d1 74       		.sleb128 -12
 4335 04d2 00       		.byte	0
 4336 04d3 0F       		.uleb128 0xf
 4337 04d4 0A020000 		.4byte	.LASF153
 4338 04d8 01       		.byte	0x1
 4339 04d9 A1       		.byte	0xa1
 4340 04da 73000000 		.4byte	0x73
 4341 04de 00000000 		.4byte	.LFB43
 4342 04e2 F0070000 		.4byte	.LFE43-.LFB43
 4343 04e6 01       		.uleb128 0x1
 4344 04e7 9C       		.byte	0x9c
 4345 04e8 4F050000 		.4byte	0x54f
 4346 04ec 12       		.uleb128 0x12
 4347 04ed 6300     		.ascii	"c\000"
 4348 04ef 01       		.byte	0x1
 4349 04f0 A1       		.byte	0xa1
 4350 04f1 A5000000 		.4byte	0xa5
 4351 04f5 03       		.uleb128 0x3
 4352 04f6 91       		.byte	0x91
 4353 04f7 B77F     		.sleb128 -73
 4354 04f9 11       		.uleb128 0x11
 4355 04fa 2F150000 		.4byte	.LASF151
 4356 04fe 01       		.byte	0x1
 4357 04ff A4       		.byte	0xa4
 4358 0500 11040000 		.4byte	0x411
 4359 0504 02       		.uleb128 0x2
 4360 0505 91       		.byte	0x91
 4361 0506 74       		.sleb128 -12
 4362 0507 13       		.uleb128 0x13
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 97


 4363 0508 D4060000 		.4byte	.LBB2
 4364 050c F0000000 		.4byte	.LBE2-.LBB2
 4365 0510 14       		.uleb128 0x14
 4366 0511 AB0A0000 		.4byte	.LASF155
 4367 0515 01       		.byte	0x1
 4368 0516 C001     		.2byte	0x1c0
 4369 0518 4F050000 		.4byte	0x54f
 4370 051c 03       		.uleb128 0x3
 4371 051d 91       		.byte	0x91
 4372 051e BC7F     		.sleb128 -68
 4373 0520 14       		.uleb128 0x14
 4374 0521 97060000 		.4byte	.LASF156
 4375 0525 01       		.byte	0x1
 4376 0526 C101     		.2byte	0x1c1
 4377 0528 5F050000 		.4byte	0x55f
 4378 052c 02       		.uleb128 0x2
 4379 052d 91       		.byte	0x91
 4380 052e 68       		.sleb128 -24
 4381 052f 14       		.uleb128 0x14
 4382 0530 CC0A0000 		.4byte	.LASF157
 4383 0534 01       		.byte	0x1
 4384 0535 C201     		.2byte	0x1c2
 4385 0537 5F050000 		.4byte	0x55f
 4386 053b 02       		.uleb128 0x2
 4387 053c 91       		.byte	0x91
 4388 053d 60       		.sleb128 -32
 4389 053e 14       		.uleb128 0x14
 4390 053f F30A0000 		.4byte	.LASF158
 4391 0543 01       		.byte	0x1
 4392 0544 CE01     		.2byte	0x1ce
 4393 0546 73000000 		.4byte	0x73
 4394 054a 02       		.uleb128 0x2
 4395 054b 91       		.byte	0x91
 4396 054c 70       		.sleb128 -16
 4397 054d 00       		.byte	0
 4398 054e 00       		.byte	0
 4399 054f 08       		.uleb128 0x8
 4400 0550 73000000 		.4byte	0x73
 4401 0554 5F050000 		.4byte	0x55f
 4402 0558 09       		.uleb128 0x9
 4403 0559 AC000000 		.4byte	0xac
 4404 055d 08       		.byte	0x8
 4405 055e 00       		.byte	0
 4406 055f 08       		.uleb128 0x8
 4407 0560 A5000000 		.4byte	0xa5
 4408 0564 6F050000 		.4byte	0x56f
 4409 0568 09       		.uleb128 0x9
 4410 0569 AC000000 		.4byte	0xac
 4411 056d 04       		.byte	0x4
 4412 056e 00       		.byte	0
 4413 056f 15       		.uleb128 0x15
 4414 0570 8A140000 		.4byte	.LASF231
 4415 0574 01       		.byte	0x1
 4416 0575 2A02     		.2byte	0x22a
 4417 0577 00000000 		.4byte	.LFB44
 4418 057b 1C010000 		.4byte	.LFE44-.LFB44
 4419 057f 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 98


 4420 0580 9C       		.byte	0x9c
 4421 0581 C2050000 		.4byte	0x5c2
 4422 0585 14       		.uleb128 0x14
 4423 0586 AB0A0000 		.4byte	.LASF155
 4424 058a 01       		.byte	0x1
 4425 058b 2D02     		.2byte	0x22d
 4426 058d 4F050000 		.4byte	0x54f
 4427 0591 02       		.uleb128 0x2
 4428 0592 91       		.byte	0x91
 4429 0593 50       		.sleb128 -48
 4430 0594 14       		.uleb128 0x14
 4431 0595 97060000 		.4byte	.LASF156
 4432 0599 01       		.byte	0x1
 4433 059a 2E02     		.2byte	0x22e
 4434 059c 5F050000 		.4byte	0x55f
 4435 05a0 02       		.uleb128 0x2
 4436 05a1 91       		.byte	0x91
 4437 05a2 48       		.sleb128 -56
 4438 05a3 14       		.uleb128 0x14
 4439 05a4 CC0A0000 		.4byte	.LASF157
 4440 05a8 01       		.byte	0x1
 4441 05a9 2F02     		.2byte	0x22f
 4442 05ab 5F050000 		.4byte	0x55f
 4443 05af 02       		.uleb128 0x2
 4444 05b0 91       		.byte	0x91
 4445 05b1 40       		.sleb128 -64
 4446 05b2 14       		.uleb128 0x14
 4447 05b3 F30A0000 		.4byte	.LASF158
 4448 05b7 01       		.byte	0x1
 4449 05b8 3702     		.2byte	0x237
 4450 05ba 73000000 		.4byte	0x73
 4451 05be 02       		.uleb128 0x2
 4452 05bf 91       		.byte	0x91
 4453 05c0 74       		.sleb128 -12
 4454 05c1 00       		.byte	0
 4455 05c2 16       		.uleb128 0x16
 4456 05c3 FA0E0000 		.4byte	.LASF161
 4457 05c7 01       		.byte	0x1
 4458 05c8 5402     		.2byte	0x254
 4459 05ca 00000000 		.4byte	.LFB45
 4460 05ce E4010000 		.4byte	.LFE45-.LFB45
 4461 05d2 01       		.uleb128 0x1
 4462 05d3 9C       		.byte	0x9c
 4463 05d4 01060000 		.4byte	0x601
 4464 05d8 14       		.uleb128 0x14
 4465 05d9 26100000 		.4byte	.LASF159
 4466 05dd 01       		.byte	0x1
 4467 05de 5702     		.2byte	0x257
 4468 05e0 1C040000 		.4byte	0x41c
 4469 05e4 02       		.uleb128 0x2
 4470 05e5 91       		.byte	0x91
 4471 05e6 6C       		.sleb128 -20
 4472 05e7 13       		.uleb128 0x13
 4473 05e8 00010000 		.4byte	.LBB3
 4474 05ec 24000000 		.4byte	.LBE3-.LBB3
 4475 05f0 14       		.uleb128 0x14
 4476 05f1 84090000 		.4byte	.LASF160
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 99


 4477 05f5 01       		.byte	0x1
 4478 05f6 A502     		.2byte	0x2a5
 4479 05f8 1C040000 		.4byte	0x41c
 4480 05fc 02       		.uleb128 0x2
 4481 05fd 91       		.byte	0x91
 4482 05fe 60       		.sleb128 -32
 4483 05ff 00       		.byte	0
 4484 0600 00       		.byte	0
 4485 0601 16       		.uleb128 0x16
 4486 0602 24080000 		.4byte	.LASF162
 4487 0606 01       		.byte	0x1
 4488 0607 0103     		.2byte	0x301
 4489 0609 00000000 		.4byte	.LFB46
 4490 060d 18070000 		.4byte	.LFE46-.LFB46
 4491 0611 01       		.uleb128 0x1
 4492 0612 9C       		.byte	0x9c
 4493 0613 74070000 		.4byte	0x774
 4494 0617 14       		.uleb128 0x14
 4495 0618 33090000 		.4byte	.LASF163
 4496 061c 01       		.byte	0x1
 4497 061d 0303     		.2byte	0x303
 4498 061f 3E000000 		.4byte	0x3e
 4499 0623 02       		.uleb128 0x2
 4500 0624 91       		.byte	0x91
 4501 0625 5A       		.sleb128 -38
 4502 0626 14       		.uleb128 0x14
 4503 0627 E5120000 		.4byte	.LASF164
 4504 062b 01       		.byte	0x1
 4505 062c 0403     		.2byte	0x304
 4506 062e 50000000 		.4byte	0x50
 4507 0632 02       		.uleb128 0x2
 4508 0633 91       		.byte	0x91
 4509 0634 58       		.sleb128 -40
 4510 0635 14       		.uleb128 0x14
 4511 0636 1C020000 		.4byte	.LASF165
 4512 063a 01       		.byte	0x1
 4513 063b 0403     		.2byte	0x304
 4514 063d 50000000 		.4byte	0x50
 4515 0641 02       		.uleb128 0x2
 4516 0642 91       		.byte	0x91
 4517 0643 56       		.sleb128 -42
 4518 0644 14       		.uleb128 0x14
 4519 0645 A6070000 		.4byte	.LASF166
 4520 0649 01       		.byte	0x1
 4521 064a 0503     		.2byte	0x305
 4522 064c 73000000 		.4byte	0x73
 4523 0650 02       		.uleb128 0x2
 4524 0651 91       		.byte	0x91
 4525 0652 50       		.sleb128 -48
 4526 0653 14       		.uleb128 0x14
 4527 0654 F60B0000 		.4byte	.LASF167
 4528 0658 01       		.byte	0x1
 4529 0659 0603     		.2byte	0x306
 4530 065b 2C040000 		.4byte	0x42c
 4531 065f 02       		.uleb128 0x2
 4532 0660 91       		.byte	0x91
 4533 0661 48       		.sleb128 -56
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 100


 4534 0662 14       		.uleb128 0x14
 4535 0663 CA050000 		.4byte	.LASF168
 4536 0667 01       		.byte	0x1
 4537 0668 0703     		.2byte	0x307
 4538 066a 1C040000 		.4byte	0x41c
 4539 066e 03       		.uleb128 0x3
 4540 066f 91       		.byte	0x91
 4541 0670 BC7F     		.sleb128 -68
 4542 0672 14       		.uleb128 0x14
 4543 0673 26100000 		.4byte	.LASF159
 4544 0677 01       		.byte	0x1
 4545 0678 0803     		.2byte	0x308
 4546 067a 1C040000 		.4byte	0x41c
 4547 067e 03       		.uleb128 0x3
 4548 067f 91       		.byte	0x91
 4549 0680 B07F     		.sleb128 -80
 4550 0682 14       		.uleb128 0x14
 4551 0683 2C140000 		.4byte	.LASF169
 4552 0687 01       		.byte	0x1
 4553 0688 0903     		.2byte	0x309
 4554 068a BC020000 		.4byte	0x2bc
 4555 068e 05       		.uleb128 0x5
 4556 068f 03       		.byte	0x3
 4557 0690 D8010000 		.4byte	lastIrqTimeUs.9389
 4558 0694 14       		.uleb128 0x14
 4559 0695 33130000 		.4byte	.LASF170
 4560 0699 01       		.byte	0x1
 4561 069a 0A03     		.2byte	0x30a
 4562 069c BC020000 		.4byte	0x2bc
 4563 06a0 05       		.uleb128 0x5
 4564 06a1 03       		.byte	0x3
 4565 06a2 E0010000 		.4byte	currentIrqTimeUs.9390
 4566 06a6 14       		.uleb128 0x14
 4567 06a7 A60F0000 		.4byte	.LASF171
 4568 06ab 01       		.byte	0x1
 4569 06ac 0B03     		.2byte	0x30b
 4570 06ae 74070000 		.4byte	0x774
 4571 06b2 03       		.uleb128 0x3
 4572 06b3 91       		.byte	0x91
 4573 06b4 CC7E     		.sleb128 -180
 4574 06b6 13       		.uleb128 0x13
 4575 06b7 80000000 		.4byte	.LBB4
 4576 06bb 5A060000 		.4byte	.LBE4-.LBB4
 4577 06bf 14       		.uleb128 0x14
 4578 06c0 510A0000 		.4byte	.LASF172
 4579 06c4 01       		.byte	0x1
 4580 06c5 1603     		.2byte	0x316
 4581 06c7 50000000 		.4byte	0x50
 4582 06cb 03       		.uleb128 0x3
 4583 06cc 91       		.byte	0x91
 4584 06cd CA7E     		.sleb128 -182
 4585 06cf 17       		.uleb128 0x17
 4586 06d0 2E010000 		.4byte	.LBB5
 4587 06d4 74000000 		.4byte	.LBE5-.LBB5
 4588 06d8 EC060000 		.4byte	0x6ec
 4589 06dc 14       		.uleb128 0x14
 4590 06dd F30A0000 		.4byte	.LASF158
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 101


 4591 06e1 01       		.byte	0x1
 4592 06e2 2803     		.2byte	0x328
 4593 06e4 97000000 		.4byte	0x97
 4594 06e8 02       		.uleb128 0x2
 4595 06e9 91       		.byte	0x91
 4596 06ea 64       		.sleb128 -28
 4597 06eb 00       		.byte	0
 4598 06ec 17       		.uleb128 0x17
 4599 06ed B4010000 		.4byte	.LBB6
 4600 06f1 B2010000 		.4byte	.LBE6-.LBB6
 4601 06f5 29070000 		.4byte	0x729
 4602 06f9 14       		.uleb128 0x14
 4603 06fa F30A0000 		.4byte	.LASF158
 4604 06fe 01       		.byte	0x1
 4605 06ff 3603     		.2byte	0x336
 4606 0701 97000000 		.4byte	0x97
 4607 0705 02       		.uleb128 0x2
 4608 0706 91       		.byte	0x91
 4609 0707 60       		.sleb128 -32
 4610 0708 14       		.uleb128 0x14
 4611 0709 B50C0000 		.4byte	.LASF173
 4612 070d 01       		.byte	0x1
 4613 070e 3703     		.2byte	0x337
 4614 0710 1C040000 		.4byte	0x41c
 4615 0714 03       		.uleb128 0x3
 4616 0715 91       		.byte	0x91
 4617 0716 BC7E     		.sleb128 -196
 4618 0718 14       		.uleb128 0x14
 4619 0719 5B140000 		.4byte	.LASF174
 4620 071d 01       		.byte	0x1
 4621 071e 3903     		.2byte	0x339
 4622 0720 1C040000 		.4byte	0x41c
 4623 0724 03       		.uleb128 0x3
 4624 0725 91       		.byte	0x91
 4625 0726 B07E     		.sleb128 -208
 4626 0728 00       		.byte	0
 4627 0729 17       		.uleb128 0x17
 4628 072a 74030000 		.4byte	.LBB7
 4629 072e 3A000000 		.4byte	.LBE7-.LBB7
 4630 0732 46070000 		.4byte	0x746
 4631 0736 14       		.uleb128 0x14
 4632 0737 F30A0000 		.4byte	.LASF158
 4633 073b 01       		.byte	0x1
 4634 073c 7E03     		.2byte	0x37e
 4635 073e 97000000 		.4byte	0x97
 4636 0742 02       		.uleb128 0x2
 4637 0743 91       		.byte	0x91
 4638 0744 5C       		.sleb128 -36
 4639 0745 00       		.byte	0
 4640 0746 13       		.uleb128 0x13
 4641 0747 BE060000 		.4byte	.LBB8
 4642 074b 1C000000 		.4byte	.LBE8-.LBB8
 4643 074f 14       		.uleb128 0x14
 4644 0750 0C120000 		.4byte	.LASF175
 4645 0754 01       		.byte	0x1
 4646 0755 2004     		.2byte	0x420
 4647 0757 5E000000 		.4byte	0x5e
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 102


 4648 075b 03       		.uleb128 0x3
 4649 075c 91       		.byte	0x91
 4650 075d AC7E     		.sleb128 -212
 4651 075f 14       		.uleb128 0x14
 4652 0760 780F0000 		.4byte	.LASF176
 4653 0764 01       		.byte	0x1
 4654 0765 2104     		.2byte	0x421
 4655 0767 5E000000 		.4byte	0x5e
 4656 076b 05       		.uleb128 0x5
 4657 076c 03       		.byte	0x3
 4658 076d E8010000 		.4byte	old_steps.9404
 4659 0771 00       		.byte	0
 4660 0772 00       		.byte	0
 4661 0773 00       		.byte	0
 4662 0774 08       		.uleb128 0x8
 4663 0775 50000000 		.4byte	0x50
 4664 0779 84070000 		.4byte	0x784
 4665 077d 09       		.uleb128 0x9
 4666 077e AC000000 		.4byte	0xac
 4667 0782 30       		.byte	0x30
 4668 0783 00       		.byte	0
 4669 0784 18       		.uleb128 0x18
 4670 0785 3D080000 		.4byte	.LASF177
 4671 0789 01       		.byte	0x1
 4672 078a 54       		.byte	0x54
 4673 078b 95070000 		.4byte	0x795
 4674 078f 05       		.uleb128 0x5
 4675 0790 03       		.byte	0x3
 4676 0791 00000000 		.4byte	COMPASS_SLAVE_ID
 4677 0795 19       		.uleb128 0x19
 4678 0796 37000000 		.4byte	0x37
 4679 079a 18       		.uleb128 0x18
 4680 079b 53040000 		.4byte	.LASF178
 4681 079f 01       		.byte	0x1
 4682 07a0 58       		.byte	0x58
 4683 07a1 95070000 		.4byte	0x795
 4684 07a5 05       		.uleb128 0x5
 4685 07a6 03       		.byte	0x3
 4686 07a7 00000000 		.4byte	COMPASS_CHIP_ADDR
 4687 07ab 18       		.uleb128 0x18
 4688 07ac 910D0000 		.4byte	.LASF179
 4689 07b0 01       		.byte	0x1
 4690 07b1 59       		.byte	0x59
 4691 07b2 95070000 		.4byte	0x795
 4692 07b6 05       		.uleb128 0x5
 4693 07b7 03       		.byte	0x3
 4694 07b8 00000000 		.4byte	PRESSURE_CHIP_ADDR
 4695 07bc 08       		.uleb128 0x8
 4696 07bd 25000000 		.4byte	0x25
 4697 07c1 CC070000 		.4byte	0x7cc
 4698 07c5 09       		.uleb128 0x9
 4699 07c6 AC000000 		.4byte	0xac
 4700 07ca 08       		.byte	0x8
 4701 07cb 00       		.byte	0
 4702 07cc 18       		.uleb128 0x18
 4703 07cd 85000000 		.4byte	.LASF180
 4704 07d1 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 103


 4705 07d2 51       		.byte	0x51
 4706 07d3 BC070000 		.4byte	0x7bc
 4707 07d7 05       		.uleb128 0x5
 4708 07d8 03       		.byte	0x3
 4709 07d9 00000000 		.4byte	ACCEL_GYRO_ORIENTATION
 4710 07dd 18       		.uleb128 0x18
 4711 07de 02140000 		.4byte	.LASF181
 4712 07e2 01       		.byte	0x1
 4713 07e3 5B       		.byte	0x5b
 4714 07e4 BC070000 		.4byte	0x7bc
 4715 07e8 05       		.uleb128 0x5
 4716 07e9 03       		.byte	0x3
 4717 07ea 00000000 		.4byte	COMPASS_ORIENTATION
 4718 07ee 08       		.uleb128 0x8
 4719 07ef 57000000 		.4byte	0x57
 4720 07f3 FE070000 		.4byte	0x7fe
 4721 07f7 09       		.uleb128 0x9
 4722 07f8 AC000000 		.4byte	0xac
 4723 07fc 08       		.byte	0x8
 4724 07fd 00       		.byte	0
 4725 07fe 18       		.uleb128 0x18
 4726 07ff 77120000 		.4byte	.LASF182
 4727 0803 01       		.byte	0x1
 4728 0804 5D       		.byte	0x5d
 4729 0805 EE070000 		.4byte	0x7ee
 4730 0809 05       		.uleb128 0x5
 4731 080a 03       		.byte	0x3
 4732 080b 00000000 		.4byte	SOFT_IRON_MATRIX
 4733 080f 1A       		.uleb128 0x1a
 4734 0810 68616C00 		.ascii	"hal\000"
 4735 0814 01       		.byte	0x1
 4736 0815 10       		.byte	0x10
 4737 0816 3C040000 		.4byte	0x43c
 4738 081a 05       		.uleb128 0x5
 4739 081b 03       		.byte	0x3
 4740 081c 00000000 		.4byte	hal
 4741 0820 18       		.uleb128 0x18
 4742 0821 A2050000 		.4byte	.LASF183
 4743 0825 01       		.byte	0x1
 4744 0826 14       		.byte	0x14
 4745 0827 73000000 		.4byte	0x73
 4746 082b 05       		.uleb128 0x5
 4747 082c 03       		.byte	0x3
 4748 082d 00000000 		.4byte	self_test_result
 4749 0831 18       		.uleb128 0x18
 4750 0832 010C0000 		.4byte	.LASF184
 4751 0836 01       		.byte	0x1
 4752 0837 15       		.byte	0x15
 4753 0838 4F050000 		.4byte	0x54f
 4754 083c 05       		.uleb128 0x5
 4755 083d 03       		.byte	0x3
 4756 083e 00000000 		.4byte	dmp_bias
 4757 0842 18       		.uleb128 0x18
 4758 0843 F9110000 		.4byte	.LASF185
 4759 0847 01       		.byte	0x1
 4760 0848 17       		.byte	0x17
 4761 0849 50000000 		.4byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 104


 4762 084d 05       		.uleb128 0x5
 4763 084e 03       		.byte	0x3
 4764 084f 00000000 		.4byte	accel_data_was_set
 4765 0853 18       		.uleb128 0x18
 4766 0854 0B0D0000 		.4byte	.LASF186
 4767 0858 01       		.byte	0x1
 4768 0859 18       		.byte	0x18
 4769 085a 50000000 		.4byte	0x50
 4770 085e 05       		.uleb128 0x5
 4771 085f 03       		.byte	0x3
 4772 0860 00000000 		.4byte	gyro_data_was_set
 4773 0864 18       		.uleb128 0x18
 4774 0865 16140000 		.4byte	.LASF187
 4775 0869 01       		.byte	0x1
 4776 086a 19       		.byte	0x19
 4777 086b 50000000 		.4byte	0x50
 4778 086f 05       		.uleb128 0x5
 4779 0870 03       		.byte	0x3
 4780 0871 00000000 		.4byte	raw_gyro_data_was_set
 4781 0875 18       		.uleb128 0x18
 4782 0876 4A120000 		.4byte	.LASF188
 4783 087a 01       		.byte	0x1
 4784 087b 1A       		.byte	0x1a
 4785 087c 50000000 		.4byte	0x50
 4786 0880 05       		.uleb128 0x5
 4787 0881 03       		.byte	0x3
 4788 0882 00000000 		.4byte	compass_data_was_set
 4789 0886 18       		.uleb128 0x18
 4790 0887 0A0C0000 		.4byte	.LASF189
 4791 088b 01       		.byte	0x1
 4792 088c 1B       		.byte	0x1b
 4793 088d 50000000 		.4byte	0x50
 4794 0891 05       		.uleb128 0x5
 4795 0892 03       		.byte	0x3
 4796 0893 00000000 		.4byte	raw_compass_data_was_set
 4797 0897 18       		.uleb128 0x18
 4798 0898 96020000 		.4byte	.LASF190
 4799 089c 01       		.byte	0x1
 4800 089d 1C       		.byte	0x1c
 4801 089e 50000000 		.4byte	0x50
 4802 08a2 05       		.uleb128 0x5
 4803 08a3 03       		.byte	0x3
 4804 08a4 00000000 		.4byte	quat6_data_was_set
 4805 08a8 18       		.uleb128 0x18
 4806 08a9 24020000 		.4byte	.LASF191
 4807 08ad 01       		.byte	0x1
 4808 08ae 1D       		.byte	0x1d
 4809 08af 50000000 		.4byte	0x50
 4810 08b3 05       		.uleb128 0x5
 4811 08b4 03       		.byte	0x3
 4812 08b5 00000000 		.4byte	quat9_data_was_set
 4813 08b9 18       		.uleb128 0x18
 4814 08ba 100F0000 		.4byte	.LASF192
 4815 08be 01       		.byte	0x1
 4816 08bf 1E       		.byte	0x1e
 4817 08c0 50000000 		.4byte	0x50
 4818 08c4 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 105


 4819 08c5 03       		.byte	0x3
 4820 08c6 00000000 		.4byte	rv_quat_was_set
 4821 08ca 18       		.uleb128 0x18
 4822 08cb 5E030000 		.4byte	.LASF193
 4823 08cf 01       		.byte	0x1
 4824 08d0 1F       		.byte	0x1f
 4825 08d1 50000000 		.4byte	0x50
 4826 08d5 05       		.uleb128 0x5
 4827 08d6 03       		.byte	0x3
 4828 08d7 00000000 		.4byte	gmrv_quat_was_set
 4829 08db 18       		.uleb128 0x18
 4830 08dc 37020000 		.4byte	.LASF194
 4831 08e0 01       		.byte	0x1
 4832 08e1 20       		.byte	0x20
 4833 08e2 50000000 		.4byte	0x50
 4834 08e6 05       		.uleb128 0x5
 4835 08e7 03       		.byte	0x3
 4836 08e8 00000000 		.4byte	bac_data_was_set
 4837 08ec 18       		.uleb128 0x18
 4838 08ed B6030000 		.4byte	.LASF195
 4839 08f1 01       		.byte	0x1
 4840 08f2 21       		.byte	0x21
 4841 08f3 50000000 		.4byte	0x50
 4842 08f7 05       		.uleb128 0x5
 4843 08f8 03       		.byte	0x3
 4844 08f9 00000000 		.4byte	flip_data_was_set
 4845 08fd 18       		.uleb128 0x18
 4846 08fe C6010000 		.4byte	.LASF196
 4847 0902 01       		.byte	0x1
 4848 0903 22       		.byte	0x22
 4849 0904 50000000 		.4byte	0x50
 4850 0908 05       		.uleb128 0x5
 4851 0909 03       		.byte	0x3
 4852 090a 00000000 		.4byte	tilt_data_was_set
 4853 090e 18       		.uleb128 0x18
 4854 090f DF0D0000 		.4byte	.LASF197
 4855 0913 01       		.byte	0x1
 4856 0914 25       		.byte	0x25
 4857 0915 C7020000 		.4byte	0x2c7
 4858 0919 05       		.uleb128 0x5
 4859 091a 03       		.byte	0x3
 4860 091b 00000000 		.4byte	grv_float
 4861 091f 08       		.uleb128 0x8
 4862 0920 57000000 		.4byte	0x57
 4863 0924 2F090000 		.4byte	0x92f
 4864 0928 09       		.uleb128 0x9
 4865 0929 AC000000 		.4byte	0xac
 4866 092d 03       		.byte	0x3
 4867 092e 00       		.byte	0
 4868 092f 18       		.uleb128 0x18
 4869 0930 AC120000 		.4byte	.LASF198
 4870 0934 01       		.byte	0x1
 4871 0935 26       		.byte	0x26
 4872 0936 1F090000 		.4byte	0x91f
 4873 093a 05       		.uleb128 0x5
 4874 093b 03       		.byte	0x3
 4875 093c 00000000 		.4byte	cube_grv
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 106


 4876 0940 08       		.uleb128 0x8
 4877 0941 97000000 		.4byte	0x97
 4878 0945 50090000 		.4byte	0x950
 4879 0949 09       		.uleb128 0x9
 4880 094a AC000000 		.4byte	0xac
 4881 094e 02       		.byte	0x2
 4882 094f 00       		.byte	0
 4883 0950 18       		.uleb128 0x18
 4884 0951 80110000 		.4byte	.LASF199
 4885 0955 01       		.byte	0x1
 4886 0956 27       		.byte	0x27
 4887 0957 40090000 		.4byte	0x940
 4888 095b 05       		.uleb128 0x5
 4889 095c 03       		.byte	0x3
 4890 095d 00000000 		.4byte	accel_float
 4891 0961 18       		.uleb128 0x18
 4892 0962 12120000 		.4byte	.LASF200
 4893 0966 01       		.byte	0x1
 4894 0967 28       		.byte	0x28
 4895 0968 C7020000 		.4byte	0x2c7
 4896 096c 05       		.uleb128 0x5
 4897 096d 03       		.byte	0x3
 4898 096e 00000000 		.4byte	rv_float
 4899 0972 18       		.uleb128 0x18
 4900 0973 BE0C0000 		.4byte	.LASF201
 4901 0977 01       		.byte	0x1
 4902 0978 29       		.byte	0x29
 4903 0979 1F090000 		.4byte	0x91f
 4904 097d 05       		.uleb128 0x5
 4905 097e 03       		.byte	0x3
 4906 097f 00000000 		.4byte	cube_rv
 4907 0983 18       		.uleb128 0x18
 4908 0984 3A000000 		.4byte	.LASF202
 4909 0988 01       		.byte	0x1
 4910 0989 2A       		.byte	0x2a
 4911 098a 40090000 		.4byte	0x940
 4912 098e 05       		.uleb128 0x5
 4913 098f 03       		.byte	0x3
 4914 0990 00000000 		.4byte	gyro_float
 4915 0994 18       		.uleb128 0x18
 4916 0995 DE0C0000 		.4byte	.LASF203
 4917 0999 01       		.byte	0x1
 4918 099a 2B       		.byte	0x2b
 4919 099b 40090000 		.4byte	0x940
 4920 099f 05       		.uleb128 0x5
 4921 09a0 03       		.byte	0x3
 4922 09a1 00000000 		.4byte	gyro_raw_float
 4923 09a5 18       		.uleb128 0x18
 4924 09a6 93090000 		.4byte	.LASF204
 4925 09aa 01       		.byte	0x1
 4926 09ab 2C       		.byte	0x2c
 4927 09ac 40090000 		.4byte	0x940
 4928 09b0 05       		.uleb128 0x5
 4929 09b1 03       		.byte	0x3
 4930 09b2 00000000 		.4byte	gyro_bias_float
 4931 09b6 18       		.uleb128 0x18
 4932 09b7 A40D0000 		.4byte	.LASF205
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 107


 4933 09bb 01       		.byte	0x1
 4934 09bc 2D       		.byte	0x2d
 4935 09bd 1C040000 		.4byte	0x41c
 4936 09c1 05       		.uleb128 0x5
 4937 09c2 03       		.byte	0x3
 4938 09c3 00000000 		.4byte	previous_bias
 4939 09c7 18       		.uleb128 0x18
 4940 09c8 0B030000 		.4byte	.LASF206
 4941 09cc 01       		.byte	0x1
 4942 09cd 2E       		.byte	0x2e
 4943 09ce 40090000 		.4byte	0x940
 4944 09d2 05       		.uleb128 0x5
 4945 09d3 03       		.byte	0x3
 4946 09d4 00000000 		.4byte	compass_float
 4947 09d8 18       		.uleb128 0x18
 4948 09d9 A0060000 		.4byte	.LASF207
 4949 09dd 01       		.byte	0x1
 4950 09de 2F       		.byte	0x2f
 4951 09df 40090000 		.4byte	0x940
 4952 09e3 05       		.uleb128 0x5
 4953 09e4 03       		.byte	0x3
 4954 09e5 00000000 		.4byte	compass_raw_float
 4955 09e9 18       		.uleb128 0x18
 4956 09ea 0B130000 		.4byte	.LASF208
 4957 09ee 01       		.byte	0x1
 4958 09ef 30       		.byte	0x30
 4959 09f0 40090000 		.4byte	0x940
 4960 09f4 05       		.uleb128 0x5
 4961 09f5 03       		.byte	0x3
 4962 09f6 00000000 		.4byte	compass_bias
 4963 09fa 18       		.uleb128 0x18
 4964 09fb A5110000 		.4byte	.LASF209
 4965 09ff 01       		.byte	0x1
 4966 0a00 32       		.byte	0x32
 4967 0a01 C7020000 		.4byte	0x2c7
 4968 0a05 05       		.uleb128 0x5
 4969 0a06 03       		.byte	0x3
 4970 0a07 00000000 		.4byte	gmrv_float
 4971 0a0b 18       		.uleb128 0x18
 4972 0a0c D50D0000 		.4byte	.LASF210
 4973 0a10 01       		.byte	0x1
 4974 0a11 33       		.byte	0x33
 4975 0a12 1F090000 		.4byte	0x91f
 4976 0a16 05       		.uleb128 0x5
 4977 0a17 03       		.byte	0x3
 4978 0a18 00000000 		.4byte	cube_gmrv
 4979 0a1c 18       		.uleb128 0x18
 4980 0a1d 44040000 		.4byte	.LASF211
 4981 0a21 01       		.byte	0x1
 4982 0a22 35       		.byte	0x35
 4983 0a23 73000000 		.4byte	0x73
 4984 0a27 05       		.uleb128 0x5
 4985 0a28 03       		.byte	0x3
 4986 0a29 00000000 		.4byte	accel_accuracy
 4987 0a2d 18       		.uleb128 0x18
 4988 0a2e 3B070000 		.4byte	.LASF212
 4989 0a32 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 108


 4990 0a33 36       		.byte	0x36
 4991 0a34 73000000 		.4byte	0x73
 4992 0a38 05       		.uleb128 0x5
 4993 0a39 03       		.byte	0x3
 4994 0a3a 00000000 		.4byte	gyro_accuracy
 4995 0a3e 18       		.uleb128 0x18
 4996 0a3f 41100000 		.4byte	.LASF213
 4997 0a43 01       		.byte	0x1
 4998 0a44 37       		.byte	0x37
 4999 0a45 73000000 		.4byte	0x73
 5000 0a49 05       		.uleb128 0x5
 5001 0a4a 03       		.byte	0x3
 5002 0a4b 00000000 		.4byte	rv_accuracy
 5003 0a4f 18       		.uleb128 0x18
 5004 0a50 0C050000 		.4byte	.LASF214
 5005 0a54 01       		.byte	0x1
 5006 0a55 38       		.byte	0x38
 5007 0a56 73000000 		.4byte	0x73
 5008 0a5a 05       		.uleb128 0x5
 5009 0a5b 03       		.byte	0x3
 5010 0a5c 00000000 		.4byte	compass_accuracy
 5011 0a60 18       		.uleb128 0x18
 5012 0a61 45050000 		.4byte	.LASF215
 5013 0a65 01       		.byte	0x1
 5014 0a66 3A       		.byte	0x3a
 5015 0a67 73000000 		.4byte	0x73
 5016 0a6b 05       		.uleb128 0x5
 5017 0a6c 03       		.byte	0x3
 5018 0a6d 00000000 		.4byte	gmrv_accuracy
 5019 0a71 1A       		.uleb128 0x1a
 5020 0a72 747300   		.ascii	"ts\000"
 5021 0a75 01       		.byte	0x1
 5022 0a76 3D       		.byte	0x3d
 5023 0a77 65000000 		.4byte	0x65
 5024 0a7b 05       		.uleb128 0x5
 5025 0a7c 03       		.byte	0x3
 5026 0a7d 00000000 		.4byte	ts
 5027 0a81 18       		.uleb128 0x18
 5028 0a82 31080000 		.4byte	.LASF216
 5029 0a86 01       		.byte	0x1
 5030 0a87 3F       		.byte	0x3f
 5031 0a88 1F090000 		.4byte	0x91f
 5032 0a8c 05       		.uleb128 0x5
 5033 0a8d 03       		.byte	0x3
 5034 0a8e 00000000 		.4byte	result_quat
 5035 0a92 08       		.uleb128 0x8
 5036 0a93 73000000 		.4byte	0x73
 5037 0a97 A20A0000 		.4byte	0xaa2
 5038 0a9b 09       		.uleb128 0x9
 5039 0a9c AC000000 		.4byte	0xac
 5040 0aa0 02       		.byte	0x2
 5041 0aa1 00       		.byte	0
 5042 0aa2 18       		.uleb128 0x18
 5043 0aa3 820F0000 		.4byte	.LASF217
 5044 0aa7 01       		.byte	0x1
 5045 0aa8 41       		.byte	0x41
 5046 0aa9 920A0000 		.4byte	0xa92
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 109


 5047 0aad 05       		.uleb128 0x5
 5048 0aae 03       		.byte	0x3
 5049 0aaf 00000000 		.4byte	a_average
 5050 0ab3 18       		.uleb128 0x18
 5051 0ab4 6F0D0000 		.4byte	.LASF218
 5052 0ab8 01       		.byte	0x1
 5053 0ab9 42       		.byte	0x42
 5054 0aba 920A0000 		.4byte	0xa92
 5055 0abe 05       		.uleb128 0x5
 5056 0abf 03       		.byte	0x3
 5057 0ac0 00000000 		.4byte	g_average
 5058 0ac4 18       		.uleb128 0x18
 5059 0ac5 0C120000 		.4byte	.LASF175
 5060 0ac9 01       		.byte	0x1
 5061 0aca 49       		.byte	0x49
 5062 0acb 5E000000 		.4byte	0x5e
 5063 0acf 05       		.uleb128 0x5
 5064 0ad0 03       		.byte	0x3
 5065 0ad1 00000000 		.4byte	steps
 5066 0ad5 18       		.uleb128 0x18
 5067 0ad6 E90D0000 		.4byte	.LASF219
 5068 0ada 01       		.byte	0x1
 5069 0adb 4A       		.byte	0x4a
 5070 0adc 8C000000 		.4byte	0x8c
 5071 0ae0 05       		.uleb128 0x5
 5072 0ae1 03       		.byte	0x3
 5073 0ae2 00000000 		.4byte	bac_state
 5074 0ae6 18       		.uleb128 0x18
 5075 0ae7 B70F0000 		.4byte	.LASF220
 5076 0aeb 01       		.byte	0x1
 5077 0aec 4B       		.byte	0x4b
 5078 0aed 81000000 		.4byte	0x81
 5079 0af1 05       		.uleb128 0x5
 5080 0af2 03       		.byte	0x3
 5081 0af3 00000000 		.4byte	tilt_state
 5082 0af7 18       		.uleb128 0x18
 5083 0af8 35110000 		.4byte	.LASF221
 5084 0afc 01       		.byte	0x1
 5085 0afd 4C       		.byte	0x4c
 5086 0afe 57000000 		.4byte	0x57
 5087 0b02 05       		.uleb128 0x5
 5088 0b03 03       		.byte	0x3
 5089 0b04 00000000 		.4byte	bac_ts
 5090 0b08 18       		.uleb128 0x18
 5091 0b09 4D0E0000 		.4byte	.LASF222
 5092 0b0d 01       		.byte	0x1
 5093 0b0e 4D       		.byte	0x4d
 5094 0b0f 8C000000 		.4byte	0x8c
 5095 0b13 05       		.uleb128 0x5
 5096 0b14 03       		.byte	0x3
 5097 0b15 00000000 		.4byte	flip_pickup
 5098 0b19 18       		.uleb128 0x18
 5099 0b1a 5F110000 		.4byte	.LASF223
 5100 0b1e 01       		.byte	0x1
 5101 0b1f 4E       		.byte	0x4e
 5102 0b20 81000000 		.4byte	0x81
 5103 0b24 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 110


 5104 0b25 03       		.byte	0x3
 5105 0b26 00000000 		.4byte	step_detected
 5106 0b2a 18       		.uleb128 0x18
 5107 0b2b D4050000 		.4byte	.LASF224
 5108 0b2f 01       		.byte	0x1
 5109 0b30 4F       		.byte	0x4f
 5110 0b31 97000000 		.4byte	0x97
 5111 0b35 05       		.uleb128 0x5
 5112 0b36 03       		.byte	0x3
 5113 0b37 00000000 		.4byte	current_output_rate
 5114 0b3b 08       		.uleb128 0x8
 5115 0b3c A5000000 		.4byte	0xa5
 5116 0b40 4B0B0000 		.4byte	0xb4b
 5117 0b44 09       		.uleb128 0x9
 5118 0b45 AC000000 		.4byte	0xac
 5119 0b49 FF       		.byte	0xff
 5120 0b4a 00       		.byte	0
 5121 0b4b 1A       		.uleb128 0x1a
 5122 0b4c 74737400 		.ascii	"tst\000"
 5123 0b50 01       		.byte	0x1
 5124 0b51 5F       		.byte	0x5f
 5125 0b52 3B0B0000 		.4byte	0xb3b
 5126 0b56 05       		.uleb128 0x5
 5127 0b57 03       		.byte	0x3
 5128 0b58 00000000 		.4byte	tst
 5129 0b5c 00       		.byte	0
 5130              		.section	.debug_abbrev,"",%progbits
 5131              	.Ldebug_abbrev0:
 5132 0000 01       		.uleb128 0x1
 5133 0001 11       		.uleb128 0x11
 5134 0002 01       		.byte	0x1
 5135 0003 25       		.uleb128 0x25
 5136 0004 0E       		.uleb128 0xe
 5137 0005 13       		.uleb128 0x13
 5138 0006 0B       		.uleb128 0xb
 5139 0007 03       		.uleb128 0x3
 5140 0008 0E       		.uleb128 0xe
 5141 0009 1B       		.uleb128 0x1b
 5142 000a 0E       		.uleb128 0xe
 5143 000b 55       		.uleb128 0x55
 5144 000c 17       		.uleb128 0x17
 5145 000d 11       		.uleb128 0x11
 5146 000e 01       		.uleb128 0x1
 5147 000f 10       		.uleb128 0x10
 5148 0010 17       		.uleb128 0x17
 5149 0011 00       		.byte	0
 5150 0012 00       		.byte	0
 5151 0013 02       		.uleb128 0x2
 5152 0014 24       		.uleb128 0x24
 5153 0015 00       		.byte	0
 5154 0016 0B       		.uleb128 0xb
 5155 0017 0B       		.uleb128 0xb
 5156 0018 3E       		.uleb128 0x3e
 5157 0019 0B       		.uleb128 0xb
 5158 001a 03       		.uleb128 0x3
 5159 001b 0E       		.uleb128 0xe
 5160 001c 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 111


 5161 001d 00       		.byte	0
 5162 001e 03       		.uleb128 0x3
 5163 001f 16       		.uleb128 0x16
 5164 0020 00       		.byte	0
 5165 0021 03       		.uleb128 0x3
 5166 0022 0E       		.uleb128 0xe
 5167 0023 3A       		.uleb128 0x3a
 5168 0024 0B       		.uleb128 0xb
 5169 0025 3B       		.uleb128 0x3b
 5170 0026 0B       		.uleb128 0xb
 5171 0027 49       		.uleb128 0x49
 5172 0028 13       		.uleb128 0x13
 5173 0029 00       		.byte	0
 5174 002a 00       		.byte	0
 5175 002b 04       		.uleb128 0x4
 5176 002c 24       		.uleb128 0x24
 5177 002d 00       		.byte	0
 5178 002e 0B       		.uleb128 0xb
 5179 002f 0B       		.uleb128 0xb
 5180 0030 3E       		.uleb128 0x3e
 5181 0031 0B       		.uleb128 0xb
 5182 0032 03       		.uleb128 0x3
 5183 0033 08       		.uleb128 0x8
 5184 0034 00       		.byte	0
 5185 0035 00       		.byte	0
 5186 0036 05       		.uleb128 0x5
 5187 0037 04       		.uleb128 0x4
 5188 0038 01       		.byte	0x1
 5189 0039 0B       		.uleb128 0xb
 5190 003a 0B       		.uleb128 0xb
 5191 003b 3A       		.uleb128 0x3a
 5192 003c 0B       		.uleb128 0xb
 5193 003d 3B       		.uleb128 0x3b
 5194 003e 05       		.uleb128 0x5
 5195 003f 01       		.uleb128 0x1
 5196 0040 13       		.uleb128 0x13
 5197 0041 00       		.byte	0
 5198 0042 00       		.byte	0
 5199 0043 06       		.uleb128 0x6
 5200 0044 28       		.uleb128 0x28
 5201 0045 00       		.byte	0
 5202 0046 03       		.uleb128 0x3
 5203 0047 0E       		.uleb128 0xe
 5204 0048 1C       		.uleb128 0x1c
 5205 0049 0D       		.uleb128 0xd
 5206 004a 00       		.byte	0
 5207 004b 00       		.byte	0
 5208 004c 07       		.uleb128 0x7
 5209 004d 04       		.uleb128 0x4
 5210 004e 01       		.byte	0x1
 5211 004f 0B       		.uleb128 0xb
 5212 0050 0B       		.uleb128 0xb
 5213 0051 3A       		.uleb128 0x3a
 5214 0052 0B       		.uleb128 0xb
 5215 0053 3B       		.uleb128 0x3b
 5216 0054 0B       		.uleb128 0xb
 5217 0055 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 112


 5218 0056 13       		.uleb128 0x13
 5219 0057 00       		.byte	0
 5220 0058 00       		.byte	0
 5221 0059 08       		.uleb128 0x8
 5222 005a 01       		.uleb128 0x1
 5223 005b 01       		.byte	0x1
 5224 005c 49       		.uleb128 0x49
 5225 005d 13       		.uleb128 0x13
 5226 005e 01       		.uleb128 0x1
 5227 005f 13       		.uleb128 0x13
 5228 0060 00       		.byte	0
 5229 0061 00       		.byte	0
 5230 0062 09       		.uleb128 0x9
 5231 0063 21       		.uleb128 0x21
 5232 0064 00       		.byte	0
 5233 0065 49       		.uleb128 0x49
 5234 0066 13       		.uleb128 0x13
 5235 0067 2F       		.uleb128 0x2f
 5236 0068 0B       		.uleb128 0xb
 5237 0069 00       		.byte	0
 5238 006a 00       		.byte	0
 5239 006b 0A       		.uleb128 0xa
 5240 006c 04       		.uleb128 0x4
 5241 006d 01       		.byte	0x1
 5242 006e 03       		.uleb128 0x3
 5243 006f 0E       		.uleb128 0xe
 5244 0070 0B       		.uleb128 0xb
 5245 0071 0B       		.uleb128 0xb
 5246 0072 3A       		.uleb128 0x3a
 5247 0073 0B       		.uleb128 0xb
 5248 0074 3B       		.uleb128 0x3b
 5249 0075 05       		.uleb128 0x5
 5250 0076 01       		.uleb128 0x1
 5251 0077 13       		.uleb128 0x13
 5252 0078 00       		.byte	0
 5253 0079 00       		.byte	0
 5254 007a 0B       		.uleb128 0xb
 5255 007b 13       		.uleb128 0x13
 5256 007c 01       		.byte	0x1
 5257 007d 03       		.uleb128 0x3
 5258 007e 0E       		.uleb128 0xe
 5259 007f 0B       		.uleb128 0xb
 5260 0080 0B       		.uleb128 0xb
 5261 0081 3A       		.uleb128 0x3a
 5262 0082 0B       		.uleb128 0xb
 5263 0083 3B       		.uleb128 0x3b
 5264 0084 0B       		.uleb128 0xb
 5265 0085 01       		.uleb128 0x1
 5266 0086 13       		.uleb128 0x13
 5267 0087 00       		.byte	0
 5268 0088 00       		.byte	0
 5269 0089 0C       		.uleb128 0xc
 5270 008a 0D       		.uleb128 0xd
 5271 008b 00       		.byte	0
 5272 008c 03       		.uleb128 0x3
 5273 008d 0E       		.uleb128 0xe
 5274 008e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 113


 5275 008f 0B       		.uleb128 0xb
 5276 0090 3B       		.uleb128 0x3b
 5277 0091 0B       		.uleb128 0xb
 5278 0092 49       		.uleb128 0x49
 5279 0093 13       		.uleb128 0x13
 5280 0094 38       		.uleb128 0x38
 5281 0095 0B       		.uleb128 0xb
 5282 0096 00       		.byte	0
 5283 0097 00       		.byte	0
 5284 0098 0D       		.uleb128 0xd
 5285 0099 35       		.uleb128 0x35
 5286 009a 00       		.byte	0
 5287 009b 49       		.uleb128 0x49
 5288 009c 13       		.uleb128 0x13
 5289 009d 00       		.byte	0
 5290 009e 00       		.byte	0
 5291 009f 0E       		.uleb128 0xe
 5292 00a0 2E       		.uleb128 0x2e
 5293 00a1 00       		.byte	0
 5294 00a2 3F       		.uleb128 0x3f
 5295 00a3 19       		.uleb128 0x19
 5296 00a4 03       		.uleb128 0x3
 5297 00a5 0E       		.uleb128 0xe
 5298 00a6 3A       		.uleb128 0x3a
 5299 00a7 0B       		.uleb128 0xb
 5300 00a8 3B       		.uleb128 0x3b
 5301 00a9 0B       		.uleb128 0xb
 5302 00aa 27       		.uleb128 0x27
 5303 00ab 19       		.uleb128 0x19
 5304 00ac 11       		.uleb128 0x11
 5305 00ad 01       		.uleb128 0x1
 5306 00ae 12       		.uleb128 0x12
 5307 00af 06       		.uleb128 0x6
 5308 00b0 40       		.uleb128 0x40
 5309 00b1 18       		.uleb128 0x18
 5310 00b2 9742     		.uleb128 0x2117
 5311 00b4 19       		.uleb128 0x19
 5312 00b5 00       		.byte	0
 5313 00b6 00       		.byte	0
 5314 00b7 0F       		.uleb128 0xf
 5315 00b8 2E       		.uleb128 0x2e
 5316 00b9 01       		.byte	0x1
 5317 00ba 3F       		.uleb128 0x3f
 5318 00bb 19       		.uleb128 0x19
 5319 00bc 03       		.uleb128 0x3
 5320 00bd 0E       		.uleb128 0xe
 5321 00be 3A       		.uleb128 0x3a
 5322 00bf 0B       		.uleb128 0xb
 5323 00c0 3B       		.uleb128 0x3b
 5324 00c1 0B       		.uleb128 0xb
 5325 00c2 27       		.uleb128 0x27
 5326 00c3 19       		.uleb128 0x19
 5327 00c4 49       		.uleb128 0x49
 5328 00c5 13       		.uleb128 0x13
 5329 00c6 11       		.uleb128 0x11
 5330 00c7 01       		.uleb128 0x1
 5331 00c8 12       		.uleb128 0x12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 114


 5332 00c9 06       		.uleb128 0x6
 5333 00ca 40       		.uleb128 0x40
 5334 00cb 18       		.uleb128 0x18
 5335 00cc 9642     		.uleb128 0x2116
 5336 00ce 19       		.uleb128 0x19
 5337 00cf 01       		.uleb128 0x1
 5338 00d0 13       		.uleb128 0x13
 5339 00d1 00       		.byte	0
 5340 00d2 00       		.byte	0
 5341 00d3 10       		.uleb128 0x10
 5342 00d4 05       		.uleb128 0x5
 5343 00d5 00       		.byte	0
 5344 00d6 03       		.uleb128 0x3
 5345 00d7 0E       		.uleb128 0xe
 5346 00d8 3A       		.uleb128 0x3a
 5347 00d9 0B       		.uleb128 0xb
 5348 00da 3B       		.uleb128 0x3b
 5349 00db 0B       		.uleb128 0xb
 5350 00dc 49       		.uleb128 0x49
 5351 00dd 13       		.uleb128 0x13
 5352 00de 02       		.uleb128 0x2
 5353 00df 18       		.uleb128 0x18
 5354 00e0 00       		.byte	0
 5355 00e1 00       		.byte	0
 5356 00e2 11       		.uleb128 0x11
 5357 00e3 34       		.uleb128 0x34
 5358 00e4 00       		.byte	0
 5359 00e5 03       		.uleb128 0x3
 5360 00e6 0E       		.uleb128 0xe
 5361 00e7 3A       		.uleb128 0x3a
 5362 00e8 0B       		.uleb128 0xb
 5363 00e9 3B       		.uleb128 0x3b
 5364 00ea 0B       		.uleb128 0xb
 5365 00eb 49       		.uleb128 0x49
 5366 00ec 13       		.uleb128 0x13
 5367 00ed 02       		.uleb128 0x2
 5368 00ee 18       		.uleb128 0x18
 5369 00ef 00       		.byte	0
 5370 00f0 00       		.byte	0
 5371 00f1 12       		.uleb128 0x12
 5372 00f2 05       		.uleb128 0x5
 5373 00f3 00       		.byte	0
 5374 00f4 03       		.uleb128 0x3
 5375 00f5 08       		.uleb128 0x8
 5376 00f6 3A       		.uleb128 0x3a
 5377 00f7 0B       		.uleb128 0xb
 5378 00f8 3B       		.uleb128 0x3b
 5379 00f9 0B       		.uleb128 0xb
 5380 00fa 49       		.uleb128 0x49
 5381 00fb 13       		.uleb128 0x13
 5382 00fc 02       		.uleb128 0x2
 5383 00fd 18       		.uleb128 0x18
 5384 00fe 00       		.byte	0
 5385 00ff 00       		.byte	0
 5386 0100 13       		.uleb128 0x13
 5387 0101 0B       		.uleb128 0xb
 5388 0102 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 115


 5389 0103 11       		.uleb128 0x11
 5390 0104 01       		.uleb128 0x1
 5391 0105 12       		.uleb128 0x12
 5392 0106 06       		.uleb128 0x6
 5393 0107 00       		.byte	0
 5394 0108 00       		.byte	0
 5395 0109 14       		.uleb128 0x14
 5396 010a 34       		.uleb128 0x34
 5397 010b 00       		.byte	0
 5398 010c 03       		.uleb128 0x3
 5399 010d 0E       		.uleb128 0xe
 5400 010e 3A       		.uleb128 0x3a
 5401 010f 0B       		.uleb128 0xb
 5402 0110 3B       		.uleb128 0x3b
 5403 0111 05       		.uleb128 0x5
 5404 0112 49       		.uleb128 0x49
 5405 0113 13       		.uleb128 0x13
 5406 0114 02       		.uleb128 0x2
 5407 0115 18       		.uleb128 0x18
 5408 0116 00       		.byte	0
 5409 0117 00       		.byte	0
 5410 0118 15       		.uleb128 0x15
 5411 0119 2E       		.uleb128 0x2e
 5412 011a 01       		.byte	0x1
 5413 011b 3F       		.uleb128 0x3f
 5414 011c 19       		.uleb128 0x19
 5415 011d 03       		.uleb128 0x3
 5416 011e 0E       		.uleb128 0xe
 5417 011f 3A       		.uleb128 0x3a
 5418 0120 0B       		.uleb128 0xb
 5419 0121 3B       		.uleb128 0x3b
 5420 0122 05       		.uleb128 0x5
 5421 0123 27       		.uleb128 0x27
 5422 0124 19       		.uleb128 0x19
 5423 0125 11       		.uleb128 0x11
 5424 0126 01       		.uleb128 0x1
 5425 0127 12       		.uleb128 0x12
 5426 0128 06       		.uleb128 0x6
 5427 0129 40       		.uleb128 0x40
 5428 012a 18       		.uleb128 0x18
 5429 012b 9642     		.uleb128 0x2116
 5430 012d 19       		.uleb128 0x19
 5431 012e 01       		.uleb128 0x1
 5432 012f 13       		.uleb128 0x13
 5433 0130 00       		.byte	0
 5434 0131 00       		.byte	0
 5435 0132 16       		.uleb128 0x16
 5436 0133 2E       		.uleb128 0x2e
 5437 0134 01       		.byte	0x1
 5438 0135 3F       		.uleb128 0x3f
 5439 0136 19       		.uleb128 0x19
 5440 0137 03       		.uleb128 0x3
 5441 0138 0E       		.uleb128 0xe
 5442 0139 3A       		.uleb128 0x3a
 5443 013a 0B       		.uleb128 0xb
 5444 013b 3B       		.uleb128 0x3b
 5445 013c 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 116


 5446 013d 11       		.uleb128 0x11
 5447 013e 01       		.uleb128 0x1
 5448 013f 12       		.uleb128 0x12
 5449 0140 06       		.uleb128 0x6
 5450 0141 40       		.uleb128 0x40
 5451 0142 18       		.uleb128 0x18
 5452 0143 9642     		.uleb128 0x2116
 5453 0145 19       		.uleb128 0x19
 5454 0146 01       		.uleb128 0x1
 5455 0147 13       		.uleb128 0x13
 5456 0148 00       		.byte	0
 5457 0149 00       		.byte	0
 5458 014a 17       		.uleb128 0x17
 5459 014b 0B       		.uleb128 0xb
 5460 014c 01       		.byte	0x1
 5461 014d 11       		.uleb128 0x11
 5462 014e 01       		.uleb128 0x1
 5463 014f 12       		.uleb128 0x12
 5464 0150 06       		.uleb128 0x6
 5465 0151 01       		.uleb128 0x1
 5466 0152 13       		.uleb128 0x13
 5467 0153 00       		.byte	0
 5468 0154 00       		.byte	0
 5469 0155 18       		.uleb128 0x18
 5470 0156 34       		.uleb128 0x34
 5471 0157 00       		.byte	0
 5472 0158 03       		.uleb128 0x3
 5473 0159 0E       		.uleb128 0xe
 5474 015a 3A       		.uleb128 0x3a
 5475 015b 0B       		.uleb128 0xb
 5476 015c 3B       		.uleb128 0x3b
 5477 015d 0B       		.uleb128 0xb
 5478 015e 49       		.uleb128 0x49
 5479 015f 13       		.uleb128 0x13
 5480 0160 3F       		.uleb128 0x3f
 5481 0161 19       		.uleb128 0x19
 5482 0162 02       		.uleb128 0x2
 5483 0163 18       		.uleb128 0x18
 5484 0164 00       		.byte	0
 5485 0165 00       		.byte	0
 5486 0166 19       		.uleb128 0x19
 5487 0167 26       		.uleb128 0x26
 5488 0168 00       		.byte	0
 5489 0169 49       		.uleb128 0x49
 5490 016a 13       		.uleb128 0x13
 5491 016b 00       		.byte	0
 5492 016c 00       		.byte	0
 5493 016d 1A       		.uleb128 0x1a
 5494 016e 34       		.uleb128 0x34
 5495 016f 00       		.byte	0
 5496 0170 03       		.uleb128 0x3
 5497 0171 08       		.uleb128 0x8
 5498 0172 3A       		.uleb128 0x3a
 5499 0173 0B       		.uleb128 0xb
 5500 0174 3B       		.uleb128 0x3b
 5501 0175 0B       		.uleb128 0xb
 5502 0176 49       		.uleb128 0x49
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 117


 5503 0177 13       		.uleb128 0x13
 5504 0178 3F       		.uleb128 0x3f
 5505 0179 19       		.uleb128 0x19
 5506 017a 02       		.uleb128 0x2
 5507 017b 18       		.uleb128 0x18
 5508 017c 00       		.byte	0
 5509 017d 00       		.byte	0
 5510 017e 00       		.byte	0
 5511              		.section	.debug_aranges,"",%progbits
 5512 0000 44000000 		.4byte	0x44
 5513 0004 0200     		.2byte	0x2
 5514 0006 00000000 		.4byte	.Ldebug_info0
 5515 000a 04       		.byte	0x4
 5516 000b 00       		.byte	0
 5517 000c 0000     		.2byte	0
 5518 000e 0000     		.2byte	0
 5519 0010 00000000 		.4byte	.LFB41
 5520 0014 14000000 		.4byte	.LFE41-.LFB41
 5521 0018 00000000 		.4byte	.LFB42
 5522 001c FC040000 		.4byte	.LFE42-.LFB42
 5523 0020 00000000 		.4byte	.LFB43
 5524 0024 F0070000 		.4byte	.LFE43-.LFB43
 5525 0028 00000000 		.4byte	.LFB44
 5526 002c 1C010000 		.4byte	.LFE44-.LFB44
 5527 0030 00000000 		.4byte	.LFB45
 5528 0034 E4010000 		.4byte	.LFE45-.LFB45
 5529 0038 00000000 		.4byte	.LFB46
 5530 003c 18070000 		.4byte	.LFE46-.LFB46
 5531 0040 00000000 		.4byte	0
 5532 0044 00000000 		.4byte	0
 5533              		.section	.debug_ranges,"",%progbits
 5534              	.Ldebug_ranges0:
 5535 0000 00000000 		.4byte	.LFB41
 5536 0004 14000000 		.4byte	.LFE41
 5537 0008 00000000 		.4byte	.LFB42
 5538 000c FC040000 		.4byte	.LFE42
 5539 0010 00000000 		.4byte	.LFB43
 5540 0014 F0070000 		.4byte	.LFE43
 5541 0018 00000000 		.4byte	.LFB44
 5542 001c 1C010000 		.4byte	.LFE44
 5543 0020 00000000 		.4byte	.LFB45
 5544 0024 E4010000 		.4byte	.LFE45
 5545 0028 00000000 		.4byte	.LFB46
 5546 002c 18070000 		.4byte	.LFE46
 5547 0030 00000000 		.4byte	0
 5548 0034 00000000 		.4byte	0
 5549              		.section	.debug_line,"",%progbits
 5550              	.Ldebug_line0:
 5551 0000 20050000 		.section	.debug_str,"MS",%progbits,1
 5551      0200D001 
 5551      00000201 
 5551      FB0E0D00 
 5551      01010101 
 5552              	.LASF54:
 5553 0000 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BLOB_RSP\000"
 5553      455F4556 
 5553      545F4741 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 118


 5553      5454435F 
 5553      52454144 
 5554              	.LASF22:
 5555 001e 4359424C 		.ascii	"CYBLE_EVT_STACK_BUSY_STATUS\000"
 5555      455F4556 
 5555      545F5354 
 5555      41434B5F 
 5555      42555359 
 5556              	.LASF202:
 5557 003a 6779726F 		.ascii	"gyro_float\000"
 5557      5F666C6F 
 5557      617400
 5558              	.LASF76:
 5559 0045 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_READ\000"
 5559      455F4556 
 5559      545F4C32 
 5559      4341505F 
 5559      43424643 
 5560              	.LASF135:
 5561 0064 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_HEART_RATE\000"
 5561      4F49445F 
 5561      53454E53 
 5561      4F525F57 
 5561      414B4555 
 5562              	.LASF180:
 5563 0085 41434345 		.ascii	"ACCEL_GYRO_ORIENTATION\000"
 5563      4C5F4759 
 5563      524F5F4F 
 5563      5249454E 
 5563      54415449 
 5564              	.LASF138:
 5565 009c 414E4452 		.ascii	"ANDROID_SENSOR_B2S\000"
 5565      4F49445F 
 5565      53454E53 
 5565      4F525F42 
 5565      325300
 5566              	.LASF121:
 5567 00af 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_GYROSCOPE\000"
 5567      4F49445F 
 5567      53454E53 
 5567      4F525F57 
 5567      414B4555 
 5568              	.LASF34:
 5569 00cf 4359424C 		.ascii	"CYBLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 5569      455F4556 
 5569      545F4741 
 5569      505F434F 
 5569      4E4E4543 
 5570              	.LASF75:
 5571 00f8 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 5571      455F4556 
 5571      545F4C32 
 5571      4341505F 
 5571      43424643 
 5572              	.LASF39:
 5573 0119 4359424C 		.ascii	"CYBLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 5573      455F4556 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 119


 5573      545F4741 
 5573      505F4F4F 
 5573      425F4745 
 5574              	.LASF3:
 5575 0142 5F5F7569 		.ascii	"__uint8_t\000"
 5575      6E74385F 
 5575      7400
 5576              	.LASF49:
 5577 014c 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 5577      455F4556 
 5577      545F4741 
 5577      5454435F 
 5577      52454144 
 5578              	.LASF112:
 5579 0173 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_SIGNIFICANT_MOTION\000"
 5579      4F49445F 
 5579      53454E53 
 5579      4F525F57 
 5579      414B4555 
 5580              	.LASF125:
 5581 019c 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_LINEAR_ACCELERATION\000"
 5581      4F49445F 
 5581      53454E53 
 5581      4F525F57 
 5581      414B4555 
 5582              	.LASF196:
 5583 01c6 74696C74 		.ascii	"tilt_data_was_set\000"
 5583      5F646174 
 5583      615F7761 
 5583      735F7365 
 5583      7400
 5584              	.LASF19:
 5585 01d8 4359424C 		.ascii	"CYBLE_EVT_TIMEOUT\000"
 5585      455F4556 
 5585      545F5449 
 5585      4D454F55 
 5585      5400
 5586              	.LASF94:
 5587 01ea 6D70755F 		.ascii	"mpu_time_t\000"
 5587      74696D65 
 5587      5F7400
 5588              	.LASF100:
 5589 01f5 414E4452 		.ascii	"ANDROID_SENSOR_LIGHT\000"
 5589      4F49445F 
 5589      53454E53 
 5589      4F525F4C 
 5589      49474854 
 5590              	.LASF153:
 5591 020a 68616E64 		.ascii	"handle_char_input\000"
 5591      6C655F63 
 5591      6861725F 
 5591      696E7075 
 5591      7400
 5592              	.LASF165:
 5593 021c 68656164 		.ascii	"header2\000"
 5593      65723200 
 5594              	.LASF191:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 120


 5595 0224 71756174 		.ascii	"quat9_data_was_set\000"
 5595      395F6461 
 5595      74615F77 
 5595      61735F73 
 5595      657400
 5596              	.LASF194:
 5597 0237 6261635F 		.ascii	"bac_data_was_set\000"
 5597      64617461 
 5597      5F776173 
 5597      5F736574 
 5597      00
 5598              	.LASF9:
 5599 0248 6C6F6E67 		.ascii	"long long unsigned int\000"
 5599      206C6F6E 
 5599      6720756E 
 5599      7369676E 
 5599      65642069 
 5600              	.LASF21:
 5601 025f 4359424C 		.ascii	"CYBLE_EVT_HCI_STATUS\000"
 5601      455F4556 
 5601      545F4843 
 5601      495F5354 
 5601      41545553 
 5602              	.LASF66:
 5603 0274 4359424C 		.ascii	"CYBLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 5603      455F4556 
 5603      545F4741 
 5603      5454435F 
 5603      53544F50 
 5604              	.LASF190:
 5605 0296 71756174 		.ascii	"quat6_data_was_set\000"
 5605      365F6461 
 5605      74615F77 
 5605      61735F73 
 5605      657400
 5606              	.LASF35:
 5607 02a9 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_START_STOP\000"
 5607      455F4556 
 5607      545F4741 
 5607      50435F53 
 5607      43414E5F 
 5608              	.LASF119:
 5609 02c8 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_MAGNETIC_FIELD\000"
 5609      4F49445F 
 5609      53454E53 
 5609      4F525F57 
 5609      414B4555 
 5610              	.LASF80:
 5611 02ed 4359424C 		.ascii	"CYBLE_EVT_PENDING_FLASH_WRITE\000"
 5611      455F4556 
 5611      545F5045 
 5611      4E44494E 
 5611      475F464C 
 5612              	.LASF206:
 5613 030b 636F6D70 		.ascii	"compass_float\000"
 5613      6173735F 
 5613      666C6F61 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 121


 5613      7400
 5614              	.LASF106:
 5615 0319 414E4452 		.ascii	"ANDROID_SENSOR_ROTATION_VECTOR\000"
 5615      4F49445F 
 5615      53454E53 
 5615      4F525F52 
 5615      4F544154 
 5616              	.LASF69:
 5617 0338 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 5617      455F4556 
 5617      545F4C32 
 5617      4341505F 
 5617      434F4E4E 
 5618              	.LASF193:
 5619 035e 676D7276 		.ascii	"gmrv_quat_was_set\000"
 5619      5F717561 
 5619      745F7761 
 5619      735F7365 
 5619      7400
 5620              	.LASF33:
 5621 0370 4359424C 		.ascii	"CYBLE_EVT_GAP_ENCRYPT_CHANGE\000"
 5621      455F4556 
 5621      545F4741 
 5621      505F454E 
 5621      43525950 
 5622              	.LASF37:
 5623 038d 4359424C 		.ascii	"CYBLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 5623      455F4556 
 5623      545F4741 
 5623      505F4E55 
 5623      4D455249 
 5624              	.LASF195:
 5625 03b6 666C6970 		.ascii	"flip_data_was_set\000"
 5625      5F646174 
 5625      615F7761 
 5625      735F7365 
 5625      7400
 5626              	.LASF8:
 5627 03c8 6C6F6E67 		.ascii	"long long int\000"
 5627      206C6F6E 
 5627      6720696E 
 5627      7400
 5628              	.LASF0:
 5629 03d6 7369676E 		.ascii	"signed char\000"
 5629      65642063 
 5629      68617200 
 5630              	.LASF18:
 5631 03e2 4359424C 		.ascii	"CYBLE_EVT_STACK_ON\000"
 5631      455F4556 
 5631      545F5354 
 5631      41434B5F 
 5631      4F4E00
 5632              	.LASF96:
 5633 03f5 414E4452 		.ascii	"ANDROID_SENSOR_ACCELEROMETER\000"
 5633      4F49445F 
 5633      53454E53 
 5633      4F525F41 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 122


 5633      4343454C 
 5634              	.LASF139:
 5635 0412 414E4452 		.ascii	"ANDROID_SENSOR_FLIP_PICKUP\000"
 5635      4F49445F 
 5635      53454E53 
 5635      4F525F46 
 5635      4C49505F 
 5636              	.LASF137:
 5637 042d 414E4452 		.ascii	"ANDROID_SENSOR_NUM_MAX\000"
 5637      4F49445F 
 5637      53454E53 
 5637      4F525F4E 
 5637      554D5F4D 
 5638              	.LASF211:
 5639 0444 61636365 		.ascii	"accel_accuracy\000"
 5639      6C5F6163 
 5639      63757261 
 5639      637900
 5640              	.LASF178:
 5641 0453 434F4D50 		.ascii	"COMPASS_CHIP_ADDR\000"
 5641      4153535F 
 5641      43484950 
 5641      5F414444 
 5641      5200
 5642              	.LASF143:
 5643 0465 53455455 		.ascii	"SETUP\000"
 5643      5000
 5644              	.LASF25:
 5645 046b 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_REQ\000"
 5645      455F4556 
 5645      545F4741 
 5645      505F4155 
 5645      54485F52 
 5646              	.LASF53:
 5647 0482 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_RSP\000"
 5647      455F4556 
 5647      545F4741 
 5647      5454435F 
 5647      52454144 
 5648              	.LASF146:
 5649 049b 7265706F 		.ascii	"report\000"
 5649      727400
 5650              	.LASF123:
 5651 04a2 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_PRESSURE\000"
 5651      4F49445F 
 5651      53454E53 
 5651      4F525F57 
 5651      414B4555 
 5652              	.LASF150:
 5653 04c1 62617365 		.ascii	"base_rate\000"
 5653      5F726174 
 5653      6500
 5654              	.LASF58:
 5655 04cb 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_CMD_REQ\000"
 5655      455F4556 
 5655      545F4741 
 5655      5454535F 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 123


 5655      57524954 
 5656              	.LASF68:
 5657 04e9 4359424C 		.ascii	"CYBLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 5657      455F4556 
 5657      545F4741 
 5657      5454435F 
 5657      4C4F4E47 
 5658              	.LASF214:
 5659 050c 636F6D70 		.ascii	"compass_accuracy\000"
 5659      6173735F 
 5659      61636375 
 5659      72616379 
 5659      00
 5660              	.LASF30:
 5661 051d 4359424C 		.ascii	"CYBLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 5661      455F4556 
 5661      545F4741 
 5661      50505F41 
 5661      44564552 
 5662              	.LASF215:
 5663 0545 676D7276 		.ascii	"gmrv_accuracy\000"
 5663      5F616363 
 5663      75726163 
 5663      7900
 5664              	.LASF129:
 5665 0553 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_MAGNETIC_FIELD_UNCALIBRATED\000"
 5665      4F49445F 
 5665      53454E53 
 5665      4F525F57 
 5665      414B4555 
 5666              	.LASF147:
 5667 0585 64656275 		.ascii	"debug_reg_on\000"
 5667      675F7265 
 5667      675F6F6E 
 5667      00
 5668              	.LASF12:
 5669 0592 75696E74 		.ascii	"uint16_t\000"
 5669      31365F74 
 5669      00
 5670              	.LASF14:
 5671 059b 646F7562 		.ascii	"double\000"
 5671      6C6500
 5672              	.LASF183:
 5673 05a2 73656C66 		.ascii	"self_test_result\000"
 5673      5F746573 
 5673      745F7265 
 5673      73756C74 
 5673      00
 5674              	.LASF87:
 5675 05b3 4359424C 		.ascii	"CYBLE_DIS_FIRMWARE_REV\000"
 5675      455F4449 
 5675      535F4649 
 5675      524D5741 
 5675      52455F52 
 5676              	.LASF168:
 5677 05ca 6C6F6E67 		.ascii	"long_data\000"
 5677      5F646174 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 124


 5677      6100
 5678              	.LASF224:
 5679 05d4 63757272 		.ascii	"current_output_rate\000"
 5679      656E745F 
 5679      6F757470 
 5679      75745F72 
 5679      61746500 
 5680              	.LASF124:
 5681 05e8 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_GRAVITY\000"
 5681      4F49445F 
 5681      53454E53 
 5681      4F525F57 
 5681      414B4555 
 5682              	.LASF140:
 5683 0606 414E4452 		.ascii	"ANDROID_SENSOR_ACTIVITY_CLASSIFICATON\000"
 5683      4F49445F 
 5683      53454E53 
 5683      4F525F41 
 5683      43544956 
 5684              	.LASF108:
 5685 062c 414E4452 		.ascii	"ANDROID_SENSOR_AMBIENT_TEMPERATURE\000"
 5685      4F49445F 
 5685      53454E53 
 5685      4F525F41 
 5685      4D424945 
 5686              	.LASF133:
 5687 064f 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_STEP_COUNTER\000"
 5687      4F49445F 
 5687      53454E53 
 5687      4F525F57 
 5687      414B4555 
 5688              	.LASF86:
 5689 0672 4359424C 		.ascii	"CYBLE_DIS_HARDWARE_REV\000"
 5689      455F4449 
 5689      535F4841 
 5689      52445741 
 5689      52455F52 
 5690              	.LASF82:
 5691 0689 4359424C 		.ascii	"CYBLE_EVT_MAX\000"
 5691      455F4556 
 5691      545F4D41 
 5691      5800
 5692              	.LASF156:
 5693 0697 70617373 		.ascii	"pass_str\000"
 5693      5F737472 
 5693      00
 5694              	.LASF207:
 5695 06a0 636F6D70 		.ascii	"compass_raw_float\000"
 5695      6173735F 
 5695      7261775F 
 5695      666C6F61 
 5695      7400
 5696              	.LASF79:
 5697 06b2 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 5697      455F4556 
 5697      545F4C32 
 5697      4341505F 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 125


 5697      43424643 
 5698              	.LASF24:
 5699 06d6 4359424C 		.ascii	"CYBLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 5699      455F4556 
 5699      545F4741 
 5699      50435F53 
 5699      43414E5F 
 5700              	.LASF102:
 5701 06fa 414E4452 		.ascii	"ANDROID_SENSOR_TEMPERATURE\000"
 5701      4F49445F 
 5701      53454E53 
 5701      4F525F54 
 5701      454D5045 
 5702              	.LASF126:
 5703 0715 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_ROTATION_VECTOR\000"
 5703      4F49445F 
 5703      53454E53 
 5703      4F525F57 
 5703      414B4555 
 5704              	.LASF212:
 5705 073b 6779726F 		.ascii	"gyro_accuracy\000"
 5705      5F616363 
 5705      75726163 
 5705      7900
 5706              	.LASF81:
 5707 0749 4359424C 		.ascii	"CYBLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 5707      455F4556 
 5707      545F4C45 
 5707      5F50494E 
 5707      475F4155 
 5708              	.LASF145:
 5709 0768 696E765F 		.ascii	"inv_error_t\000"
 5709      6572726F 
 5709      725F7400 
 5710              	.LASF103:
 5711 0774 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_PROXIMITY\000"
 5711      4F49445F 
 5711      53454E53 
 5711      4F525F57 
 5711      414B4555 
 5712              	.LASF7:
 5713 0794 6C6F6E67 		.ascii	"long unsigned int\000"
 5713      20756E73 
 5713      69676E65 
 5713      6420696E 
 5713      7400
 5714              	.LASF166:
 5715 07a6 64617461 		.ascii	"data_left_in_fifo\000"
 5715      5F6C6566 
 5715      745F696E 
 5715      5F666966 
 5715      6F00
 5716              	.LASF228:
 5717 07b8 414E4452 		.ascii	"ANDROID_SENSORS\000"
 5717      4F49445F 
 5717      53454E53 
 5717      4F525300 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 126


 5718              	.LASF56:
 5719 07c8 4359424C 		.ascii	"CYBLE_EVT_GATTS_WRITE_REQ\000"
 5719      455F4556 
 5719      545F4741 
 5719      5454535F 
 5719      57524954 
 5720              	.LASF48:
 5721 07e2 4359424C 		.ascii	"CYBLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 5721      455F4556 
 5721      545F4741 
 5721      5454435F 
 5721      5843484E 
 5722              	.LASF65:
 5723 0800 4359424C 		.ascii	"CYBLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 5723      455F4556 
 5723      545F4741 
 5723      5454535F 
 5723      44415441 
 5724              	.LASF162:
 5725 0824 6669666F 		.ascii	"fifo_handler\000"
 5725      5F68616E 
 5725      646C6572 
 5725      00
 5726              	.LASF216:
 5727 0831 72657375 		.ascii	"result_quat\000"
 5727      6C745F71 
 5727      75617400 
 5728              	.LASF177:
 5729 083d 434F4D50 		.ascii	"COMPASS_SLAVE_ID\000"
 5729      4153535F 
 5729      534C4156 
 5729      455F4944 
 5729      00
 5730              	.LASF62:
 5731 084e 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 5731      455F4556 
 5731      545F4741 
 5731      5454435F 
 5731      48414E44 
 5732              	.LASF105:
 5733 086f 414E4452 		.ascii	"ANDROID_SENSOR_LINEAR_ACCELERATION\000"
 5733      4F49445F 
 5733      53454E53 
 5733      4F525F4C 
 5733      494E4541 
 5734              	.LASF5:
 5735 0892 73686F72 		.ascii	"short unsigned int\000"
 5735      7420756E 
 5735      7369676E 
 5735      65642069 
 5735      6E7400
 5736              	.LASF17:
 5737 08a5 4359424C 		.ascii	"CYBLE_EVT_HOST_INVALID\000"
 5737      455F4556 
 5737      545F484F 
 5737      53545F49 
 5737      4E56414C 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 127


 5738              	.LASF117:
 5739 08bc 414E4452 		.ascii	"ANDROID_SENSOR_PROXIMITY\000"
 5739      4F49445F 
 5739      53454E53 
 5739      4F525F50 
 5739      524F5849 
 5740              	.LASF23:
 5741 08d5 4359424C 		.ascii	"CYBLE_EVT_MEMORY_REQUEST\000"
 5741      455F4556 
 5741      545F4D45 
 5741      4D4F5259 
 5741      5F524551 
 5742              	.LASF60:
 5743 08ee 4359424C 		.ascii	"CYBLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 5743      455F4556 
 5743      545F4741 
 5743      5454535F 
 5743      45584543 
 5744              	.LASF111:
 5745 090d 414E4452 		.ascii	"ANDROID_SENSOR_GYROSCOPE_UNCALIBRATED\000"
 5745      4F49445F 
 5745      53454E53 
 5745      4F525F47 
 5745      59524F53 
 5746              	.LASF163:
 5747 0933 696E745F 		.ascii	"int_read_back\000"
 5747      72656164 
 5747      5F626163 
 5747      6B00
 5748              	.LASF26:
 5749 0941 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 5749      455F4556 
 5749      545F4741 
 5749      505F5041 
 5749      53534B45 
 5750              	.LASF31:
 5751 0965 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_CONNECTED\000"
 5751      455F4556 
 5751      545F4741 
 5751      505F4445 
 5751      56494345 
 5752              	.LASF160:
 5753 0984 74656D70 		.ascii	"temp_long_quat\000"
 5753      5F6C6F6E 
 5753      675F7175 
 5753      617400
 5754              	.LASF204:
 5755 0993 6779726F 		.ascii	"gyro_bias_float\000"
 5755      5F626961 
 5755      735F666C 
 5755      6F617400 
 5756              	.LASF50:
 5757 09a3 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 5757      455F4556 
 5757      545F4741 
 5757      5454435F 
 5757      52454144 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 128


 5758              	.LASF91:
 5759 09c4 4359424C 		.ascii	"CYBLE_DIS_PNP_ID\000"
 5759      455F4449 
 5759      535F504E 
 5759      505F4944 
 5759      00
 5760              	.LASF101:
 5761 09d5 414E4452 		.ascii	"ANDROID_SENSOR_PRESSURE\000"
 5761      4F49445F 
 5761      53454E53 
 5761      4F525F50 
 5761      52455353 
 5762              	.LASF2:
 5763 09ed 73686F72 		.ascii	"short int\000"
 5763      7420696E 
 5763      7400
 5764              	.LASF27:
 5765 09f7 4359424C 		.ascii	"CYBLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 5765      455F4556 
 5765      545F4741 
 5765      505F5041 
 5765      53534B45 
 5766              	.LASF95:
 5767 0a1d 414E4452 		.ascii	"ANDROID_SENSOR_META_DATA\000"
 5767      4F49445F 
 5767      53454E53 
 5767      4F525F4D 
 5767      4554415F 
 5768              	.LASF45:
 5769 0a36 4359424C 		.ascii	"CYBLE_EVT_GATT_CONNECT_IND\000"
 5769      455F4556 
 5769      545F4741 
 5769      54545F43 
 5769      4F4E4E45 
 5770              	.LASF172:
 5771 0a51 746F7461 		.ascii	"total_sample_cnt\000"
 5771      6C5F7361 
 5771      6D706C65 
 5771      5F636E74 
 5771      00
 5772              	.LASF110:
 5773 0a62 414E4452 		.ascii	"ANDROID_SENSOR_GAME_ROTATION_VECTOR\000"
 5773      4F49445F 
 5773      53454E53 
 5773      4F525F47 
 5773      414D455F 
 5774              	.LASF226:
 5775 0a86 2E5C696E 		.ascii	".\\invn.c\000"
 5775      766E2E63 
 5775      00
 5776              	.LASF71:
 5777 0a8f 4359424C 		.ascii	"CYBLE_EVT_L2CAP_COMMAND_REJ\000"
 5777      455F4556 
 5777      545F4C32 
 5777      4341505F 
 5777      434F4D4D 
 5778              	.LASF155:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 129


 5779 0aab 73656E73 		.ascii	"sensors_bias\000"
 5779      6F72735F 
 5779      62696173 
 5779      00
 5780              	.LASF89:
 5781 0ab8 4359424C 		.ascii	"CYBLE_DIS_SYSTEM_ID\000"
 5781      455F4449 
 5781      535F5359 
 5781      5354454D 
 5781      5F494400 
 5782              	.LASF157:
 5783 0acc 6661696C 		.ascii	"fail_str\000"
 5783      5F737472 
 5783      00
 5784              	.LASF72:
 5785 0ad5 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_IND\000"
 5785      455F4556 
 5785      545F4C32 
 5785      4341505F 
 5785      43424643 
 5786              	.LASF158:
 5787 0af3 7363616C 		.ascii	"scale\000"
 5787      6500
 5788              	.LASF132:
 5789 0af9 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_STEP_DETECTOR\000"
 5789      4F49445F 
 5789      53454E53 
 5789      4F525F57 
 5789      414B4555 
 5790              	.LASF136:
 5791 0b1d 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_TILT_DETECTOR\000"
 5791      4F49445F 
 5791      53454E53 
 5791      4F525F57 
 5791      414B4555 
 5792              	.LASF16:
 5793 0b41 73697A65 		.ascii	"sizetype\000"
 5793      74797065 
 5793      00
 5794              	.LASF97:
 5795 0b4a 414E4452 		.ascii	"ANDROID_SENSOR_GEOMAGNETIC_FIELD\000"
 5795      4F49445F 
 5795      53454E53 
 5795      4F525F47 
 5795      454F4D41 
 5796              	.LASF115:
 5797 0b6b 414E4452 		.ascii	"ANDROID_SENSOR_GEOMAGNETIC_ROTATION_VECTOR\000"
 5797      4F49445F 
 5797      53454E53 
 5797      4F525F47 
 5797      454F4D41 
 5798              	.LASF99:
 5799 0b96 414E4452 		.ascii	"ANDROID_SENSOR_GYROSCOPE\000"
 5799      4F49445F 
 5799      53454E53 
 5799      4F525F47 
 5799      59524F53 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 130


 5800              	.LASF131:
 5801 0baf 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_GYROSCOPE_UNCALIBRATED\000"
 5801      4F49445F 
 5801      53454E53 
 5801      4F525F57 
 5801      414B4555 
 5802              	.LASF29:
 5803 0bdc 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_FAILED\000"
 5803      455F4556 
 5803      545F4741 
 5803      505F4155 
 5803      54485F46 
 5804              	.LASF167:
 5805 0bf6 73686F72 		.ascii	"short_data\000"
 5805      745F6461 
 5805      746100
 5806              	.LASF184:
 5807 0c01 646D705F 		.ascii	"dmp_bias\000"
 5807      62696173 
 5807      00
 5808              	.LASF189:
 5809 0c0a 7261775F 		.ascii	"raw_compass_data_was_set\000"
 5809      636F6D70 
 5809      6173735F 
 5809      64617461 
 5809      5F776173 
 5810              	.LASF42:
 5811 0c23 4359424C 		.ascii	"CYBLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 5811      455F4556 
 5811      545F4741 
 5811      50435F44 
 5811      49524543 
 5812              	.LASF40:
 5813 0c44 4359424C 		.ascii	"CYBLE_EVT_GAP_DATA_LENGTH_CHANGE\000"
 5813      455F4556 
 5813      545F4741 
 5813      505F4441 
 5813      54415F4C 
 5814              	.LASF113:
 5815 0c65 414E4452 		.ascii	"ANDROID_SENSOR_STEP_DETECTOR\000"
 5815      4F49445F 
 5815      53454E53 
 5815      4F525F53 
 5815      5445505F 
 5816              	.LASF28:
 5817 0c82 4359424C 		.ascii	"CYBLE_EVT_GAP_AUTH_COMPLETE\000"
 5817      455F4556 
 5817      545F4741 
 5817      505F4155 
 5817      54485F43 
 5818              	.LASF104:
 5819 0c9e 414E4452 		.ascii	"ANDROID_SENSOR_GRAVITY\000"
 5819      4F49445F 
 5819      53454E53 
 5819      4F525F47 
 5819      52415649 
 5820              	.LASF173:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 131


 5821 0cb5 7261775F 		.ascii	"raw_data\000"
 5821      64617461 
 5821      00
 5822              	.LASF201:
 5823 0cbe 63756265 		.ascii	"cube_rv\000"
 5823      5F727600 
 5824              	.LASF90:
 5825 0cc6 4359424C 		.ascii	"CYBLE_DIS_REG_CERT_DATA\000"
 5825      455F4449 
 5825      535F5245 
 5825      475F4345 
 5825      52545F44 
 5826              	.LASF203:
 5827 0cde 6779726F 		.ascii	"gyro_raw_float\000"
 5827      5F726177 
 5827      5F666C6F 
 5827      617400
 5828              	.LASF73:
 5829 0ced 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 5829      455F4556 
 5829      545F4C32 
 5829      4341505F 
 5829      43424643 
 5830              	.LASF186:
 5831 0d0b 6779726F 		.ascii	"gyro_data_was_set\000"
 5831      5F646174 
 5831      615F7761 
 5831      735F7365 
 5831      7400
 5832              	.LASF109:
 5833 0d1d 414E4452 		.ascii	"ANDROID_SENSOR_MAGNETIC_FIELD_UNCALIBRATED\000"
 5833      4F49445F 
 5833      53454E53 
 5833      4F525F4D 
 5833      41474E45 
 5834              	.LASF13:
 5835 0d48 666C6F61 		.ascii	"float\000"
 5835      7400
 5836              	.LASF64:
 5837 0d4e 4359424C 		.ascii	"CYBLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 5837      455F4556 
 5837      545F4741 
 5837      5454535F 
 5837      48414E44 
 5838              	.LASF218:
 5839 0d6f 675F6176 		.ascii	"g_average\000"
 5839      65726167 
 5839      6500
 5840              	.LASF85:
 5841 0d79 4359424C 		.ascii	"CYBLE_DIS_SERIAL_NUMBER\000"
 5841      455F4449 
 5841      535F5345 
 5841      5249414C 
 5841      5F4E554D 
 5842              	.LASF179:
 5843 0d91 50524553 		.ascii	"PRESSURE_CHIP_ADDR\000"
 5843      53555245 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 132


 5843      5F434849 
 5843      505F4144 
 5843      445200
 5844              	.LASF205:
 5845 0da4 70726576 		.ascii	"previous_bias\000"
 5845      696F7573 
 5845      5F626961 
 5845      7300
 5846              	.LASF1:
 5847 0db2 756E7369 		.ascii	"unsigned char\000"
 5847      676E6564 
 5847      20636861 
 5847      7200
 5848              	.LASF92:
 5849 0dc0 4359424C 		.ascii	"CYBLE_DIS_CHAR_COUNT\000"
 5849      455F4449 
 5849      535F4348 
 5849      41525F43 
 5849      4F554E54 
 5850              	.LASF210:
 5851 0dd5 63756265 		.ascii	"cube_gmrv\000"
 5851      5F676D72 
 5851      7600
 5852              	.LASF197:
 5853 0ddf 6772765F 		.ascii	"grv_float\000"
 5853      666C6F61 
 5853      7400
 5854              	.LASF219:
 5855 0de9 6261635F 		.ascii	"bac_state\000"
 5855      73746174 
 5855      6500
 5856              	.LASF63:
 5857 0df3 4359424C 		.ascii	"CYBLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 5857      455F4556 
 5857      545F4741 
 5857      5454435F 
 5857      48414E44 
 5858              	.LASF130:
 5859 0e14 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_GAME_ROTATION_VECTOR\000"
 5859      4F49445F 
 5859      53454E53 
 5859      4F525F57 
 5859      414B4555 
 5860              	.LASF148:
 5861 0e3f 65787065 		.ascii	"expected_data\000"
 5861      63746564 
 5861      5F646174 
 5861      6100
 5862              	.LASF222:
 5863 0e4d 666C6970 		.ascii	"flip_pickup\000"
 5863      5F706963 
 5863      6B757000 
 5864              	.LASF88:
 5865 0e59 4359424C 		.ascii	"CYBLE_DIS_SOFTWARE_REV\000"
 5865      455F4449 
 5865      535F534F 
 5865      46545741 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 133


 5865      52455F52 
 5866              	.LASF227:
 5867 0e70 433A5C44 		.ascii	"C:\\Dropbox\\Projects\\George Posture Correction Pr"
 5867      726F7062 
 5867      6F785C50 
 5867      726F6A65 
 5867      6374735C 
 5868 0ea0 6F6A6563 		.ascii	"oject\\BLE_Battery_Level\\BackBone.cydsn\000"
 5868      745C424C 
 5868      455F4261 
 5868      74746572 
 5868      795F4C65 
 5869              	.LASF144:
 5870 0ec7 47454E45 		.ascii	"GENERAL_SENSORS_MAX\000"
 5870      52414C5F 
 5870      53454E53 
 5870      4F52535F 
 5870      4D415800 
 5871              	.LASF59:
 5872 0edb 4359424C 		.ascii	"CYBLE_EVT_GATTS_PREP_WRITE_REQ\000"
 5872      455F4556 
 5872      545F4741 
 5872      5454535F 
 5872      50524550 
 5873              	.LASF161:
 5874 0efa 70726F63 		.ascii	"process_sensor_output\000"
 5874      6573735F 
 5874      73656E73 
 5874      6F725F6F 
 5874      75747075 
 5875              	.LASF192:
 5876 0f10 72765F71 		.ascii	"rv_quat_was_set\000"
 5876      7561745F 
 5876      7761735F 
 5876      73657400 
 5877              	.LASF142:
 5878 0f20 53454C46 		.ascii	"SELF_TEST\000"
 5878      5F544553 
 5878      5400
 5879              	.LASF128:
 5880 0f2a 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_AMBIENT_TEMPERATURE\000"
 5880      4F49445F 
 5880      53454E53 
 5880      4F525F57 
 5880      414B4555 
 5881              	.LASF36:
 5882 0f54 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 5882      455F4556 
 5882      545F4741 
 5882      505F4B45 
 5882      59494E46 
 5883              	.LASF176:
 5884 0f78 6F6C645F 		.ascii	"old_steps\000"
 5884      73746570 
 5884      7300
 5885              	.LASF217:
 5886 0f82 615F6176 		.ascii	"a_average\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 134


 5886      65726167 
 5886      6500
 5887              	.LASF44:
 5888 0f8c 4359424C 		.ascii	"CYBLE_EVT_GATTC_ERROR_RSP\000"
 5888      455F4556 
 5888      545F4741 
 5888      5454435F 
 5888      4552524F 
 5889              	.LASF171:
 5890 0fa6 73616D70 		.ascii	"sample_cnt_array\000"
 5890      6C655F63 
 5890      6E745F61 
 5890      72726179 
 5890      00
 5891              	.LASF220:
 5892 0fb7 74696C74 		.ascii	"tilt_state\000"
 5892      5F737461 
 5892      746500
 5893              	.LASF43:
 5894 0fc2 4359424C 		.ascii	"CYBLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 5894      455F4556 
 5894      545F4741 
 5894      505F534D 
 5894      505F4E45 
 5895              	.LASF141:
 5896 0fe9 414E4452 		.ascii	"ANDROID_SENSOR_SCREEN_ROTATION\000"
 5896      4F49445F 
 5896      53454E53 
 5896      4F525F53 
 5896      43524545 
 5897              	.LASF51:
 5898 1008 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_INFO_RSP\000"
 5898      455F4556 
 5898      545F4741 
 5898      5454435F 
 5898      46494E44 
 5899              	.LASF159:
 5900 1026 6C6F6E67 		.ascii	"long_quat\000"
 5900      5F717561 
 5900      7400
 5901              	.LASF93:
 5902 1030 6C6F6E67 		.ascii	"long double\000"
 5902      20646F75 
 5902      626C6500 
 5903              	.LASF15:
 5904 103c 63686172 		.ascii	"char\000"
 5904      00
 5905              	.LASF213:
 5906 1041 72765F61 		.ascii	"rv_accuracy\000"
 5906      63637572 
 5906      61637900 
 5907              	.LASF55:
 5908 104d 4359424C 		.ascii	"CYBLE_EVT_GATTC_READ_MULTI_RSP\000"
 5908      455F4556 
 5908      545F4741 
 5908      5454435F 
 5908      52454144 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 135


 5909              	.LASF32:
 5910 106c 4359424C 		.ascii	"CYBLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 5910      455F4556 
 5910      545F4741 
 5910      505F4445 
 5910      56494345 
 5911              	.LASF10:
 5912 108e 756E7369 		.ascii	"unsigned int\000"
 5912      676E6564 
 5912      20696E74 
 5912      00
 5913              	.LASF4:
 5914 109b 5F5F7569 		.ascii	"__uint16_t\000"
 5914      6E743136 
 5914      5F7400
 5915              	.LASF67:
 5916 10a6 4359424C 		.ascii	"CYBLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 5916      455F4556 
 5916      545F4741 
 5916      5454535F 
 5916      52454144 
 5917              	.LASF57:
 5918 10cf 4359424C 		.ascii	"CYBLE_EVT_GATTC_WRITE_RSP\000"
 5918      455F4556 
 5918      545F4741 
 5918      5454435F 
 5918      57524954 
 5919              	.LASF38:
 5920 10e9 4359424C 		.ascii	"CYBLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 5920      455F4556 
 5920      545F4741 
 5920      505F4B45 
 5920      59505245 
 5921              	.LASF77:
 5922 110d 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 5922      455F4556 
 5922      545F4C32 
 5922      4341505F 
 5922      43424643 
 5923              	.LASF154:
 5924 1130 72617465 		.ascii	"rate\000"
 5924      00
 5925              	.LASF221:
 5926 1135 6261635F 		.ascii	"bac_ts\000"
 5926      747300
 5927              	.LASF78:
 5928 113c 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 5928      455F4556 
 5928      545F4C32 
 5928      4341505F 
 5928      43424643 
 5929              	.LASF223:
 5930 115f 73746570 		.ascii	"step_detected\000"
 5930      5F646574 
 5930      65637465 
 5930      6400
 5931              	.LASF230:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 136


 5932 116d 6779726F 		.ascii	"gyro_data_ready_cb\000"
 5932      5F646174 
 5932      615F7265 
 5932      6164795F 
 5932      636200
 5933              	.LASF199:
 5934 1180 61636365 		.ascii	"accel_float\000"
 5934      6C5F666C 
 5934      6F617400 
 5935              	.LASF20:
 5936 118c 4359424C 		.ascii	"CYBLE_EVT_HARDWARE_ERROR\000"
 5936      455F4556 
 5936      545F4841 
 5936      52445741 
 5936      52455F45 
 5937              	.LASF209:
 5938 11a5 676D7276 		.ascii	"gmrv_float\000"
 5938      5F666C6F 
 5938      617400
 5939              	.LASF84:
 5940 11b0 4359424C 		.ascii	"CYBLE_DIS_MODEL_NUMBER\000"
 5940      455F4449 
 5940      535F4D4F 
 5940      44454C5F 
 5940      4E554D42 
 5941              	.LASF134:
 5942 11c7 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_GEOMAGNETIC_ROTATION_VECTOR\000"
 5942      4F49445F 
 5942      53454E53 
 5942      4F525F57 
 5942      414B4555 
 5943              	.LASF185:
 5944 11f9 61636365 		.ascii	"accel_data_was_set\000"
 5944      6C5F6461 
 5944      74615F77 
 5944      61735F73 
 5944      657400
 5945              	.LASF175:
 5946 120c 73746570 		.ascii	"steps\000"
 5946      7300
 5947              	.LASF200:
 5948 1212 72765F66 		.ascii	"rv_float\000"
 5948      6C6F6174 
 5948      00
 5949              	.LASF152:
 5950 121b 7365745F 		.ascii	"set_output_rates\000"
 5950      6F757470 
 5950      75745F72 
 5950      61746573 
 5950      00
 5951              	.LASF47:
 5952 122c 4359424C 		.ascii	"CYBLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 5952      455F4556 
 5952      545F4741 
 5952      5454535F 
 5952      58434E48 
 5953              	.LASF188:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 137


 5954 124a 636F6D70 		.ascii	"compass_data_was_set\000"
 5954      6173735F 
 5954      64617461 
 5954      5F776173 
 5954      5F736574 
 5955              	.LASF107:
 5956 125f 414E4452 		.ascii	"ANDROID_SENSOR_HUMIDITY\000"
 5956      4F49445F 
 5956      53454E53 
 5956      4F525F48 
 5956      554D4944 
 5957              	.LASF182:
 5958 1277 534F4654 		.ascii	"SOFT_IRON_MATRIX\000"
 5958      5F49524F 
 5958      4E5F4D41 
 5958      54524958 
 5958      00
 5959              	.LASF118:
 5960 1288 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_ACCELEROMETER\000"
 5960      4F49445F 
 5960      53454E53 
 5960      4F525F57 
 5960      414B4555 
 5961              	.LASF198:
 5962 12ac 63756265 		.ascii	"cube_grv\000"
 5962      5F677276 
 5962      00
 5963              	.LASF11:
 5964 12b5 75696E74 		.ascii	"uint8_t\000"
 5964      385F7400 
 5965              	.LASF127:
 5966 12bd 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_RELATIVE_HUMIDITY\000"
 5966      4F49445F 
 5966      53454E53 
 5966      4F525F57 
 5966      414B4555 
 5967              	.LASF164:
 5968 12e5 68656164 		.ascii	"header\000"
 5968      657200
 5969              	.LASF61:
 5970 12ec 4359424C 		.ascii	"CYBLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 5970      455F4556 
 5970      545F4741 
 5970      5454435F 
 5970      45584543 
 5971              	.LASF208:
 5972 130b 636F6D70 		.ascii	"compass_bias\000"
 5972      6173735F 
 5972      62696173 
 5972      00
 5973              	.LASF98:
 5974 1318 414E4452 		.ascii	"ANDROID_SENSOR_ORIENTATION\000"
 5974      4F49445F 
 5974      53454E53 
 5974      4F525F4F 
 5974      5249454E 
 5975              	.LASF170:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 138


 5976 1333 63757272 		.ascii	"currentIrqTimeUs\000"
 5976      656E7449 
 5976      72715469 
 5976      6D655573 
 5976      00
 5977              	.LASF149:
 5978 1344 6E65775F 		.ascii	"new_gyro\000"
 5978      6779726F 
 5978      00
 5979              	.LASF225:
 5980 134d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5980      4320342E 
 5980      392E3320 
 5980      32303135 
 5980      30333033 
 5981 1380 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5981      20726576 
 5981      6973696F 
 5981      6E203232 
 5981      31323230 
 5982 13b3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5982      66756E63 
 5982      74696F6E 
 5982      2D736563 
 5982      74696F6E 
 5983              	.LASF52:
 5984 13db 4359424C 		.ascii	"CYBLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 5984      455F4556 
 5984      545F4741 
 5984      5454435F 
 5984      46494E44 
 5985              	.LASF181:
 5986 1402 434F4D50 		.ascii	"COMPASS_ORIENTATION\000"
 5986      4153535F 
 5986      4F524945 
 5986      4E544154 
 5986      494F4E00 
 5987              	.LASF187:
 5988 1416 7261775F 		.ascii	"raw_gyro_data_was_set\000"
 5988      6779726F 
 5988      5F646174 
 5988      615F7761 
 5988      735F7365 
 5989              	.LASF169:
 5990 142c 6C617374 		.ascii	"lastIrqTimeUs\000"
 5990      49727154 
 5990      696D6555 
 5990      7300
 5991              	.LASF74:
 5992 143a 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 5992      455F4556 
 5992      545F4C32 
 5992      4341505F 
 5992      43424643 
 5993              	.LASF174:
 5994 145b 62696173 		.ascii	"bias_data\000"
 5994      5F646174 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 139


 5994      6100
 5995              	.LASF6:
 5996 1465 6C6F6E67 		.ascii	"long int\000"
 5996      20696E74 
 5996      00
 5997              	.LASF114:
 5998 146e 414E4452 		.ascii	"ANDROID_SENSOR_STEP_COUNTER\000"
 5998      4F49445F 
 5998      53454E53 
 5998      4F525F53 
 5998      5445505F 
 5999              	.LASF231:
 6000 148a 696E766E 		.ascii	"invn_perform_selftest\000"
 6000      5F706572 
 6000      666F726D 
 6000      5F73656C 
 6000      66746573 
 6001              	.LASF120:
 6002 14a0 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_ORIENTATION\000"
 6002      4F49445F 
 6002      53454E53 
 6002      4F525F57 
 6002      414B4555 
 6003              	.LASF229:
 6004 14c2 68616C5F 		.ascii	"hal_s_\000"
 6004      735F00
 6005              	.LASF70:
 6006 14c9 4359424C 		.ascii	"CYBLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 6006      455F4556 
 6006      545F4C32 
 6006      4341505F 
 6006      434F4E4E 
 6007              	.LASF41:
 6008 14ef 4359424C 		.ascii	"CYBLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 6008      455F4556 
 6008      545F4741 
 6008      505F454E 
 6008      48414E43 
 6009              	.LASF83:
 6010 1513 4359424C 		.ascii	"CYBLE_DIS_MANUFACTURER_NAME\000"
 6010      455F4449 
 6010      535F4D41 
 6010      4E554641 
 6010      43545552 
 6011              	.LASF151:
 6012 152f 72657375 		.ascii	"result\000"
 6012      6C7400
 6013              	.LASF46:
 6014 1536 4359424C 		.ascii	"CYBLE_EVT_GATT_DISCONNECT_IND\000"
 6014      455F4556 
 6014      545F4741 
 6014      54545F44 
 6014      4953434F 
 6015              	.LASF122:
 6016 1554 414E4452 		.ascii	"ANDROID_SENSOR_WAKEUP_LIGHT\000"
 6016      4F49445F 
 6016      53454E53 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccKOsaRR.s 			page 140


 6016      4F525F57 
 6016      414B4555 
 6017              	.LASF116:
 6018 1570 414E4452 		.ascii	"ANDROID_SENSOR_HEART_RATE\000"
 6018      4F49445F 
 6018      53454E53 
 6018      4F525F48 
 6018      45415254 
 6019              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
