ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:.\Generated_Source\PSoC4/ADC.c **** 
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  22:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:.\Generated_Source\PSoC4/ADC.c **** 
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  30:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u };
  34:.\Generated_Source\PSoC4/ADC.c **** 
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:.\Generated_Source\PSoC4/ADC.c **** *
  40:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  41:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:.\Generated_Source\PSoC4/ADC.c **** *
  45:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:.\Generated_Source\PSoC4/ADC.c **** *  None.
  47:.\Generated_Source\PSoC4/ADC.c **** *
  48:.\Generated_Source\PSoC4/ADC.c **** * Return:
  49:.\Generated_Source\PSoC4/ADC.c **** *  None.
  50:.\Generated_Source\PSoC4/ADC.c **** *
  51:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:.\Generated_Source\PSoC4/ADC.c **** *
  62:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:.\Generated_Source\PSoC4/ADC.c **** {
  65:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  67:.\Generated_Source\PSoC4/ADC.c ****     {
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  70:.\Generated_Source\PSoC4/ADC.c ****     }
  71:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  72:.\Generated_Source\PSoC4/ADC.c **** }
  73:.\Generated_Source\PSoC4/ADC.c **** 
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:.\Generated_Source\PSoC4/ADC.c **** *
  79:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  80:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:.\Generated_Source\PSoC4/ADC.c **** *
  84:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:.\Generated_Source\PSoC4/ADC.c **** *  None.
  86:.\Generated_Source\PSoC4/ADC.c **** *
  87:.\Generated_Source\PSoC4/ADC.c **** * Return:
  88:.\Generated_Source\PSoC4/ADC.c **** *  None.
  89:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:.\Generated_Source\PSoC4/ADC.c **** *
  93:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
  96:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:.\Generated_Source\PSoC4/ADC.c **** 
 100:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:.\Generated_Source\PSoC4/ADC.c ****         {
 103:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 4


 141:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:.\Generated_Source\PSoC4/ADC.c ****         };
 168:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:.\Generated_Source\PSoC4/ADC.c **** 
 170:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  32              		.loc 1 172 0
  33 0002 0F20     		mov	r0, #15
  34 0004 0321     		mov	r1, #3
  35 0006 FFF7FEFF 		bl	CyIntSetPriority
  36              	.LVL0:
 173:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  37              		.loc 1 173 0
  38 000a 0F20     		mov	r0, #15
  39 000c 1E49     		ldr	r1, .L5
  40 000e FFF7FEFF 		bl	CyIntSetVector
  41              	.LVL1:
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:.\Generated_Source\PSoC4/ADC.c **** 
 176:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  42              		.loc 1 177 0
  43 0012 0122     		mov	r2, #1
  44 0014 1D4B     		ldr	r3, .L5+4
  45 0016 1A60     		str	r2, [r3]
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:.\Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:.\Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
  46              		.loc 1 180 0
  47 0018 1D4B     		ldr	r3, .L5+8
  48 001a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 5


 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  49              		.loc 1 178 0
  50 001c 002B     		cmp	r3, #0
  51 001e 01DB     		blt	.L3
  52 0020 1C49     		ldr	r1, .L5+12
  53 0022 00E0     		b	.L2
  54              	.L3:
  55 0024 1C49     		ldr	r1, .L5+16
  56              	.L2:
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  57              		.loc 1 178 0 is_stmt 0 discriminator 4
  58 0026 1D4A     		ldr	r2, .L5+20
 181:.\Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 186:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 187:.\Generated_Source\PSoC4/ADC.c ****     
 188:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
  59              		.loc 1 190 0 is_stmt 1 discriminator 4
  60 0028 8020     		mov	r0, #128
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  61              		.loc 1 178 0 discriminator 4
  62 002a 1368     		ldr	r3, [r2]
  63              		.loc 1 190 0 discriminator 4
  64 002c 4002     		lsl	r0, r0, #9
 178:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
  65              		.loc 1 178 0 discriminator 4
  66 002e 0B43     		orr	r3, r1
  67 0030 1360     		str	r3, [r2]
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  68              		.loc 1 182 0 discriminator 4
  69 0032 1B4A     		ldr	r2, .L5+24
  70 0034 1B4B     		ldr	r3, .L5+28
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  71              		.loc 1 185 0 discriminator 4
  72 0036 1C49     		ldr	r1, .L5+32
 182:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  73              		.loc 1 182 0 discriminator 4
  74 0038 1A60     		str	r2, [r3]
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  75              		.loc 1 183 0 discriminator 4
  76 003a 1C4A     		ldr	r2, .L5+36
  77 003c 1C4B     		ldr	r3, .L5+40
 191:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:.\Generated_Source\PSoC4/ADC.c **** 
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 199:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 200:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 6


 201:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:.\Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 203:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:.\Generated_Source\PSoC4/ADC.c **** 
 205:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 207:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 208:.\Generated_Source\PSoC4/ADC.c ****     
 209:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:.\Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 214:.\Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:.\Generated_Source\PSoC4/ADC.c ****     #else
 216:.\Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:.\Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:.\Generated_Source\PSoC4/ADC.c ****         #else
 220:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:.\Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:.\Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:.\Generated_Source\PSoC4/ADC.c ****     
 226:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 227:.\Generated_Source\PSoC4/ADC.c **** 
 228:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:.\Generated_Source\PSoC4/ADC.c **** 
 232:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 233:.\Generated_Source\PSoC4/ADC.c ****     {
 234:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 235:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:.\Generated_Source\PSoC4/ADC.c ****         
 239:.\Generated_Source\PSoC4/ADC.c ****         
 240:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:.\Generated_Source\PSoC4/ADC.c ****         */
 244:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:.\Generated_Source\PSoC4/ADC.c **** 
 249:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:.\Generated_Source\PSoC4/ADC.c ****         {
 253:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 254:.\Generated_Source\PSoC4/ADC.c **** 
 255:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 256:.\Generated_Source\PSoC4/ADC.c ****             {
 257:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 7


 258:.\Generated_Source\PSoC4/ADC.c ****             }
 259:.\Generated_Source\PSoC4/ADC.c **** 
 260:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 261:.\Generated_Source\PSoC4/ADC.c ****             {
 262:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 263:.\Generated_Source\PSoC4/ADC.c ****             }
 264:.\Generated_Source\PSoC4/ADC.c ****         }
 265:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:.\Generated_Source\PSoC4/ADC.c ****             else
 267:.\Generated_Source\PSoC4/ADC.c ****             {
 268:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:.\Generated_Source\PSoC4/ADC.c **** 
 270:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:.\Generated_Source\PSoC4/ADC.c ****                 {
 272:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:.\Generated_Source\PSoC4/ADC.c ****                 }
 274:.\Generated_Source\PSoC4/ADC.c **** 
 275:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:.\Generated_Source\PSoC4/ADC.c ****                 {
 277:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:.\Generated_Source\PSoC4/ADC.c ****                 }
 279:.\Generated_Source\PSoC4/ADC.c ****             }
 280:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:.\Generated_Source\PSoC4/ADC.c **** 
 282:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 283:.\Generated_Source\PSoC4/ADC.c ****         {
 284:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 285:.\Generated_Source\PSoC4/ADC.c ****         }
 286:.\Generated_Source\PSoC4/ADC.c ****         else
 287:.\Generated_Source\PSoC4/ADC.c ****         {
 288:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 289:.\Generated_Source\PSoC4/ADC.c ****         }
 290:.\Generated_Source\PSoC4/ADC.c **** 
 291:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 292:.\Generated_Source\PSoC4/ADC.c ****         {
 293:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:.\Generated_Source\PSoC4/ADC.c ****             #else
 298:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 299:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:.\Generated_Source\PSoC4/ADC.c ****         }
 301:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:.\Generated_Source\PSoC4/ADC.c ****         {
 303:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:.\Generated_Source\PSoC4/ADC.c ****             #else
 307:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:.\Generated_Source\PSoC4/ADC.c ****         }
 310:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 312:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 313:.\Generated_Source\PSoC4/ADC.c ****     }
 314:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 8


  78              		.loc 1 314 0 discriminator 4
  79              		@ sp needed
 183:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  80              		.loc 1 183 0 discriminator 4
  81 003e 1A60     		str	r2, [r3]
 184:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  82              		.loc 1 184 0 discriminator 4
  83 0040 0022     		mov	r2, #0
  84 0042 1C4B     		ldr	r3, .L5+44
  85 0044 1A60     		str	r2, [r3]
 185:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  86              		.loc 1 185 0 discriminator 4
  87 0046 1C4B     		ldr	r3, .L5+48
  88 0048 0B60     		str	r3, [r1]
 186:.\Generated_Source\PSoC4/ADC.c ****     
  89              		.loc 1 186 0 discriminator 4
  90 004a 1C49     		ldr	r1, .L5+52
  91 004c 0B60     		str	r3, [r1]
 190:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
  92              		.loc 1 190 0 discriminator 4
  93 004e 1C49     		ldr	r1, .L5+56
  94 0050 0B68     		ldr	r3, [r1]
  95 0052 0343     		orr	r3, r0
  96 0054 0B60     		str	r3, [r1]
 199:.\Generated_Source\PSoC4/ADC.c **** 
  97              		.loc 1 199 0 discriminator 4
  98 0056 0121     		mov	r1, #1
 197:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  99              		.loc 1 197 0 discriminator 4
 100 0058 1A4B     		ldr	r3, .L5+60
 101 005a 1A60     		str	r2, [r3]
 198:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 102              		.loc 1 198 0 discriminator 4
 103 005c 1A4B     		ldr	r3, .L5+64
 104 005e 1A60     		str	r2, [r3]
 199:.\Generated_Source\PSoC4/ADC.c **** 
 105              		.loc 1 199 0 discriminator 4
 106 0060 1A4B     		ldr	r3, .L5+68
 107 0062 1960     		str	r1, [r3]
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 108              		.loc 1 206 0 discriminator 4
 109 0064 1A49     		ldr	r1, .L5+72
 221:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 110              		.loc 1 221 0 discriminator 4
 111 0066 1B4B     		ldr	r3, .L5+76
 206:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 112              		.loc 1 206 0 discriminator 4
 113 0068 0868     		ldr	r0, [r1]
 114              	.LVL2:
 221:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 115              		.loc 1 221 0 discriminator 4
 116 006a 0340     		and	r3, r0
 117 006c 8020     		mov	r0, #128
 118              	.LVL3:
 119 006e 8005     		lsl	r0, r0, #22
 120 0070 0343     		orr	r3, r0
 121              	.LVL4:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 9


 226:.\Generated_Source\PSoC4/ADC.c **** 
 122              		.loc 1 226 0 discriminator 4
 123 0072 0B60     		str	r3, [r1]
 124              	.LVL5:
 253:.\Generated_Source\PSoC4/ADC.c **** 
 125              		.loc 1 253 0 discriminator 4
 126 0074 8021     		mov	r1, #128
 127 0076 184B     		ldr	r3, .L5+80
 128 0078 C900     		lsl	r1, r1, #3
 129 007a 1960     		str	r1, [r3]
 130              	.LVL6:
 298:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 131              		.loc 1 298 0 discriminator 4
 132 007c 174B     		ldr	r3, .L5+84
 133 007e 1A80     		strh	r2, [r3]
 311:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 134              		.loc 1 311 0 discriminator 4
 135 0080 174A     		ldr	r2, .L5+88
 136 0082 184B     		ldr	r3, .L5+92
 137 0084 1A60     		str	r2, [r3]
 138              	.LVL7:
 139              		.loc 1 314 0 discriminator 4
 140 0086 08BD     		pop	{r3, pc}
 141              	.L6:
 142              		.align	2
 143              	.L5:
 144 0088 00000000 		.word	ADC_ISR
 145 008c 20003A40 		.word	1077542944
 146 0090 80033A40 		.word	1077543808
 147 0094 70020053 		.word	1392509552
 148 0098 70021053 		.word	1393558128
 149 009c 00003A40 		.word	1077542912
 150 00a0 C4000A80 		.word	-2146828092
 151 00a4 04003A40 		.word	1077542916
 152 00a8 10003A40 		.word	1077542928
 153 00ac 0000FF07 		.word	134152192
 154 00b0 18003A40 		.word	1077542936
 155 00b4 1C003A40 		.word	1077542940
 156 00b8 04000400 		.word	262148
 157 00bc 14003A40 		.word	1077542932
 158 00c0 00033A40 		.word	1077543680
 159 00c4 28023A40 		.word	1077543464
 160 00c8 38023A40 		.word	1077543480
 161 00cc 18023A40 		.word	1077543448
 162 00d0 30003A40 		.word	1077542960
 163 00d4 FEFFFFDF 		.word	-536870914
 164 00d8 80003A40 		.word	1077543040
 165 00dc 00000000 		.word	ADC_offset
 166 00e0 3E180000 		.word	6206
 167 00e4 00000000 		.word	ADC_countsPer10Volt
 168              		.cfi_endproc
 169              	.LFE3:
 170              		.size	ADC_Init, .-ADC_Init
 171              		.section	.text.ADC_Enable,"ax",%progbits
 172              		.align	1
 173              		.global	ADC_Enable
 174              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 10


 175              		.thumb_func
 176              		.type	ADC_Enable, %function
 177              	ADC_Enable:
 178              	.LFB4:
 315:.\Generated_Source\PSoC4/ADC.c **** 
 316:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:.\Generated_Source\PSoC4/ADC.c **** *
 320:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 321:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:.\Generated_Source\PSoC4/ADC.c **** *
 323:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:.\Generated_Source\PSoC4/ADC.c **** *  None.
 325:.\Generated_Source\PSoC4/ADC.c **** *
 326:.\Generated_Source\PSoC4/ADC.c **** * Return:
 327:.\Generated_Source\PSoC4/ADC.c **** *  None.
 328:.\Generated_Source\PSoC4/ADC.c **** *
 329:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:.\Generated_Source\PSoC4/ADC.c **** {
 179              		.loc 1 331 0
 180              		.cfi_startproc
 181 0000 08B5     		push	{r3, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 3, -8
 184              		.cfi_offset 14, -4
 332:.\Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 185              		.loc 1 332 0
 186 0002 084B     		ldr	r3, .L10
 187 0004 1A68     		ldr	r2, [r3]
 188 0006 002A     		cmp	r2, #0
 189 0008 0BDB     		blt	.L7
 190              	.L9:
 191              	.LBB4:
 192              	.LBB5:
 333:.\Generated_Source\PSoC4/ADC.c ****     {
 334:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 193              		.loc 1 336 0
 194 000a 074A     		ldr	r2, .L10+4
 195 000c 1268     		ldr	r2, [r2]
 196 000e 002A     		cmp	r2, #0
 197 0010 FBDB     		blt	.L9
 337:.\Generated_Source\PSoC4/ADC.c ****             {
 338:.\Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:.\Generated_Source\PSoC4/ADC.c ****             }
 340:.\Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:.\Generated_Source\PSoC4/ADC.c ****         
 342:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 198              		.loc 1 342 0
 199 0012 8021     		mov	r1, #128
 200 0014 1A68     		ldr	r2, [r3]
 201 0016 0906     		lsl	r1, r1, #24
 202 0018 0A43     		orr	r2, r1
 203 001a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 11


 343:.\Generated_Source\PSoC4/ADC.c ****         
 344:.\Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:.\Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 204              		.loc 1 345 0
 205 001c 0A20     		mov	r0, #10
 206 001e FFF7FEFF 		bl	CyDelayUs
 207              	.LVL8:
 208              	.L7:
 209              	.LBE5:
 210              	.LBE4:
 346:.\Generated_Source\PSoC4/ADC.c ****     }
 347:.\Generated_Source\PSoC4/ADC.c **** }
 211              		.loc 1 347 0
 212              		@ sp needed
 213 0022 08BD     		pop	{r3, pc}
 214              	.L11:
 215              		.align	2
 216              	.L10:
 217 0024 00003A40 		.word	1077542912
 218 0028 08023A40 		.word	1077543432
 219              		.cfi_endproc
 220              	.LFE4:
 221              		.size	ADC_Enable, .-ADC_Enable
 222              		.section	.text.ADC_Start,"ax",%progbits
 223              		.align	1
 224              		.global	ADC_Start
 225              		.code	16
 226              		.thumb_func
 227              		.type	ADC_Start, %function
 228              	ADC_Start:
 229              	.LFB2:
  64:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
 230              		.loc 1 64 0
 231              		.cfi_startproc
 232 0000 10B5     		push	{r4, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 4, -8
 235              		.cfi_offset 14, -4
  66:.\Generated_Source\PSoC4/ADC.c ****     {
 236              		.loc 1 66 0
 237 0002 054C     		ldr	r4, .L14
 238 0004 2378     		ldrb	r3, [r4]
 239 0006 002B     		cmp	r3, #0
 240 0008 03D1     		bne	.L13
  68:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 241              		.loc 1 68 0
 242 000a FFF7FEFF 		bl	ADC_Init
 243              	.LVL9:
  69:.\Generated_Source\PSoC4/ADC.c ****     }
 244              		.loc 1 69 0
 245 000e 0123     		mov	r3, #1
 246 0010 2370     		strb	r3, [r4]
 247              	.L13:
  71:.\Generated_Source\PSoC4/ADC.c **** }
 248              		.loc 1 71 0
 249 0012 FFF7FEFF 		bl	ADC_Enable
 250              	.LVL10:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 12


  72:.\Generated_Source\PSoC4/ADC.c **** 
 251              		.loc 1 72 0
 252              		@ sp needed
 253 0016 10BD     		pop	{r4, pc}
 254              	.L15:
 255              		.align	2
 256              	.L14:
 257 0018 00000000 		.word	.LANCHOR0
 258              		.cfi_endproc
 259              	.LFE2:
 260              		.size	ADC_Start, .-ADC_Start
 261              		.section	.text.ADC_Stop,"ax",%progbits
 262              		.align	1
 263              		.global	ADC_Stop
 264              		.code	16
 265              		.thumb_func
 266              		.type	ADC_Stop, %function
 267              	ADC_Stop:
 268              	.LFB5:
 348:.\Generated_Source\PSoC4/ADC.c **** 
 349:.\Generated_Source\PSoC4/ADC.c **** 
 350:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/ADC.c **** *
 354:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 355:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 357:.\Generated_Source\PSoC4/ADC.c **** *
 358:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:.\Generated_Source\PSoC4/ADC.c **** *  None.
 360:.\Generated_Source\PSoC4/ADC.c **** *
 361:.\Generated_Source\PSoC4/ADC.c **** * Return:
 362:.\Generated_Source\PSoC4/ADC.c **** *  None.
 363:.\Generated_Source\PSoC4/ADC.c **** *
 364:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:.\Generated_Source\PSoC4/ADC.c **** {
 269              		.loc 1 366 0
 270              		.cfi_startproc
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 271              		.loc 1 367 0
 272 0000 024A     		ldr	r2, .L17
 368:.\Generated_Source\PSoC4/ADC.c **** }
 273              		.loc 1 368 0
 274              		@ sp needed
 367:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 275              		.loc 1 367 0
 276 0002 1368     		ldr	r3, [r2]
 277 0004 5B00     		lsl	r3, r3, #1
 278 0006 5B08     		lsr	r3, r3, #1
 279 0008 1360     		str	r3, [r2]
 280              		.loc 1 368 0
 281 000a 7047     		bx	lr
 282              	.L18:
 283              		.align	2
 284              	.L17:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 13


 285 000c 00003A40 		.word	1077542912
 286              		.cfi_endproc
 287              	.LFE5:
 288              		.size	ADC_Stop, .-ADC_Stop
 289              		.section	.text.ADC_StartConvert,"ax",%progbits
 290              		.align	1
 291              		.global	ADC_StartConvert
 292              		.code	16
 293              		.thumb_func
 294              		.type	ADC_StartConvert, %function
 295              	ADC_StartConvert:
 296              	.LFB6:
 369:.\Generated_Source\PSoC4/ADC.c **** 
 370:.\Generated_Source\PSoC4/ADC.c **** 
 371:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:.\Generated_Source\PSoC4/ADC.c **** *
 375:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 376:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 377:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:.\Generated_Source\PSoC4/ADC.c **** *  None.
 386:.\Generated_Source\PSoC4/ADC.c **** *
 387:.\Generated_Source\PSoC4/ADC.c **** * Return:
 388:.\Generated_Source\PSoC4/ADC.c **** *  None.
 389:.\Generated_Source\PSoC4/ADC.c **** *
 390:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:.\Generated_Source\PSoC4/ADC.c **** {
 297              		.loc 1 392 0
 298              		.cfi_startproc
 393:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 395:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 299              		.loc 1 396 0
 300 0000 0122     		mov	r2, #1
 301 0002 014B     		ldr	r3, .L20
 397:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:.\Generated_Source\PSoC4/ADC.c **** 
 399:.\Generated_Source\PSoC4/ADC.c **** }
 302              		.loc 1 399 0
 303              		@ sp needed
 396:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 304              		.loc 1 396 0
 305 0004 1A60     		str	r2, [r3]
 306              		.loc 1 399 0
 307 0006 7047     		bx	lr
 308              	.L21:
 309              		.align	2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 14


 310              	.L20:
 311 0008 24003A40 		.word	1077542948
 312              		.cfi_endproc
 313              	.LFE6:
 314              		.size	ADC_StartConvert, .-ADC_StartConvert
 315              		.section	.text.ADC_StopConvert,"ax",%progbits
 316              		.align	1
 317              		.global	ADC_StopConvert
 318              		.code	16
 319              		.thumb_func
 320              		.type	ADC_StopConvert, %function
 321              	ADC_StopConvert:
 322              	.LFB7:
 400:.\Generated_Source\PSoC4/ADC.c **** 
 401:.\Generated_Source\PSoC4/ADC.c **** 
 402:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:.\Generated_Source\PSoC4/ADC.c **** *
 406:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 407:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:.\Generated_Source\PSoC4/ADC.c **** *
 409:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:.\Generated_Source\PSoC4/ADC.c **** *  None.
 411:.\Generated_Source\PSoC4/ADC.c **** *
 412:.\Generated_Source\PSoC4/ADC.c **** * Return:
 413:.\Generated_Source\PSoC4/ADC.c **** *  None.
 414:.\Generated_Source\PSoC4/ADC.c **** *
 415:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:.\Generated_Source\PSoC4/ADC.c **** {
 323              		.loc 1 417 0
 324              		.cfi_startproc
 418:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 420:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:.\Generated_Source\PSoC4/ADC.c **** }
 325              		.loc 1 421 0
 326              		@ sp needed
 327 0000 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE7:
 330              		.size	ADC_StopConvert, .-ADC_StopConvert
 331              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 332              		.align	1
 333              		.global	ADC_IsEndConversion
 334              		.code	16
 335              		.thumb_func
 336              		.type	ADC_IsEndConversion, %function
 337              	ADC_IsEndConversion:
 338              	.LFB8:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 15


 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 436:.\Generated_Source\PSoC4/ADC.c **** *
 437:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:.\Generated_Source\PSoC4/ADC.c **** *
 445:.\Generated_Source\PSoC4/ADC.c **** * Return:
 446:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:.\Generated_Source\PSoC4/ADC.c **** *
 449:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:.\Generated_Source\PSoC4/ADC.c **** {
 339              		.loc 1 451 0
 340              		.cfi_startproc
 341              	.LVL11:
 342 0000 10B5     		push	{r4, lr}
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 4, -8
 345              		.cfi_offset 14, -4
 346              		.loc 1 451 0
 347 0002 041C     		mov	r4, r0
 452:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 348              		.loc 1 452 0
 349 0004 0020     		mov	r0, #0
 350              	.LVL12:
 453:.\Generated_Source\PSoC4/ADC.c **** 
 454:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 351              		.loc 1 454 0
 352 0006 A307     		lsl	r3, r4, #30
 353 0008 0AD0     		beq	.L28
 354              	.LVL13:
 355              	.L26:
 455:.\Generated_Source\PSoC4/ADC.c ****     {
 456:.\Generated_Source\PSoC4/ADC.c ****         do
 457:.\Generated_Source\PSoC4/ADC.c ****         {
 458:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 356              		.loc 1 458 0 discriminator 2
 357 000a 0122     		mov	r2, #1
 358 000c 0549     		ldr	r1, .L30
 359 000e 0B68     		ldr	r3, [r1]
 360 0010 1340     		and	r3, r2
 361 0012 181E     		sub	r0, r3, #0
 362              	.LVL14:
 459:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 363              		.loc 1 459 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 16


 364 0014 02D1     		bne	.L25
 365              		.loc 1 459 0 is_stmt 0 discriminator 1
 366 0016 A307     		lsl	r3, r4, #30
 367 0018 F7D4     		bmi	.L26
 368 001a 01E0     		b	.L28
 369              	.L25:
 460:.\Generated_Source\PSoC4/ADC.c **** 
 461:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 462:.\Generated_Source\PSoC4/ADC.c ****         {
 463:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 370              		.loc 1 464 0 is_stmt 1
 371 001c 101C     		mov	r0, r2
 372              	.LVL15:
 373 001e 0A60     		str	r2, [r1]
 374              	.LVL16:
 375              	.L28:
 465:.\Generated_Source\PSoC4/ADC.c ****         }
 466:.\Generated_Source\PSoC4/ADC.c ****     }
 467:.\Generated_Source\PSoC4/ADC.c **** 
 468:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:.\Generated_Source\PSoC4/ADC.c ****         {
 471:.\Generated_Source\PSoC4/ADC.c ****             do
 472:.\Generated_Source\PSoC4/ADC.c ****             {
 473:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:.\Generated_Source\PSoC4/ADC.c **** 
 477:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:.\Generated_Source\PSoC4/ADC.c ****             {
 479:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:.\Generated_Source\PSoC4/ADC.c ****             }
 482:.\Generated_Source\PSoC4/ADC.c ****         }
 483:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:.\Generated_Source\PSoC4/ADC.c **** 
 485:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 486:.\Generated_Source\PSoC4/ADC.c **** }
 376              		.loc 1 486 0
 377              		@ sp needed
 378              	.LVL17:
 379 0020 10BD     		pop	{r4, pc}
 380              	.L31:
 381 0022 C046     		.align	2
 382              	.L30:
 383 0024 10023A40 		.word	1077543440
 384              		.cfi_endproc
 385              	.LFE8:
 386              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 387              		.section	.text.ADC_GetResult16,"ax",%progbits
 388              		.align	1
 389              		.global	ADC_GetResult16
 390              		.code	16
 391              		.thumb_func
 392              		.type	ADC_GetResult16, %function
 393              	ADC_GetResult16:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 17


 394              	.LFB9:
 487:.\Generated_Source\PSoC4/ADC.c **** 
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:.\Generated_Source\PSoC4/ADC.c **** *
 493:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 494:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:.\Generated_Source\PSoC4/ADC.c **** *
 496:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:.\Generated_Source\PSoC4/ADC.c **** *
 500:.\Generated_Source\PSoC4/ADC.c **** * Return:
 501:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:.\Generated_Source\PSoC4/ADC.c **** *
 503:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:.\Generated_Source\PSoC4/ADC.c **** {
 395              		.loc 1 505 0
 396              		.cfi_startproc
 397              	.LVL18:
 398 0000 08B5     		push	{r3, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 506:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:.\Generated_Source\PSoC4/ADC.c **** 
 508:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 402              		.loc 1 509 0
 403 0002 0028     		cmp	r0, #0
 404 0004 04D0     		beq	.L33
 405              		.loc 1 509 0 is_stmt 0 discriminator 1
 406 0006 0020     		mov	r0, #0
 407              	.LVL19:
 408 0008 FFF7FEFF 		bl	CyHalt
 409              	.LVL20:
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 512:.\Generated_Source\PSoC4/ADC.c ****     {
 513:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 514:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:.\Generated_Source\PSoC4/ADC.c ****     }
 516:.\Generated_Source\PSoC4/ADC.c ****     else
 517:.\Generated_Source\PSoC4/ADC.c ****     {
 518:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:.\Generated_Source\PSoC4/ADC.c ****         #else
 521:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 410              		.loc 1 521 0 is_stmt 1 discriminator 1
 411 000c 0020     		mov	r0, #0
 412 000e 02E0     		b	.L34
 413              	.LVL21:
 414              	.L33:
 513:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 18


 415              		.loc 1 513 0
 416 0010 024B     		ldr	r3, .L36
 417 0012 1868     		ldr	r0, [r3]
 418              	.LVL22:
 419 0014 80B2     		uxth	r0, r0
 420              	.LVL23:
 421              	.L34:
 522:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:.\Generated_Source\PSoC4/ADC.c ****     }
 524:.\Generated_Source\PSoC4/ADC.c **** 
 525:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 422              		.loc 1 525 0
 423 0016 00B2     		sxth	r0, r0
 424              	.LVL24:
 526:.\Generated_Source\PSoC4/ADC.c **** }
 425              		.loc 1 526 0
 426              		@ sp needed
 427 0018 08BD     		pop	{r3, pc}
 428              	.L37:
 429 001a C046     		.align	2
 430              	.L36:
 431 001c 80013A40 		.word	1077543296
 432              		.cfi_endproc
 433              	.LFE9:
 434              		.size	ADC_GetResult16, .-ADC_GetResult16
 435              		.section	.text.ADC_SetChanMask,"ax",%progbits
 436              		.align	1
 437              		.global	ADC_SetChanMask
 438              		.code	16
 439              		.thumb_func
 440              		.type	ADC_SetChanMask, %function
 441              	ADC_SetChanMask:
 442              	.LFB10:
 527:.\Generated_Source\PSoC4/ADC.c **** 
 528:.\Generated_Source\PSoC4/ADC.c **** 
 529:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:.\Generated_Source\PSoC4/ADC.c **** *
 533:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 534:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:.\Generated_Source\PSoC4/ADC.c **** *
 536:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:.\Generated_Source\PSoC4/ADC.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 19


 443              		.loc 1 550 0
 444              		.cfi_startproc
 445              	.LVL25:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 446              		.loc 1 551 0
 447 0000 0123     		mov	r3, #1
 448 0002 1840     		and	r0, r3
 449              	.LVL26:
 450 0004 014B     		ldr	r3, .L39
 552:.\Generated_Source\PSoC4/ADC.c **** }
 451              		.loc 1 552 0
 452              		@ sp needed
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 453              		.loc 1 551 0
 454 0006 1860     		str	r0, [r3]
 455              		.loc 1 552 0
 456 0008 7047     		bx	lr
 457              	.L40:
 458 000a C046     		.align	2
 459              	.L39:
 460 000c 20003A40 		.word	1077542944
 461              		.cfi_endproc
 462              	.LFE10:
 463              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 464              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 465              		.align	1
 466              		.global	ADC_SetLowLimit
 467              		.code	16
 468              		.thumb_func
 469              		.type	ADC_SetLowLimit, %function
 470              	ADC_SetLowLimit:
 471              	.LFB11:
 553:.\Generated_Source\PSoC4/ADC.c **** 
 554:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** 
 557:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:.\Generated_Source\PSoC4/ADC.c ****     *
 561:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:.\Generated_Source\PSoC4/ADC.c ****     *
 564:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 566:.\Generated_Source\PSoC4/ADC.c ****     *
 567:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 568:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 569:.\Generated_Source\PSoC4/ADC.c ****     *
 570:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:.\Generated_Source\PSoC4/ADC.c ****     {
 573:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:.\Generated_Source\PSoC4/ADC.c ****     }
 575:.\Generated_Source\PSoC4/ADC.c **** 
 576:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 20


 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:.\Generated_Source\PSoC4/ADC.c **** *
 589:.\Generated_Source\PSoC4/ADC.c **** * Return:
 590:.\Generated_Source\PSoC4/ADC.c **** *  None.
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:.\Generated_Source\PSoC4/ADC.c **** {
 472              		.loc 1 594 0
 473              		.cfi_startproc
 474              	.LVL27:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 475              		.loc 1 595 0
 476 0000 044A     		ldr	r2, .L42
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 477              		.loc 1 596 0
 478 0002 80B2     		uxth	r0, r0
 479              	.LVL28:
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 480              		.loc 1 595 0
 481 0004 1368     		ldr	r3, [r2]
 597:.\Generated_Source\PSoC4/ADC.c **** }
 482              		.loc 1 597 0
 483              		@ sp needed
 595:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 484              		.loc 1 595 0
 485 0006 1B0C     		lsr	r3, r3, #16
 486 0008 1B04     		lsl	r3, r3, #16
 487 000a 1360     		str	r3, [r2]
 596:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 488              		.loc 1 596 0
 489 000c 1368     		ldr	r3, [r2]
 490 000e 1843     		orr	r0, r3
 491 0010 1060     		str	r0, [r2]
 492              		.loc 1 597 0
 493 0012 7047     		bx	lr
 494              	.L43:
 495              		.align	2
 496              	.L42:
 497 0014 18003A40 		.word	1077542936
 498              		.cfi_endproc
 499              	.LFE11:
 500              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 501              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 502              		.align	1
 503              		.global	ADC_SetHighLimit
 504              		.code	16
 505              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 21


 506              		.type	ADC_SetHighLimit, %function
 507              	ADC_SetHighLimit:
 508              	.LFB12:
 598:.\Generated_Source\PSoC4/ADC.c **** 
 599:.\Generated_Source\PSoC4/ADC.c **** 
 600:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** *
 604:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 605:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:.\Generated_Source\PSoC4/ADC.c **** *
 607:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:.\Generated_Source\PSoC4/ADC.c **** *
 610:.\Generated_Source\PSoC4/ADC.c **** * Return:
 611:.\Generated_Source\PSoC4/ADC.c **** *  None.
 612:.\Generated_Source\PSoC4/ADC.c **** *
 613:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:.\Generated_Source\PSoC4/ADC.c **** {
 509              		.loc 1 615 0
 510              		.cfi_startproc
 511              	.LVL29:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 512              		.loc 1 616 0
 513 0000 044B     		ldr	r3, .L45
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 514              		.loc 1 617 0
 515 0002 0004     		lsl	r0, r0, #16
 516              	.LVL30:
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 517              		.loc 1 616 0
 518 0004 1A68     		ldr	r2, [r3]
 618:.\Generated_Source\PSoC4/ADC.c **** }
 519              		.loc 1 618 0
 520              		@ sp needed
 616:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 521              		.loc 1 616 0
 522 0006 92B2     		uxth	r2, r2
 523 0008 1A60     		str	r2, [r3]
 617:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 524              		.loc 1 617 0
 525 000a 1A68     		ldr	r2, [r3]
 526 000c 1043     		orr	r0, r2
 527 000e 1860     		str	r0, [r3]
 528              		.loc 1 618 0
 529 0010 7047     		bx	lr
 530              	.L46:
 531 0012 C046     		.align	2
 532              	.L45:
 533 0014 18003A40 		.word	1077542936
 534              		.cfi_endproc
 535              	.LFE12:
 536              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 537              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 538              		.align	1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 22


 539              		.global	ADC_SetLimitMask
 540              		.code	16
 541              		.thumb_func
 542              		.type	ADC_SetLimitMask, %function
 543              	ADC_SetLimitMask:
 544              	.LFB13:
 619:.\Generated_Source\PSoC4/ADC.c **** 
 620:.\Generated_Source\PSoC4/ADC.c **** 
 621:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/ADC.c **** *
 625:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 626:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:.\Generated_Source\PSoC4/ADC.c **** *
 628:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:.\Generated_Source\PSoC4/ADC.c **** *
 634:.\Generated_Source\PSoC4/ADC.c **** * Return:
 635:.\Generated_Source\PSoC4/ADC.c **** *  None.
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:.\Generated_Source\PSoC4/ADC.c **** {
 545              		.loc 1 639 0
 546              		.cfi_startproc
 547              	.LVL31:
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 548              		.loc 1 640 0
 549 0000 0123     		mov	r3, #1
 550 0002 1840     		and	r0, r3
 551              	.LVL32:
 552 0004 014B     		ldr	r3, .L48
 641:.\Generated_Source\PSoC4/ADC.c **** }
 553              		.loc 1 641 0
 554              		@ sp needed
 640:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 555              		.loc 1 640 0
 556 0006 1860     		str	r0, [r3]
 557              		.loc 1 641 0
 558 0008 7047     		bx	lr
 559              	.L49:
 560 000a C046     		.align	2
 561              	.L48:
 562 000c 38023A40 		.word	1077543480
 563              		.cfi_endproc
 564              	.LFE13:
 565              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 566              		.section	.text.ADC_SetSatMask,"ax",%progbits
 567              		.align	1
 568              		.global	ADC_SetSatMask
 569              		.code	16
 570              		.thumb_func
 571              		.type	ADC_SetSatMask, %function
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 23


 572              	ADC_SetSatMask:
 573              	.LFB14:
 642:.\Generated_Source\PSoC4/ADC.c **** 
 643:.\Generated_Source\PSoC4/ADC.c **** 
 644:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:.\Generated_Source\PSoC4/ADC.c **** *
 648:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 649:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:.\Generated_Source\PSoC4/ADC.c **** *
 651:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** * Return:
 658:.\Generated_Source\PSoC4/ADC.c **** *  None.
 659:.\Generated_Source\PSoC4/ADC.c **** *
 660:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:.\Generated_Source\PSoC4/ADC.c **** {
 574              		.loc 1 662 0
 575              		.cfi_startproc
 576              	.LVL33:
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 577              		.loc 1 663 0
 578 0000 0123     		mov	r3, #1
 579 0002 1840     		and	r0, r3
 580              	.LVL34:
 581 0004 014B     		ldr	r3, .L51
 664:.\Generated_Source\PSoC4/ADC.c **** }
 582              		.loc 1 664 0
 583              		@ sp needed
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 584              		.loc 1 663 0
 585 0006 1860     		str	r0, [r3]
 586              		.loc 1 664 0
 587 0008 7047     		bx	lr
 588              	.L52:
 589 000a C046     		.align	2
 590              	.L51:
 591 000c 28023A40 		.word	1077543464
 592              		.cfi_endproc
 593              	.LFE14:
 594              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 595              		.section	.text.ADC_SetOffset,"ax",%progbits
 596              		.align	1
 597              		.global	ADC_SetOffset
 598              		.code	16
 599              		.thumb_func
 600              		.type	ADC_SetOffset, %function
 601              	ADC_SetOffset:
 602              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 24


 667:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:.\Generated_Source\PSoC4/ADC.c **** *
 671:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 672:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:.\Generated_Source\PSoC4/ADC.c **** *
 677:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:.\Generated_Source\PSoC4/ADC.c **** *
 682:.\Generated_Source\PSoC4/ADC.c **** * Return:
 683:.\Generated_Source\PSoC4/ADC.c **** *  None.
 684:.\Generated_Source\PSoC4/ADC.c **** *
 685:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:.\Generated_Source\PSoC4/ADC.c **** *
 688:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:.\Generated_Source\PSoC4/ADC.c **** {
 603              		.loc 1 690 0
 604              		.cfi_startproc
 605              	.LVL35:
 606 0000 38B5     		push	{r3, r4, r5, lr}
 607              		.cfi_def_cfa_offset 16
 608              		.cfi_offset 3, -16
 609              		.cfi_offset 4, -12
 610              		.cfi_offset 5, -8
 611              		.cfi_offset 14, -4
 612              		.loc 1 690 0
 613 0002 041C     		mov	r4, r0
 614 0004 0D1C     		mov	r5, r1
 691:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 615              		.loc 1 692 0
 616 0006 0028     		cmp	r0, #0
 617 0008 02D0     		beq	.L54
 618              		.loc 1 692 0 is_stmt 0 discriminator 1
 619 000a 0020     		mov	r0, #0
 620              	.LVL36:
 621 000c FFF7FEFF 		bl	CyHalt
 622              	.LVL37:
 623              	.L54:
 693:.\Generated_Source\PSoC4/ADC.c **** 
 694:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 624              		.loc 1 694 0 is_stmt 1
 625 0010 014B     		ldr	r3, .L58
 626 0012 6400     		lsl	r4, r4, #1
 627              	.LVL38:
 628 0014 E552     		strh	r5, [r4, r3]
 695:.\Generated_Source\PSoC4/ADC.c **** }
 629              		.loc 1 695 0
 630              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 25


 631 0016 38BD     		pop	{r3, r4, r5, pc}
 632              	.L59:
 633              		.align	2
 634              	.L58:
 635 0018 00000000 		.word	ADC_offset
 636              		.cfi_endproc
 637              	.LFE15:
 638              		.size	ADC_SetOffset, .-ADC_SetOffset
 639              		.section	.text.ADC_SetGain,"ax",%progbits
 640              		.align	1
 641              		.global	ADC_SetGain
 642              		.code	16
 643              		.thumb_func
 644              		.type	ADC_SetGain, %function
 645              	ADC_SetGain:
 646              	.LFB16:
 696:.\Generated_Source\PSoC4/ADC.c **** 
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:.\Generated_Source\PSoC4/ADC.c **** *
 702:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 703:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:.\Generated_Source\PSoC4/ADC.c **** *
 711:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:.\Generated_Source\PSoC4/ADC.c **** *
 715:.\Generated_Source\PSoC4/ADC.c **** * Return:
 716:.\Generated_Source\PSoC4/ADC.c **** *  None.
 717:.\Generated_Source\PSoC4/ADC.c **** *
 718:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:.\Generated_Source\PSoC4/ADC.c **** *
 722:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:.\Generated_Source\PSoC4/ADC.c **** {
 647              		.loc 1 724 0
 648              		.cfi_startproc
 649              	.LVL39:
 650 0000 38B5     		push	{r3, r4, r5, lr}
 651              		.cfi_def_cfa_offset 16
 652              		.cfi_offset 3, -16
 653              		.cfi_offset 4, -12
 654              		.cfi_offset 5, -8
 655              		.cfi_offset 14, -4
 656              		.loc 1 724 0
 657 0002 041C     		mov	r4, r0
 658 0004 0D1C     		mov	r5, r1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 26


 725:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 659              		.loc 1 726 0
 660 0006 0028     		cmp	r0, #0
 661 0008 02D0     		beq	.L61
 662              		.loc 1 726 0 is_stmt 0 discriminator 1
 663 000a 0020     		mov	r0, #0
 664              	.LVL40:
 665 000c FFF7FEFF 		bl	CyHalt
 666              	.LVL41:
 667              	.L61:
 727:.\Generated_Source\PSoC4/ADC.c **** 
 728:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 668              		.loc 1 728 0 is_stmt 1
 669 0010 014B     		ldr	r3, .L65
 670 0012 A400     		lsl	r4, r4, #2
 671              	.LVL42:
 672 0014 E550     		str	r5, [r4, r3]
 729:.\Generated_Source\PSoC4/ADC.c **** }
 673              		.loc 1 729 0
 674              		@ sp needed
 675              	.LVL43:
 676 0016 38BD     		pop	{r3, r4, r5, pc}
 677              	.L66:
 678              		.align	2
 679              	.L65:
 680 0018 00000000 		.word	ADC_countsPer10Volt
 681              		.cfi_endproc
 682              	.LFE16:
 683              		.size	ADC_SetGain, .-ADC_SetGain
 684              		.global	__aeabi_idiv
 685              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 686              		.align	1
 687              		.global	ADC_CountsTo_mVolts
 688              		.code	16
 689              		.thumb_func
 690              		.type	ADC_CountsTo_mVolts, %function
 691              	ADC_CountsTo_mVolts:
 692              	.LFB17:
 730:.\Generated_Source\PSoC4/ADC.c **** 
 731:.\Generated_Source\PSoC4/ADC.c **** 
 732:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:.\Generated_Source\PSoC4/ADC.c **** 
 734:.\Generated_Source\PSoC4/ADC.c **** 
 735:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:.\Generated_Source\PSoC4/ADC.c ****     *
 739:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:.\Generated_Source\PSoC4/ADC.c ****     *
 743:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:.\Generated_Source\PSoC4/ADC.c ****     *
 747:.\Generated_Source\PSoC4/ADC.c ****     * Return:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 27


 748:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:.\Generated_Source\PSoC4/ADC.c ****     *
 750:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:.\Generated_Source\PSoC4/ADC.c ****     *
 755:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:.\Generated_Source\PSoC4/ADC.c ****     {
 693              		.loc 1 757 0
 694              		.cfi_startproc
 695              	.LVL44:
 696 0000 38B5     		push	{r3, r4, r5, lr}
 697              		.cfi_def_cfa_offset 16
 698              		.cfi_offset 3, -16
 699              		.cfi_offset 4, -12
 700              		.cfi_offset 5, -8
 701              		.cfi_offset 14, -4
 702              		.loc 1 757 0
 703 0002 041C     		mov	r4, r0
 704 0004 0D1C     		mov	r5, r1
 758:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 705              		.loc 1 761 0
 706 0006 0028     		cmp	r0, #0
 707 0008 02D0     		beq	.L68
 708              		.loc 1 761 0 is_stmt 0 discriminator 1
 709 000a 0020     		mov	r0, #0
 710              	.LVL45:
 711 000c FFF7FEFF 		bl	CyHalt
 712              	.LVL46:
 713              	.L68:
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:.\Generated_Source\PSoC4/ADC.c ****             {
 767:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:.\Generated_Source\PSoC4/ADC.c ****             }
 769:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:.\Generated_Source\PSoC4/ADC.c **** 
 771:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 714              		.loc 1 772 0 is_stmt 1
 715 0010 0C4B     		ldr	r3, .L74
 716 0012 6200     		lsl	r2, r4, #1
 717 0014 D15A     		ldrh	r1, [r2, r3]
 718 0016 A400     		lsl	r4, r4, #2
 719              	.LVL47:
 720 0018 691A     		sub	r1, r5, r1
 721 001a 0B4D     		ldr	r5, .L74+4
 773:.\Generated_Source\PSoC4/ADC.c **** 
 774:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 722              		.loc 1 774 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 28


 723 001c 0B48     		ldr	r0, .L74+8
 775:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 724              		.loc 1 775 0
 725 001e 2A59     		ldr	r2, [r5, r4]
 772:.\Generated_Source\PSoC4/ADC.c **** 
 726              		.loc 1 772 0
 727 0020 09B2     		sxth	r1, r1
 728              	.LVL48:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 729              		.loc 1 774 0
 730 0022 4843     		mul	r0, r1
 731              		.loc 1 775 0
 732 0024 D30F     		lsr	r3, r2, #31
 733 0026 0029     		cmp	r1, #0
 734 0028 02DD     		ble	.L69
 735              		.loc 1 775 0 is_stmt 0 discriminator 1
 736 002a 9B18     		add	r3, r3, r2
 737 002c 5B10     		asr	r3, r3, #1
 738 002e 02E0     		b	.L70
 739              	.L69:
 740              		.loc 1 775 0 discriminator 2
 741 0030 9A18     		add	r2, r3, r2
 742 0032 5210     		asr	r2, r2, #1
 743 0034 5342     		neg	r3, r2
 744              	.L70:
 776:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 745              		.loc 1 776 0 is_stmt 1
 746 0036 2959     		ldr	r1, [r5, r4]
 747              	.LVL49:
 774:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 748              		.loc 1 774 0
 749 0038 C018     		add	r0, r0, r3
 750              	.LVL50:
 751              		.loc 1 776 0
 752 003a FFF7FEFF 		bl	__aeabi_idiv
 753              	.LVL51:
 777:.\Generated_Source\PSoC4/ADC.c **** 
 778:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 779:.\Generated_Source\PSoC4/ADC.c ****     }
 754              		.loc 1 779 0
 755              		@ sp needed
 778:.\Generated_Source\PSoC4/ADC.c ****     }
 756              		.loc 1 778 0
 757 003e 00B2     		sxth	r0, r0
 758              		.loc 1 779 0
 759 0040 38BD     		pop	{r3, r4, r5, pc}
 760              	.L75:
 761 0042 C046     		.align	2
 762              	.L74:
 763 0044 00000000 		.word	ADC_offset
 764 0048 00000000 		.word	ADC_countsPer10Volt
 765 004c 10270000 		.word	10000
 766              		.cfi_endproc
 767              	.LFE17:
 768              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 769              		.global	__aeabi_lmul
 770              		.global	__aeabi_ldivmod
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 29


 771              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 772              		.align	1
 773              		.global	ADC_CountsTo_uVolts
 774              		.code	16
 775              		.thumb_func
 776              		.type	ADC_CountsTo_uVolts, %function
 777              	ADC_CountsTo_uVolts:
 778              	.LFB18:
 780:.\Generated_Source\PSoC4/ADC.c **** 
 781:.\Generated_Source\PSoC4/ADC.c **** 
 782:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:.\Generated_Source\PSoC4/ADC.c ****     *
 786:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:.\Generated_Source\PSoC4/ADC.c ****     *
 790:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:.\Generated_Source\PSoC4/ADC.c ****     *
 794:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 795:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:.\Generated_Source\PSoC4/ADC.c ****     *
 797:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:.\Generated_Source\PSoC4/ADC.c ****     *
 802:.\Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:.\Generated_Source\PSoC4/ADC.c ****     *
 809:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:.\Generated_Source\PSoC4/ADC.c ****     {
 779              		.loc 1 811 0
 780              		.cfi_startproc
 781              	.LVL52:
 782 0000 38B5     		push	{r3, r4, r5, lr}
 783              		.cfi_def_cfa_offset 16
 784              		.cfi_offset 3, -16
 785              		.cfi_offset 4, -12
 786              		.cfi_offset 5, -8
 787              		.cfi_offset 14, -4
 788              		.loc 1 811 0
 789 0002 051C     		mov	r5, r0
 790 0004 0C1C     		mov	r4, r1
 812:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:.\Generated_Source\PSoC4/ADC.c **** 
 814:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 791              		.loc 1 815 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 30


 792 0006 0028     		cmp	r0, #0
 793 0008 02D0     		beq	.L77
 794              		.loc 1 815 0 is_stmt 0 discriminator 1
 795 000a 0020     		mov	r0, #0
 796              	.LVL53:
 797 000c FFF7FEFF 		bl	CyHalt
 798              	.LVL54:
 799              	.L77:
 816:.\Generated_Source\PSoC4/ADC.c **** 
 817:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:.\Generated_Source\PSoC4/ADC.c ****             {
 821:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:.\Generated_Source\PSoC4/ADC.c ****             }
 823:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:.\Generated_Source\PSoC4/ADC.c **** 
 825:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 800              		.loc 1 826 0 is_stmt 1
 801 0010 084B     		ldr	r3, .L81
 802 0012 6A00     		lsl	r2, r5, #1
 803 0014 D05A     		ldrh	r0, [r2, r3]
 827:.\Generated_Source\PSoC4/ADC.c **** 
 828:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 804              		.loc 1 828 0
 805 0016 084B     		ldr	r3, .L81+4
 826:.\Generated_Source\PSoC4/ADC.c **** 
 806              		.loc 1 826 0
 807 0018 241A     		sub	r4, r4, r0
 808              	.LVL55:
 809              		.loc 1 828 0
 810 001a AD00     		lsl	r5, r5, #2
 811              	.LVL56:
 812 001c ED58     		ldr	r5, [r5, r3]
 813              	.LVL57:
 814 001e 20B2     		sxth	r0, r4
 815 0020 064A     		ldr	r2, .L81+8
 816 0022 0023     		mov	r3, #0
 817 0024 C117     		asr	r1, r0, #31
 818 0026 FFF7FEFF 		bl	__aeabi_lmul
 819              	.LVL58:
 820 002a EB17     		asr	r3, r5, #31
 821 002c 2A1C     		mov	r2, r5
 822 002e FFF7FEFF 		bl	__aeabi_ldivmod
 823              	.LVL59:
 829:.\Generated_Source\PSoC4/ADC.c **** 
 830:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 831:.\Generated_Source\PSoC4/ADC.c ****     }
 824              		.loc 1 831 0
 825              		@ sp needed
 826              	.LVL60:
 827 0032 38BD     		pop	{r3, r4, r5, pc}
 828              	.L82:
 829              		.align	2
 830              	.L81:
 831 0034 00000000 		.word	ADC_offset
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 31


 832 0038 00000000 		.word	ADC_countsPer10Volt
 833 003c 80969800 		.word	10000000
 834              		.cfi_endproc
 835              	.LFE18:
 836              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 837              		.global	__aeabi_i2f
 838              		.global	__aeabi_fmul
 839              		.global	__aeabi_fdiv
 840              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 841              		.align	1
 842              		.global	ADC_CountsTo_Volts
 843              		.code	16
 844              		.thumb_func
 845              		.type	ADC_CountsTo_Volts, %function
 846              	ADC_CountsTo_Volts:
 847              	.LFB19:
 832:.\Generated_Source\PSoC4/ADC.c **** 
 833:.\Generated_Source\PSoC4/ADC.c **** 
 834:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:.\Generated_Source\PSoC4/ADC.c ****     *
 838:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:.\Generated_Source\PSoC4/ADC.c ****     *
 842:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:.\Generated_Source\PSoC4/ADC.c ****     *
 846:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 847:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:.\Generated_Source\PSoC4/ADC.c ****     *
 849:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:.\Generated_Source\PSoC4/ADC.c ****     *
 854:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:.\Generated_Source\PSoC4/ADC.c ****     {
 848              		.loc 1 856 0
 849              		.cfi_startproc
 850              	.LVL61:
 851 0000 38B5     		push	{r3, r4, r5, lr}
 852              		.cfi_def_cfa_offset 16
 853              		.cfi_offset 3, -16
 854              		.cfi_offset 4, -12
 855              		.cfi_offset 5, -8
 856              		.cfi_offset 14, -4
 857              		.loc 1 856 0
 858 0002 051C     		mov	r5, r0
 859 0004 0C1C     		mov	r4, r1
 857:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:.\Generated_Source\PSoC4/ADC.c **** 
 859:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 32


 860              		.loc 1 860 0
 861 0006 0028     		cmp	r0, #0
 862 0008 02D0     		beq	.L84
 863              		.loc 1 860 0 is_stmt 0 discriminator 1
 864 000a 0020     		mov	r0, #0
 865              	.LVL62:
 866 000c FFF7FEFF 		bl	CyHalt
 867              	.LVL63:
 868              	.L84:
 861:.\Generated_Source\PSoC4/ADC.c **** 
 862:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:.\Generated_Source\PSoC4/ADC.c ****             {
 866:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:.\Generated_Source\PSoC4/ADC.c ****             }
 868:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:.\Generated_Source\PSoC4/ADC.c **** 
 870:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 869              		.loc 1 871 0 is_stmt 1
 870 0010 0A4B     		ldr	r3, .L88
 871 0012 6A00     		lsl	r2, r5, #1
 872 0014 D05A     		ldrh	r0, [r2, r3]
 872:.\Generated_Source\PSoC4/ADC.c **** 
 873:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 873              		.loc 1 873 0
 874 0016 0A4B     		ldr	r3, .L88+4
 871:.\Generated_Source\PSoC4/ADC.c **** 
 875              		.loc 1 871 0
 876 0018 241A     		sub	r4, r4, r0
 877              	.LVL64:
 878              		.loc 1 873 0
 879 001a 20B2     		sxth	r0, r4
 880 001c AD00     		lsl	r5, r5, #2
 881              	.LVL65:
 882 001e ED58     		ldr	r5, [r5, r3]
 883              	.LVL66:
 884 0020 FFF7FEFF 		bl	__aeabi_i2f
 885              	.LVL67:
 886 0024 0749     		ldr	r1, .L88+8
 887 0026 FFF7FEFF 		bl	__aeabi_fmul
 888              	.LVL68:
 889 002a 041C     		add	r4, r0, #0
 890              	.LVL69:
 891 002c 281C     		mov	r0, r5
 892 002e FFF7FEFF 		bl	__aeabi_i2f
 893              	.LVL70:
 894 0032 011C     		add	r1, r0, #0
 895 0034 201C     		add	r0, r4, #0
 896 0036 FFF7FEFF 		bl	__aeabi_fdiv
 897              	.LVL71:
 874:.\Generated_Source\PSoC4/ADC.c **** 
 875:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 876:.\Generated_Source\PSoC4/ADC.c ****     }
 898              		.loc 1 876 0
 899              		@ sp needed
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 33


 900 003a 38BD     		pop	{r3, r4, r5, pc}
 901              	.L89:
 902              		.align	2
 903              	.L88:
 904 003c 00000000 		.word	ADC_offset
 905 0040 00000000 		.word	ADC_countsPer10Volt
 906 0044 00002041 		.word	1092616192
 907              		.cfi_endproc
 908              	.LFE19:
 909              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 910              		.comm	ADC_countsPer10Volt,4,4
 911              		.comm	ADC_offset,2,2
 912              		.global	ADC_initVar
 913              		.bss
 914              		.set	.LANCHOR0,. + 0
 915              		.type	ADC_initVar, %object
 916              		.size	ADC_initVar, 1
 917              	ADC_initVar:
 918 0000 00       		.space	1
 919              		.text
 920              	.Letext0:
 921              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 922              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 923              		.section	.debug_info,"",%progbits
 924              	.Ldebug_info0:
 925 0000 A0050000 		.4byte	0x5a0
 926 0004 0400     		.2byte	0x4
 927 0006 00000000 		.4byte	.Ldebug_abbrev0
 928 000a 04       		.byte	0x4
 929 000b 01       		.uleb128 0x1
 930 000c 07000000 		.4byte	.LASF61
 931 0010 01       		.byte	0x1
 932 0011 1E030000 		.4byte	.LASF62
 933 0015 D7000000 		.4byte	.LASF63
 934 0019 00000000 		.4byte	.Ldebug_ranges0+0
 935 001d 00000000 		.4byte	0
 936 0021 00000000 		.4byte	.Ldebug_line0
 937 0025 02       		.uleb128 0x2
 938 0026 08       		.byte	0x8
 939 0027 07       		.byte	0x7
 940 0028 C0000000 		.4byte	.LASF0
 941 002c 02       		.uleb128 0x2
 942 002d 04       		.byte	0x4
 943 002e 04       		.byte	0x4
 944 002f E3020000 		.4byte	.LASF1
 945 0033 02       		.uleb128 0x2
 946 0034 08       		.byte	0x8
 947 0035 05       		.byte	0x5
 948 0036 43010000 		.4byte	.LASF2
 949 003a 03       		.uleb128 0x3
 950 003b 04       		.byte	0x4
 951 003c 05       		.byte	0x5
 952 003d 696E7400 		.ascii	"int\000"
 953 0041 02       		.uleb128 0x2
 954 0042 02       		.byte	0x2
 955 0043 05       		.byte	0x5
 956 0044 56030000 		.4byte	.LASF3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 34


 957 0048 02       		.uleb128 0x2
 958 0049 01       		.byte	0x1
 959 004a 06       		.byte	0x6
 960 004b 51010000 		.4byte	.LASF4
 961 004f 02       		.uleb128 0x2
 962 0050 01       		.byte	0x1
 963 0051 08       		.byte	0x8
 964 0052 3D030000 		.4byte	.LASF5
 965 0056 02       		.uleb128 0x2
 966 0057 02       		.byte	0x2
 967 0058 07       		.byte	0x7
 968 0059 32020000 		.4byte	.LASF6
 969 005d 02       		.uleb128 0x2
 970 005e 04       		.byte	0x4
 971 005f 05       		.byte	0x5
 972 0060 74010000 		.4byte	.LASF7
 973 0064 02       		.uleb128 0x2
 974 0065 04       		.byte	0x4
 975 0066 07       		.byte	0x7
 976 0067 01020000 		.4byte	.LASF8
 977 006b 02       		.uleb128 0x2
 978 006c 04       		.byte	0x4
 979 006d 07       		.byte	0x7
 980 006e ED010000 		.4byte	.LASF9
 981 0072 04       		.uleb128 0x4
 982 0073 A5010000 		.4byte	.LASF10
 983 0077 02       		.byte	0x2
 984 0078 9801     		.2byte	0x198
 985 007a 4F000000 		.4byte	0x4f
 986 007e 04       		.uleb128 0x4
 987 007f 00000000 		.4byte	.LASF11
 988 0083 02       		.byte	0x2
 989 0084 9901     		.2byte	0x199
 990 0086 56000000 		.4byte	0x56
 991 008a 04       		.uleb128 0x4
 992 008b BC010000 		.4byte	.LASF12
 993 008f 02       		.byte	0x2
 994 0090 9A01     		.2byte	0x19a
 995 0092 64000000 		.4byte	0x64
 996 0096 04       		.uleb128 0x4
 997 0097 B5030000 		.4byte	.LASF13
 998 009b 02       		.byte	0x2
 999 009c 9C01     		.2byte	0x19c
 1000 009e 41000000 		.4byte	0x41
 1001 00a2 04       		.uleb128 0x4
 1002 00a3 64010000 		.4byte	.LASF14
 1003 00a7 02       		.byte	0x2
 1004 00a8 9D01     		.2byte	0x19d
 1005 00aa 5D000000 		.4byte	0x5d
 1006 00ae 04       		.uleb128 0x4
 1007 00af 71020000 		.4byte	.LASF15
 1008 00b3 02       		.byte	0x2
 1009 00b4 9E01     		.2byte	0x19e
 1010 00b6 2C000000 		.4byte	0x2c
 1011 00ba 02       		.uleb128 0x2
 1012 00bb 08       		.byte	0x8
 1013 00bc 04       		.byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 35


 1014 00bd B5010000 		.4byte	.LASF16
 1015 00c1 04       		.uleb128 0x4
 1016 00c2 B0020000 		.4byte	.LASF17
 1017 00c6 02       		.byte	0x2
 1018 00c7 A301     		.2byte	0x1a3
 1019 00c9 33000000 		.4byte	0x33
 1020 00cd 02       		.uleb128 0x2
 1021 00ce 01       		.byte	0x1
 1022 00cf 08       		.byte	0x8
 1023 00d0 74030000 		.4byte	.LASF18
 1024 00d4 04       		.uleb128 0x4
 1025 00d5 6B020000 		.4byte	.LASF19
 1026 00d9 02       		.byte	0x2
 1027 00da 4402     		.2byte	0x244
 1028 00dc E0000000 		.4byte	0xe0
 1029 00e0 05       		.uleb128 0x5
 1030 00e1 8A000000 		.4byte	0x8a
 1031 00e5 04       		.uleb128 0x4
 1032 00e6 79030000 		.4byte	.LASF20
 1033 00ea 02       		.byte	0x2
 1034 00eb 5402     		.2byte	0x254
 1035 00ed F1000000 		.4byte	0xf1
 1036 00f1 06       		.uleb128 0x6
 1037 00f2 04       		.byte	0x4
 1038 00f3 F7000000 		.4byte	0xf7
 1039 00f7 07       		.uleb128 0x7
 1040 00f8 02       		.uleb128 0x2
 1041 00f9 04       		.byte	0x4
 1042 00fa 07       		.byte	0x7
 1043 00fb 79020000 		.4byte	.LASF21
 1044 00ff 08       		.uleb128 0x8
 1045 0100 AA030000 		.4byte	.LASF64
 1046 0104 01       		.byte	0x1
 1047 0105 4A01     		.2byte	0x14a
 1048 0107 01       		.byte	0x1
 1049 0108 09       		.uleb128 0x9
 1050 0109 B7000000 		.4byte	.LASF25
 1051 010d 01       		.byte	0x1
 1052 010e 5E       		.byte	0x5e
 1053 010f 00000000 		.4byte	.LFB3
 1054 0113 E8000000 		.4byte	.LFE3-.LFB3
 1055 0117 01       		.uleb128 0x1
 1056 0118 9C       		.byte	0x9c
 1057 0119 70010000 		.4byte	0x170
 1058 011d 0A       		.uleb128 0xa
 1059 011e 69030000 		.4byte	.LASF22
 1060 0122 01       		.byte	0x1
 1061 0123 60       		.byte	0x60
 1062 0124 8A000000 		.4byte	0x8a
 1063 0128 00000000 		.4byte	.LLST0
 1064 012c 0A       		.uleb128 0xa
 1065 012d 28020000 		.4byte	.LASF23
 1066 0131 01       		.byte	0x1
 1067 0132 61       		.byte	0x61
 1068 0133 8A000000 		.4byte	0x8a
 1069 0137 20000000 		.4byte	.LLST1
 1070 013b 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 36


 1071 013c 9D000000 		.4byte	.LASF24
 1072 0140 01       		.byte	0x1
 1073 0141 62       		.byte	0x62
 1074 0142 A2000000 		.4byte	0xa2
 1075 0146 0010     		.2byte	0x1000
 1076 0148 0C       		.uleb128 0xc
 1077 0149 0A000000 		.4byte	.LVL0
 1078 014d 55050000 		.4byte	0x555
 1079 0151 60010000 		.4byte	0x160
 1080 0155 0D       		.uleb128 0xd
 1081 0156 01       		.uleb128 0x1
 1082 0157 51       		.byte	0x51
 1083 0158 01       		.uleb128 0x1
 1084 0159 33       		.byte	0x33
 1085 015a 0D       		.uleb128 0xd
 1086 015b 01       		.uleb128 0x1
 1087 015c 50       		.byte	0x50
 1088 015d 01       		.uleb128 0x1
 1089 015e 3F       		.byte	0x3f
 1090 015f 00       		.byte	0
 1091 0160 0E       		.uleb128 0xe
 1092 0161 12000000 		.4byte	.LVL1
 1093 0165 6B050000 		.4byte	0x56b
 1094 0169 0D       		.uleb128 0xd
 1095 016a 01       		.uleb128 0x1
 1096 016b 50       		.byte	0x50
 1097 016c 01       		.uleb128 0x1
 1098 016d 3F       		.byte	0x3f
 1099 016e 00       		.byte	0
 1100 016f 00       		.byte	0
 1101 0170 0F       		.uleb128 0xf
 1102 0171 FF000000 		.4byte	0xff
 1103 0175 00000000 		.4byte	.LFB4
 1104 0179 2C000000 		.4byte	.LFE4-.LFB4
 1105 017d 01       		.uleb128 0x1
 1106 017e 9C       		.byte	0x9c
 1107 017f 93010000 		.4byte	0x193
 1108 0183 0E       		.uleb128 0xe
 1109 0184 22000000 		.4byte	.LVL8
 1110 0188 85050000 		.4byte	0x585
 1111 018c 0D       		.uleb128 0xd
 1112 018d 01       		.uleb128 0x1
 1113 018e 50       		.byte	0x50
 1114 018f 01       		.uleb128 0x1
 1115 0190 3A       		.byte	0x3a
 1116 0191 00       		.byte	0
 1117 0192 00       		.byte	0
 1118 0193 09       		.uleb128 0x9
 1119 0194 6A010000 		.4byte	.LASF26
 1120 0198 01       		.byte	0x1
 1121 0199 3F       		.byte	0x3f
 1122 019a 00000000 		.4byte	.LFB2
 1123 019e 1C000000 		.4byte	.LFE2-.LFB2
 1124 01a2 01       		.uleb128 0x1
 1125 01a3 9C       		.byte	0x9c
 1126 01a4 BB010000 		.4byte	0x1bb
 1127 01a8 10       		.uleb128 0x10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 37


 1128 01a9 0E000000 		.4byte	.LVL9
 1129 01ad 08010000 		.4byte	0x108
 1130 01b1 10       		.uleb128 0x10
 1131 01b2 16000000 		.4byte	.LVL10
 1132 01b6 FF000000 		.4byte	0xff
 1133 01ba 00       		.byte	0
 1134 01bb 11       		.uleb128 0x11
 1135 01bc 60030000 		.4byte	.LASF27
 1136 01c0 01       		.byte	0x1
 1137 01c1 6D01     		.2byte	0x16d
 1138 01c3 00000000 		.4byte	.LFB5
 1139 01c7 10000000 		.4byte	.LFE5-.LFB5
 1140 01cb 01       		.uleb128 0x1
 1141 01cc 9C       		.byte	0x9c
 1142 01cd 11       		.uleb128 0x11
 1143 01ce 32010000 		.4byte	.LASF28
 1144 01d2 01       		.byte	0x1
 1145 01d3 8701     		.2byte	0x187
 1146 01d5 00000000 		.4byte	.LFB6
 1147 01d9 0C000000 		.4byte	.LFE6-.LFB6
 1148 01dd 01       		.uleb128 0x1
 1149 01de 9C       		.byte	0x9c
 1150 01df 11       		.uleb128 0x11
 1151 01e0 54020000 		.4byte	.LASF29
 1152 01e4 01       		.byte	0x1
 1153 01e5 A001     		.2byte	0x1a0
 1154 01e7 00000000 		.4byte	.LFB7
 1155 01eb 02000000 		.4byte	.LFE7-.LFB7
 1156 01ef 01       		.uleb128 0x1
 1157 01f0 9C       		.byte	0x9c
 1158 01f1 12       		.uleb128 0x12
 1159 01f2 9C020000 		.4byte	.LASF31
 1160 01f6 01       		.byte	0x1
 1161 01f7 C201     		.2byte	0x1c2
 1162 01f9 8A000000 		.4byte	0x8a
 1163 01fd 00000000 		.4byte	.LFB8
 1164 0201 28000000 		.4byte	.LFE8-.LFB8
 1165 0205 01       		.uleb128 0x1
 1166 0206 9C       		.byte	0x9c
 1167 0207 2C020000 		.4byte	0x22c
 1168 020b 13       		.uleb128 0x13
 1169 020c D4010000 		.4byte	.LASF33
 1170 0210 01       		.byte	0x1
 1171 0211 C201     		.2byte	0x1c2
 1172 0213 8A000000 		.4byte	0x8a
 1173 0217 52000000 		.4byte	.LLST2
 1174 021b 14       		.uleb128 0x14
 1175 021c 5D010000 		.4byte	.LASF30
 1176 0220 01       		.byte	0x1
 1177 0221 C401     		.2byte	0x1c4
 1178 0223 8A000000 		.4byte	0x8a
 1179 0227 7E000000 		.4byte	.LLST3
 1180 022b 00       		.byte	0
 1181 022c 12       		.uleb128 0x12
 1182 022d D0030000 		.4byte	.LASF32
 1183 0231 01       		.byte	0x1
 1184 0232 F801     		.2byte	0x1f8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 38


 1185 0234 96000000 		.4byte	0x96
 1186 0238 00000000 		.4byte	.LFB9
 1187 023c 20000000 		.4byte	.LFE9-.LFB9
 1188 0240 01       		.uleb128 0x1
 1189 0241 9C       		.byte	0x9c
 1190 0242 76020000 		.4byte	0x276
 1191 0246 13       		.uleb128 0x13
 1192 0247 6F030000 		.4byte	.LASF34
 1193 024b 01       		.byte	0x1
 1194 024c F801     		.2byte	0x1f8
 1195 024e 8A000000 		.4byte	0x8a
 1196 0252 A9000000 		.4byte	.LLST4
 1197 0256 14       		.uleb128 0x14
 1198 0257 C9030000 		.4byte	.LASF35
 1199 025b 01       		.byte	0x1
 1200 025c FA01     		.2byte	0x1fa
 1201 025e 8A000000 		.4byte	0x8a
 1202 0262 E3000000 		.4byte	.LLST5
 1203 0266 0E       		.uleb128 0xe
 1204 0267 0C000000 		.4byte	.LVL20
 1205 026b 96050000 		.4byte	0x596
 1206 026f 0D       		.uleb128 0xd
 1207 0270 01       		.uleb128 0x1
 1208 0271 50       		.byte	0x50
 1209 0272 01       		.uleb128 0x1
 1210 0273 30       		.byte	0x30
 1211 0274 00       		.byte	0
 1212 0275 00       		.byte	0
 1213 0276 15       		.uleb128 0x15
 1214 0277 C7020000 		.4byte	.LASF36
 1215 027b 01       		.byte	0x1
 1216 027c 2502     		.2byte	0x225
 1217 027e 00000000 		.4byte	.LFB10
 1218 0282 10000000 		.4byte	.LFE10-.LFB10
 1219 0286 01       		.uleb128 0x1
 1220 0287 9C       		.byte	0x9c
 1221 0288 9D020000 		.4byte	0x29d
 1222 028c 13       		.uleb128 0x13
 1223 028d C3010000 		.4byte	.LASF37
 1224 0291 01       		.byte	0x1
 1225 0292 2502     		.2byte	0x225
 1226 0294 8A000000 		.4byte	0x8a
 1227 0298 F6000000 		.4byte	.LLST6
 1228 029c 00       		.byte	0
 1229 029d 15       		.uleb128 0x15
 1230 029e 07030000 		.4byte	.LASF38
 1231 02a2 01       		.byte	0x1
 1232 02a3 5102     		.2byte	0x251
 1233 02a5 00000000 		.4byte	.LFB11
 1234 02a9 18000000 		.4byte	.LFE11-.LFB11
 1235 02ad 01       		.uleb128 0x1
 1236 02ae 9C       		.byte	0x9c
 1237 02af C4020000 		.4byte	0x2c4
 1238 02b3 13       		.uleb128 0x13
 1239 02b4 82020000 		.4byte	.LASF39
 1240 02b8 01       		.byte	0x1
 1241 02b9 5102     		.2byte	0x251
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 39


 1242 02bb 8A000000 		.4byte	0x8a
 1243 02bf 17010000 		.4byte	.LLST7
 1244 02c3 00       		.byte	0
 1245 02c4 15       		.uleb128 0x15
 1246 02c5 8B020000 		.4byte	.LASF40
 1247 02c9 01       		.byte	0x1
 1248 02ca 6602     		.2byte	0x266
 1249 02cc 00000000 		.4byte	.LFB12
 1250 02d0 18000000 		.4byte	.LFE12-.LFB12
 1251 02d4 01       		.uleb128 0x1
 1252 02d5 9C       		.byte	0x9c
 1253 02d6 EB020000 		.4byte	0x2eb
 1254 02da 13       		.uleb128 0x13
 1255 02db E9020000 		.4byte	.LASF41
 1256 02df 01       		.byte	0x1
 1257 02e0 6602     		.2byte	0x266
 1258 02e2 8A000000 		.4byte	0x8a
 1259 02e6 38010000 		.4byte	.LLST8
 1260 02ea 00       		.byte	0
 1261 02eb 15       		.uleb128 0x15
 1262 02ec DC010000 		.4byte	.LASF42
 1263 02f0 01       		.byte	0x1
 1264 02f1 7E02     		.2byte	0x27e
 1265 02f3 00000000 		.4byte	.LFB13
 1266 02f7 10000000 		.4byte	.LFE13-.LFB13
 1267 02fb 01       		.uleb128 0x1
 1268 02fc 9C       		.byte	0x9c
 1269 02fd 12030000 		.4byte	0x312
 1270 0301 13       		.uleb128 0x13
 1271 0302 C3010000 		.4byte	.LASF37
 1272 0306 01       		.byte	0x1
 1273 0307 7E02     		.2byte	0x27e
 1274 0309 8A000000 		.4byte	0x8a
 1275 030d 59010000 		.4byte	.LLST9
 1276 0311 00       		.byte	0
 1277 0312 15       		.uleb128 0x15
 1278 0313 13020000 		.4byte	.LASF43
 1279 0317 01       		.byte	0x1
 1280 0318 9502     		.2byte	0x295
 1281 031a 00000000 		.4byte	.LFB14
 1282 031e 10000000 		.4byte	.LFE14-.LFB14
 1283 0322 01       		.uleb128 0x1
 1284 0323 9C       		.byte	0x9c
 1285 0324 39030000 		.4byte	0x339
 1286 0328 13       		.uleb128 0x13
 1287 0329 C3010000 		.4byte	.LASF37
 1288 032d 01       		.byte	0x1
 1289 032e 9502     		.2byte	0x295
 1290 0330 8A000000 		.4byte	0x8a
 1291 0334 7A010000 		.4byte	.LLST10
 1292 0338 00       		.byte	0
 1293 0339 15       		.uleb128 0x15
 1294 033a BB030000 		.4byte	.LASF44
 1295 033e 01       		.byte	0x1
 1296 033f B102     		.2byte	0x2b1
 1297 0341 00000000 		.4byte	.LFB15
 1298 0345 1C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 40


 1299 0349 01       		.uleb128 0x1
 1300 034a 9C       		.byte	0x9c
 1301 034b 7F030000 		.4byte	0x37f
 1302 034f 13       		.uleb128 0x13
 1303 0350 6F030000 		.4byte	.LASF34
 1304 0354 01       		.byte	0x1
 1305 0355 B102     		.2byte	0x2b1
 1306 0357 8A000000 		.4byte	0x8a
 1307 035b 9B010000 		.4byte	.LLST11
 1308 035f 13       		.uleb128 0x13
 1309 0360 99030000 		.4byte	.LASF45
 1310 0364 01       		.byte	0x1
 1311 0365 B102     		.2byte	0x2b1
 1312 0367 96000000 		.4byte	0x96
 1313 036b C7010000 		.4byte	.LLST12
 1314 036f 0E       		.uleb128 0xe
 1315 0370 10000000 		.4byte	.LVL37
 1316 0374 96050000 		.4byte	0x596
 1317 0378 0D       		.uleb128 0xd
 1318 0379 01       		.uleb128 0x1
 1319 037a 50       		.byte	0x50
 1320 037b 01       		.uleb128 0x1
 1321 037c 30       		.byte	0x30
 1322 037d 00       		.byte	0
 1323 037e 00       		.byte	0
 1324 037f 15       		.uleb128 0x15
 1325 0380 D7020000 		.4byte	.LASF46
 1326 0384 01       		.byte	0x1
 1327 0385 D302     		.2byte	0x2d3
 1328 0387 00000000 		.4byte	.LFB16
 1329 038b 1C000000 		.4byte	.LFE16-.LFB16
 1330 038f 01       		.uleb128 0x1
 1331 0390 9C       		.byte	0x9c
 1332 0391 C5030000 		.4byte	0x3c5
 1333 0395 13       		.uleb128 0x13
 1334 0396 6F030000 		.4byte	.LASF34
 1335 039a 01       		.byte	0x1
 1336 039b D302     		.2byte	0x2d3
 1337 039d 8A000000 		.4byte	0x8a
 1338 03a1 E8010000 		.4byte	.LLST13
 1339 03a5 13       		.uleb128 0x13
 1340 03a6 95000000 		.4byte	.LASF47
 1341 03aa 01       		.byte	0x1
 1342 03ab D302     		.2byte	0x2d3
 1343 03ad A2000000 		.4byte	0xa2
 1344 03b1 14020000 		.4byte	.LLST14
 1345 03b5 0E       		.uleb128 0xe
 1346 03b6 10000000 		.4byte	.LVL41
 1347 03ba 96050000 		.4byte	0x596
 1348 03be 0D       		.uleb128 0xd
 1349 03bf 01       		.uleb128 0x1
 1350 03c0 50       		.byte	0x50
 1351 03c1 01       		.uleb128 0x1
 1352 03c2 30       		.byte	0x30
 1353 03c3 00       		.byte	0
 1354 03c4 00       		.byte	0
 1355 03c5 16       		.uleb128 0x16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 41


 1356 03c6 F3020000 		.4byte	.LASF48
 1357 03ca 01       		.byte	0x1
 1358 03cb F402     		.2byte	0x2f4
 1359 03cd 96000000 		.4byte	0x96
 1360 03d1 00000000 		.4byte	.LFB17
 1361 03d5 50000000 		.4byte	.LFE17-.LFB17
 1362 03d9 01       		.uleb128 0x1
 1363 03da 9C       		.byte	0x9c
 1364 03db 1F040000 		.4byte	0x41f
 1365 03df 13       		.uleb128 0x13
 1366 03e0 6F030000 		.4byte	.LASF34
 1367 03e4 01       		.byte	0x1
 1368 03e5 F402     		.2byte	0x2f4
 1369 03e7 8A000000 		.4byte	0x8a
 1370 03eb 44020000 		.4byte	.LLST15
 1371 03ef 13       		.uleb128 0x13
 1372 03f0 A0030000 		.4byte	.LASF49
 1373 03f4 01       		.byte	0x1
 1374 03f5 F402     		.2byte	0x2f4
 1375 03f7 96000000 		.4byte	0x96
 1376 03fb 70020000 		.4byte	.LLST16
 1377 03ff 14       		.uleb128 0x14
 1378 0400 64020000 		.4byte	.LASF50
 1379 0404 01       		.byte	0x1
 1380 0405 F602     		.2byte	0x2f6
 1381 0407 96000000 		.4byte	0x96
 1382 040b 9C020000 		.4byte	.LLST17
 1383 040f 0E       		.uleb128 0xe
 1384 0410 10000000 		.4byte	.LVL46
 1385 0414 96050000 		.4byte	0x596
 1386 0418 0D       		.uleb128 0xd
 1387 0419 01       		.uleb128 0x1
 1388 041a 50       		.byte	0x50
 1389 041b 01       		.uleb128 0x1
 1390 041c 30       		.byte	0x30
 1391 041d 00       		.byte	0
 1392 041e 00       		.byte	0
 1393 041f 16       		.uleb128 0x16
 1394 0420 7D010000 		.4byte	.LASF51
 1395 0424 01       		.byte	0x1
 1396 0425 2A03     		.2byte	0x32a
 1397 0427 A2000000 		.4byte	0xa2
 1398 042b 00000000 		.4byte	.LFB18
 1399 042f 40000000 		.4byte	.LFE18-.LFB18
 1400 0433 01       		.uleb128 0x1
 1401 0434 9C       		.byte	0x9c
 1402 0435 79040000 		.4byte	0x479
 1403 0439 13       		.uleb128 0x13
 1404 043a 6F030000 		.4byte	.LASF34
 1405 043e 01       		.byte	0x1
 1406 043f 2A03     		.2byte	0x32a
 1407 0441 8A000000 		.4byte	0x8a
 1408 0445 B7020000 		.4byte	.LLST18
 1409 0449 13       		.uleb128 0x13
 1410 044a A0030000 		.4byte	.LASF49
 1411 044e 01       		.byte	0x1
 1412 044f 2A03     		.2byte	0x32a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 42


 1413 0451 96000000 		.4byte	0x96
 1414 0455 E3020000 		.4byte	.LLST19
 1415 0459 14       		.uleb128 0x14
 1416 045a FA010000 		.4byte	.LASF52
 1417 045e 01       		.byte	0x1
 1418 045f 2C03     		.2byte	0x32c
 1419 0461 C1000000 		.4byte	0xc1
 1420 0465 0F030000 		.4byte	.LLST20
 1421 0469 0E       		.uleb128 0xe
 1422 046a 10000000 		.4byte	.LVL54
 1423 046e 96050000 		.4byte	0x596
 1424 0472 0D       		.uleb128 0xd
 1425 0473 01       		.uleb128 0x1
 1426 0474 50       		.byte	0x50
 1427 0475 01       		.uleb128 0x1
 1428 0476 30       		.byte	0x30
 1429 0477 00       		.byte	0
 1430 0478 00       		.byte	0
 1431 0479 16       		.uleb128 0x16
 1432 047a A4000000 		.4byte	.LASF53
 1433 047e 01       		.byte	0x1
 1434 047f 5703     		.2byte	0x357
 1435 0481 AE000000 		.4byte	0xae
 1436 0485 00000000 		.4byte	.LFB19
 1437 0489 48000000 		.4byte	.LFE19-.LFB19
 1438 048d 01       		.uleb128 0x1
 1439 048e 9C       		.byte	0x9c
 1440 048f D3040000 		.4byte	0x4d3
 1441 0493 13       		.uleb128 0x13
 1442 0494 6F030000 		.4byte	.LASF34
 1443 0498 01       		.byte	0x1
 1444 0499 5703     		.2byte	0x357
 1445 049b 8A000000 		.4byte	0x8a
 1446 049f 3B030000 		.4byte	.LLST21
 1447 04a3 13       		.uleb128 0x13
 1448 04a4 A0030000 		.4byte	.LASF49
 1449 04a8 01       		.byte	0x1
 1450 04a9 5703     		.2byte	0x357
 1451 04ab 96000000 		.4byte	0x96
 1452 04af 67030000 		.4byte	.LLST22
 1453 04b3 14       		.uleb128 0x14
 1454 04b4 22020000 		.4byte	.LASF54
 1455 04b8 01       		.byte	0x1
 1456 04b9 5903     		.2byte	0x359
 1457 04bb AE000000 		.4byte	0xae
 1458 04bf 93030000 		.4byte	.LLST23
 1459 04c3 0E       		.uleb128 0xe
 1460 04c4 10000000 		.4byte	.LVL63
 1461 04c8 96050000 		.4byte	0x596
 1462 04cc 0D       		.uleb128 0xd
 1463 04cd 01       		.uleb128 0x1
 1464 04ce 50       		.byte	0x50
 1465 04cf 01       		.uleb128 0x1
 1466 04d0 30       		.byte	0x30
 1467 04d1 00       		.byte	0
 1468 04d2 00       		.byte	0
 1469 04d3 17       		.uleb128 0x17
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 43


 1470 04d4 8A000000 		.4byte	0x8a
 1471 04d8 E3040000 		.4byte	0x4e3
 1472 04dc 18       		.uleb128 0x18
 1473 04dd F8000000 		.4byte	0xf8
 1474 04e1 00       		.byte	0
 1475 04e2 00       		.byte	0
 1476 04e3 19       		.uleb128 0x19
 1477 04e4 86030000 		.4byte	.LASF55
 1478 04e8 01       		.byte	0x1
 1479 04e9 21       		.byte	0x21
 1480 04ea F3040000 		.4byte	0x4f3
 1481 04ee 04       		.byte	0x4
 1482 04ef 00       		.byte	0
 1483 04f0 04       		.byte	0x4
 1484 04f1 00       		.byte	0
 1485 04f2 00       		.byte	0
 1486 04f3 1A       		.uleb128 0x1a
 1487 04f4 D3040000 		.4byte	0x4d3
 1488 04f8 1B       		.uleb128 0x1b
 1489 04f9 C8010000 		.4byte	.LASF56
 1490 04fd 01       		.byte	0x1
 1491 04fe 18       		.byte	0x18
 1492 04ff 72000000 		.4byte	0x72
 1493 0503 05       		.uleb128 0x5
 1494 0504 03       		.byte	0x3
 1495 0505 00000000 		.4byte	ADC_initVar
 1496 0509 17       		.uleb128 0x17
 1497 050a 96000000 		.4byte	0x96
 1498 050e 19050000 		.4byte	0x519
 1499 0512 18       		.uleb128 0x18
 1500 0513 F8000000 		.4byte	0xf8
 1501 0517 00       		.byte	0
 1502 0518 00       		.byte	0
 1503 0519 1B       		.uleb128 0x1b
 1504 051a 4B030000 		.4byte	.LASF57
 1505 051e 01       		.byte	0x1
 1506 051f 19       		.byte	0x19
 1507 0520 2A050000 		.4byte	0x52a
 1508 0524 05       		.uleb128 0x5
 1509 0525 03       		.byte	0x3
 1510 0526 00000000 		.4byte	ADC_offset
 1511 052a 05       		.uleb128 0x5
 1512 052b 09050000 		.4byte	0x509
 1513 052f 17       		.uleb128 0x17
 1514 0530 A2000000 		.4byte	0xa2
 1515 0534 3F050000 		.4byte	0x53f
 1516 0538 18       		.uleb128 0x18
 1517 0539 F8000000 		.4byte	0xf8
 1518 053d 00       		.byte	0
 1519 053e 00       		.byte	0
 1520 053f 1B       		.uleb128 0x1b
 1521 0540 91010000 		.4byte	.LASF58
 1522 0544 01       		.byte	0x1
 1523 0545 1A       		.byte	0x1a
 1524 0546 50050000 		.4byte	0x550
 1525 054a 05       		.uleb128 0x5
 1526 054b 03       		.byte	0x3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 44


 1527 054c 00000000 		.4byte	ADC_countsPer10Volt
 1528 0550 05       		.uleb128 0x5
 1529 0551 2F050000 		.4byte	0x52f
 1530 0555 1C       		.uleb128 0x1c
 1531 0556 B6020000 		.4byte	.LASF59
 1532 055a 03       		.byte	0x3
 1533 055b BE       		.byte	0xbe
 1534 055c 6B050000 		.4byte	0x56b
 1535 0560 1D       		.uleb128 0x1d
 1536 0561 72000000 		.4byte	0x72
 1537 0565 1D       		.uleb128 0x1d
 1538 0566 72000000 		.4byte	0x72
 1539 056a 00       		.byte	0
 1540 056b 1E       		.uleb128 0x1e
 1541 056c 45020000 		.4byte	.LASF65
 1542 0570 03       		.byte	0x3
 1543 0571 BB       		.byte	0xbb
 1544 0572 E5000000 		.4byte	0xe5
 1545 0576 85050000 		.4byte	0x585
 1546 057a 1D       		.uleb128 0x1d
 1547 057b 72000000 		.4byte	0x72
 1548 057f 1D       		.uleb128 0x1d
 1549 0580 E5000000 		.4byte	0xe5
 1550 0584 00       		.byte	0
 1551 0585 1C       		.uleb128 0x1c
 1552 0586 AB010000 		.4byte	.LASF60
 1553 058a 03       		.byte	0x3
 1554 058b D8       		.byte	0xd8
 1555 058c 96050000 		.4byte	0x596
 1556 0590 1D       		.uleb128 0x1d
 1557 0591 7E000000 		.4byte	0x7e
 1558 0595 00       		.byte	0
 1559 0596 1F       		.uleb128 0x1f
 1560 0597 17030000 		.4byte	.LASF66
 1561 059b 03       		.byte	0x3
 1562 059c E5       		.byte	0xe5
 1563 059d 1D       		.uleb128 0x1d
 1564 059e 72000000 		.4byte	0x72
 1565 05a2 00       		.byte	0
 1566 05a3 00       		.byte	0
 1567              		.section	.debug_abbrev,"",%progbits
 1568              	.Ldebug_abbrev0:
 1569 0000 01       		.uleb128 0x1
 1570 0001 11       		.uleb128 0x11
 1571 0002 01       		.byte	0x1
 1572 0003 25       		.uleb128 0x25
 1573 0004 0E       		.uleb128 0xe
 1574 0005 13       		.uleb128 0x13
 1575 0006 0B       		.uleb128 0xb
 1576 0007 03       		.uleb128 0x3
 1577 0008 0E       		.uleb128 0xe
 1578 0009 1B       		.uleb128 0x1b
 1579 000a 0E       		.uleb128 0xe
 1580 000b 55       		.uleb128 0x55
 1581 000c 17       		.uleb128 0x17
 1582 000d 11       		.uleb128 0x11
 1583 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 45


 1584 000f 10       		.uleb128 0x10
 1585 0010 17       		.uleb128 0x17
 1586 0011 00       		.byte	0
 1587 0012 00       		.byte	0
 1588 0013 02       		.uleb128 0x2
 1589 0014 24       		.uleb128 0x24
 1590 0015 00       		.byte	0
 1591 0016 0B       		.uleb128 0xb
 1592 0017 0B       		.uleb128 0xb
 1593 0018 3E       		.uleb128 0x3e
 1594 0019 0B       		.uleb128 0xb
 1595 001a 03       		.uleb128 0x3
 1596 001b 0E       		.uleb128 0xe
 1597 001c 00       		.byte	0
 1598 001d 00       		.byte	0
 1599 001e 03       		.uleb128 0x3
 1600 001f 24       		.uleb128 0x24
 1601 0020 00       		.byte	0
 1602 0021 0B       		.uleb128 0xb
 1603 0022 0B       		.uleb128 0xb
 1604 0023 3E       		.uleb128 0x3e
 1605 0024 0B       		.uleb128 0xb
 1606 0025 03       		.uleb128 0x3
 1607 0026 08       		.uleb128 0x8
 1608 0027 00       		.byte	0
 1609 0028 00       		.byte	0
 1610 0029 04       		.uleb128 0x4
 1611 002a 16       		.uleb128 0x16
 1612 002b 00       		.byte	0
 1613 002c 03       		.uleb128 0x3
 1614 002d 0E       		.uleb128 0xe
 1615 002e 3A       		.uleb128 0x3a
 1616 002f 0B       		.uleb128 0xb
 1617 0030 3B       		.uleb128 0x3b
 1618 0031 05       		.uleb128 0x5
 1619 0032 49       		.uleb128 0x49
 1620 0033 13       		.uleb128 0x13
 1621 0034 00       		.byte	0
 1622 0035 00       		.byte	0
 1623 0036 05       		.uleb128 0x5
 1624 0037 35       		.uleb128 0x35
 1625 0038 00       		.byte	0
 1626 0039 49       		.uleb128 0x49
 1627 003a 13       		.uleb128 0x13
 1628 003b 00       		.byte	0
 1629 003c 00       		.byte	0
 1630 003d 06       		.uleb128 0x6
 1631 003e 0F       		.uleb128 0xf
 1632 003f 00       		.byte	0
 1633 0040 0B       		.uleb128 0xb
 1634 0041 0B       		.uleb128 0xb
 1635 0042 49       		.uleb128 0x49
 1636 0043 13       		.uleb128 0x13
 1637 0044 00       		.byte	0
 1638 0045 00       		.byte	0
 1639 0046 07       		.uleb128 0x7
 1640 0047 15       		.uleb128 0x15
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 46


 1641 0048 00       		.byte	0
 1642 0049 27       		.uleb128 0x27
 1643 004a 19       		.uleb128 0x19
 1644 004b 00       		.byte	0
 1645 004c 00       		.byte	0
 1646 004d 08       		.uleb128 0x8
 1647 004e 2E       		.uleb128 0x2e
 1648 004f 00       		.byte	0
 1649 0050 3F       		.uleb128 0x3f
 1650 0051 19       		.uleb128 0x19
 1651 0052 03       		.uleb128 0x3
 1652 0053 0E       		.uleb128 0xe
 1653 0054 3A       		.uleb128 0x3a
 1654 0055 0B       		.uleb128 0xb
 1655 0056 3B       		.uleb128 0x3b
 1656 0057 05       		.uleb128 0x5
 1657 0058 27       		.uleb128 0x27
 1658 0059 19       		.uleb128 0x19
 1659 005a 20       		.uleb128 0x20
 1660 005b 0B       		.uleb128 0xb
 1661 005c 00       		.byte	0
 1662 005d 00       		.byte	0
 1663 005e 09       		.uleb128 0x9
 1664 005f 2E       		.uleb128 0x2e
 1665 0060 01       		.byte	0x1
 1666 0061 3F       		.uleb128 0x3f
 1667 0062 19       		.uleb128 0x19
 1668 0063 03       		.uleb128 0x3
 1669 0064 0E       		.uleb128 0xe
 1670 0065 3A       		.uleb128 0x3a
 1671 0066 0B       		.uleb128 0xb
 1672 0067 3B       		.uleb128 0x3b
 1673 0068 0B       		.uleb128 0xb
 1674 0069 27       		.uleb128 0x27
 1675 006a 19       		.uleb128 0x19
 1676 006b 11       		.uleb128 0x11
 1677 006c 01       		.uleb128 0x1
 1678 006d 12       		.uleb128 0x12
 1679 006e 06       		.uleb128 0x6
 1680 006f 40       		.uleb128 0x40
 1681 0070 18       		.uleb128 0x18
 1682 0071 9742     		.uleb128 0x2117
 1683 0073 19       		.uleb128 0x19
 1684 0074 01       		.uleb128 0x1
 1685 0075 13       		.uleb128 0x13
 1686 0076 00       		.byte	0
 1687 0077 00       		.byte	0
 1688 0078 0A       		.uleb128 0xa
 1689 0079 34       		.uleb128 0x34
 1690 007a 00       		.byte	0
 1691 007b 03       		.uleb128 0x3
 1692 007c 0E       		.uleb128 0xe
 1693 007d 3A       		.uleb128 0x3a
 1694 007e 0B       		.uleb128 0xb
 1695 007f 3B       		.uleb128 0x3b
 1696 0080 0B       		.uleb128 0xb
 1697 0081 49       		.uleb128 0x49
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 47


 1698 0082 13       		.uleb128 0x13
 1699 0083 02       		.uleb128 0x2
 1700 0084 17       		.uleb128 0x17
 1701 0085 00       		.byte	0
 1702 0086 00       		.byte	0
 1703 0087 0B       		.uleb128 0xb
 1704 0088 34       		.uleb128 0x34
 1705 0089 00       		.byte	0
 1706 008a 03       		.uleb128 0x3
 1707 008b 0E       		.uleb128 0xe
 1708 008c 3A       		.uleb128 0x3a
 1709 008d 0B       		.uleb128 0xb
 1710 008e 3B       		.uleb128 0x3b
 1711 008f 0B       		.uleb128 0xb
 1712 0090 49       		.uleb128 0x49
 1713 0091 13       		.uleb128 0x13
 1714 0092 1C       		.uleb128 0x1c
 1715 0093 05       		.uleb128 0x5
 1716 0094 00       		.byte	0
 1717 0095 00       		.byte	0
 1718 0096 0C       		.uleb128 0xc
 1719 0097 898201   		.uleb128 0x4109
 1720 009a 01       		.byte	0x1
 1721 009b 11       		.uleb128 0x11
 1722 009c 01       		.uleb128 0x1
 1723 009d 31       		.uleb128 0x31
 1724 009e 13       		.uleb128 0x13
 1725 009f 01       		.uleb128 0x1
 1726 00a0 13       		.uleb128 0x13
 1727 00a1 00       		.byte	0
 1728 00a2 00       		.byte	0
 1729 00a3 0D       		.uleb128 0xd
 1730 00a4 8A8201   		.uleb128 0x410a
 1731 00a7 00       		.byte	0
 1732 00a8 02       		.uleb128 0x2
 1733 00a9 18       		.uleb128 0x18
 1734 00aa 9142     		.uleb128 0x2111
 1735 00ac 18       		.uleb128 0x18
 1736 00ad 00       		.byte	0
 1737 00ae 00       		.byte	0
 1738 00af 0E       		.uleb128 0xe
 1739 00b0 898201   		.uleb128 0x4109
 1740 00b3 01       		.byte	0x1
 1741 00b4 11       		.uleb128 0x11
 1742 00b5 01       		.uleb128 0x1
 1743 00b6 31       		.uleb128 0x31
 1744 00b7 13       		.uleb128 0x13
 1745 00b8 00       		.byte	0
 1746 00b9 00       		.byte	0
 1747 00ba 0F       		.uleb128 0xf
 1748 00bb 2E       		.uleb128 0x2e
 1749 00bc 01       		.byte	0x1
 1750 00bd 31       		.uleb128 0x31
 1751 00be 13       		.uleb128 0x13
 1752 00bf 11       		.uleb128 0x11
 1753 00c0 01       		.uleb128 0x1
 1754 00c1 12       		.uleb128 0x12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 48


 1755 00c2 06       		.uleb128 0x6
 1756 00c3 40       		.uleb128 0x40
 1757 00c4 18       		.uleb128 0x18
 1758 00c5 9742     		.uleb128 0x2117
 1759 00c7 19       		.uleb128 0x19
 1760 00c8 01       		.uleb128 0x1
 1761 00c9 13       		.uleb128 0x13
 1762 00ca 00       		.byte	0
 1763 00cb 00       		.byte	0
 1764 00cc 10       		.uleb128 0x10
 1765 00cd 898201   		.uleb128 0x4109
 1766 00d0 00       		.byte	0
 1767 00d1 11       		.uleb128 0x11
 1768 00d2 01       		.uleb128 0x1
 1769 00d3 31       		.uleb128 0x31
 1770 00d4 13       		.uleb128 0x13
 1771 00d5 00       		.byte	0
 1772 00d6 00       		.byte	0
 1773 00d7 11       		.uleb128 0x11
 1774 00d8 2E       		.uleb128 0x2e
 1775 00d9 00       		.byte	0
 1776 00da 3F       		.uleb128 0x3f
 1777 00db 19       		.uleb128 0x19
 1778 00dc 03       		.uleb128 0x3
 1779 00dd 0E       		.uleb128 0xe
 1780 00de 3A       		.uleb128 0x3a
 1781 00df 0B       		.uleb128 0xb
 1782 00e0 3B       		.uleb128 0x3b
 1783 00e1 05       		.uleb128 0x5
 1784 00e2 27       		.uleb128 0x27
 1785 00e3 19       		.uleb128 0x19
 1786 00e4 11       		.uleb128 0x11
 1787 00e5 01       		.uleb128 0x1
 1788 00e6 12       		.uleb128 0x12
 1789 00e7 06       		.uleb128 0x6
 1790 00e8 40       		.uleb128 0x40
 1791 00e9 18       		.uleb128 0x18
 1792 00ea 9742     		.uleb128 0x2117
 1793 00ec 19       		.uleb128 0x19
 1794 00ed 00       		.byte	0
 1795 00ee 00       		.byte	0
 1796 00ef 12       		.uleb128 0x12
 1797 00f0 2E       		.uleb128 0x2e
 1798 00f1 01       		.byte	0x1
 1799 00f2 3F       		.uleb128 0x3f
 1800 00f3 19       		.uleb128 0x19
 1801 00f4 03       		.uleb128 0x3
 1802 00f5 0E       		.uleb128 0xe
 1803 00f6 3A       		.uleb128 0x3a
 1804 00f7 0B       		.uleb128 0xb
 1805 00f8 3B       		.uleb128 0x3b
 1806 00f9 05       		.uleb128 0x5
 1807 00fa 27       		.uleb128 0x27
 1808 00fb 19       		.uleb128 0x19
 1809 00fc 49       		.uleb128 0x49
 1810 00fd 13       		.uleb128 0x13
 1811 00fe 11       		.uleb128 0x11
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 49


 1812 00ff 01       		.uleb128 0x1
 1813 0100 12       		.uleb128 0x12
 1814 0101 06       		.uleb128 0x6
 1815 0102 40       		.uleb128 0x40
 1816 0103 18       		.uleb128 0x18
 1817 0104 9742     		.uleb128 0x2117
 1818 0106 19       		.uleb128 0x19
 1819 0107 01       		.uleb128 0x1
 1820 0108 13       		.uleb128 0x13
 1821 0109 00       		.byte	0
 1822 010a 00       		.byte	0
 1823 010b 13       		.uleb128 0x13
 1824 010c 05       		.uleb128 0x5
 1825 010d 00       		.byte	0
 1826 010e 03       		.uleb128 0x3
 1827 010f 0E       		.uleb128 0xe
 1828 0110 3A       		.uleb128 0x3a
 1829 0111 0B       		.uleb128 0xb
 1830 0112 3B       		.uleb128 0x3b
 1831 0113 05       		.uleb128 0x5
 1832 0114 49       		.uleb128 0x49
 1833 0115 13       		.uleb128 0x13
 1834 0116 02       		.uleb128 0x2
 1835 0117 17       		.uleb128 0x17
 1836 0118 00       		.byte	0
 1837 0119 00       		.byte	0
 1838 011a 14       		.uleb128 0x14
 1839 011b 34       		.uleb128 0x34
 1840 011c 00       		.byte	0
 1841 011d 03       		.uleb128 0x3
 1842 011e 0E       		.uleb128 0xe
 1843 011f 3A       		.uleb128 0x3a
 1844 0120 0B       		.uleb128 0xb
 1845 0121 3B       		.uleb128 0x3b
 1846 0122 05       		.uleb128 0x5
 1847 0123 49       		.uleb128 0x49
 1848 0124 13       		.uleb128 0x13
 1849 0125 02       		.uleb128 0x2
 1850 0126 17       		.uleb128 0x17
 1851 0127 00       		.byte	0
 1852 0128 00       		.byte	0
 1853 0129 15       		.uleb128 0x15
 1854 012a 2E       		.uleb128 0x2e
 1855 012b 01       		.byte	0x1
 1856 012c 3F       		.uleb128 0x3f
 1857 012d 19       		.uleb128 0x19
 1858 012e 03       		.uleb128 0x3
 1859 012f 0E       		.uleb128 0xe
 1860 0130 3A       		.uleb128 0x3a
 1861 0131 0B       		.uleb128 0xb
 1862 0132 3B       		.uleb128 0x3b
 1863 0133 05       		.uleb128 0x5
 1864 0134 27       		.uleb128 0x27
 1865 0135 19       		.uleb128 0x19
 1866 0136 11       		.uleb128 0x11
 1867 0137 01       		.uleb128 0x1
 1868 0138 12       		.uleb128 0x12
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 50


 1869 0139 06       		.uleb128 0x6
 1870 013a 40       		.uleb128 0x40
 1871 013b 18       		.uleb128 0x18
 1872 013c 9742     		.uleb128 0x2117
 1873 013e 19       		.uleb128 0x19
 1874 013f 01       		.uleb128 0x1
 1875 0140 13       		.uleb128 0x13
 1876 0141 00       		.byte	0
 1877 0142 00       		.byte	0
 1878 0143 16       		.uleb128 0x16
 1879 0144 2E       		.uleb128 0x2e
 1880 0145 01       		.byte	0x1
 1881 0146 3F       		.uleb128 0x3f
 1882 0147 19       		.uleb128 0x19
 1883 0148 03       		.uleb128 0x3
 1884 0149 0E       		.uleb128 0xe
 1885 014a 3A       		.uleb128 0x3a
 1886 014b 0B       		.uleb128 0xb
 1887 014c 3B       		.uleb128 0x3b
 1888 014d 05       		.uleb128 0x5
 1889 014e 27       		.uleb128 0x27
 1890 014f 19       		.uleb128 0x19
 1891 0150 49       		.uleb128 0x49
 1892 0151 13       		.uleb128 0x13
 1893 0152 11       		.uleb128 0x11
 1894 0153 01       		.uleb128 0x1
 1895 0154 12       		.uleb128 0x12
 1896 0155 06       		.uleb128 0x6
 1897 0156 40       		.uleb128 0x40
 1898 0157 18       		.uleb128 0x18
 1899 0158 9642     		.uleb128 0x2116
 1900 015a 19       		.uleb128 0x19
 1901 015b 01       		.uleb128 0x1
 1902 015c 13       		.uleb128 0x13
 1903 015d 00       		.byte	0
 1904 015e 00       		.byte	0
 1905 015f 17       		.uleb128 0x17
 1906 0160 01       		.uleb128 0x1
 1907 0161 01       		.byte	0x1
 1908 0162 49       		.uleb128 0x49
 1909 0163 13       		.uleb128 0x13
 1910 0164 01       		.uleb128 0x1
 1911 0165 13       		.uleb128 0x13
 1912 0166 00       		.byte	0
 1913 0167 00       		.byte	0
 1914 0168 18       		.uleb128 0x18
 1915 0169 21       		.uleb128 0x21
 1916 016a 00       		.byte	0
 1917 016b 49       		.uleb128 0x49
 1918 016c 13       		.uleb128 0x13
 1919 016d 2F       		.uleb128 0x2f
 1920 016e 0B       		.uleb128 0xb
 1921 016f 00       		.byte	0
 1922 0170 00       		.byte	0
 1923 0171 19       		.uleb128 0x19
 1924 0172 34       		.uleb128 0x34
 1925 0173 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 51


 1926 0174 03       		.uleb128 0x3
 1927 0175 0E       		.uleb128 0xe
 1928 0176 3A       		.uleb128 0x3a
 1929 0177 0B       		.uleb128 0xb
 1930 0178 3B       		.uleb128 0x3b
 1931 0179 0B       		.uleb128 0xb
 1932 017a 49       		.uleb128 0x49
 1933 017b 13       		.uleb128 0x13
 1934 017c 1C       		.uleb128 0x1c
 1935 017d 0A       		.uleb128 0xa
 1936 017e 00       		.byte	0
 1937 017f 00       		.byte	0
 1938 0180 1A       		.uleb128 0x1a
 1939 0181 26       		.uleb128 0x26
 1940 0182 00       		.byte	0
 1941 0183 49       		.uleb128 0x49
 1942 0184 13       		.uleb128 0x13
 1943 0185 00       		.byte	0
 1944 0186 00       		.byte	0
 1945 0187 1B       		.uleb128 0x1b
 1946 0188 34       		.uleb128 0x34
 1947 0189 00       		.byte	0
 1948 018a 03       		.uleb128 0x3
 1949 018b 0E       		.uleb128 0xe
 1950 018c 3A       		.uleb128 0x3a
 1951 018d 0B       		.uleb128 0xb
 1952 018e 3B       		.uleb128 0x3b
 1953 018f 0B       		.uleb128 0xb
 1954 0190 49       		.uleb128 0x49
 1955 0191 13       		.uleb128 0x13
 1956 0192 3F       		.uleb128 0x3f
 1957 0193 19       		.uleb128 0x19
 1958 0194 02       		.uleb128 0x2
 1959 0195 18       		.uleb128 0x18
 1960 0196 00       		.byte	0
 1961 0197 00       		.byte	0
 1962 0198 1C       		.uleb128 0x1c
 1963 0199 2E       		.uleb128 0x2e
 1964 019a 01       		.byte	0x1
 1965 019b 3F       		.uleb128 0x3f
 1966 019c 19       		.uleb128 0x19
 1967 019d 03       		.uleb128 0x3
 1968 019e 0E       		.uleb128 0xe
 1969 019f 3A       		.uleb128 0x3a
 1970 01a0 0B       		.uleb128 0xb
 1971 01a1 3B       		.uleb128 0x3b
 1972 01a2 0B       		.uleb128 0xb
 1973 01a3 27       		.uleb128 0x27
 1974 01a4 19       		.uleb128 0x19
 1975 01a5 3C       		.uleb128 0x3c
 1976 01a6 19       		.uleb128 0x19
 1977 01a7 01       		.uleb128 0x1
 1978 01a8 13       		.uleb128 0x13
 1979 01a9 00       		.byte	0
 1980 01aa 00       		.byte	0
 1981 01ab 1D       		.uleb128 0x1d
 1982 01ac 05       		.uleb128 0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 52


 1983 01ad 00       		.byte	0
 1984 01ae 49       		.uleb128 0x49
 1985 01af 13       		.uleb128 0x13
 1986 01b0 00       		.byte	0
 1987 01b1 00       		.byte	0
 1988 01b2 1E       		.uleb128 0x1e
 1989 01b3 2E       		.uleb128 0x2e
 1990 01b4 01       		.byte	0x1
 1991 01b5 3F       		.uleb128 0x3f
 1992 01b6 19       		.uleb128 0x19
 1993 01b7 03       		.uleb128 0x3
 1994 01b8 0E       		.uleb128 0xe
 1995 01b9 3A       		.uleb128 0x3a
 1996 01ba 0B       		.uleb128 0xb
 1997 01bb 3B       		.uleb128 0x3b
 1998 01bc 0B       		.uleb128 0xb
 1999 01bd 27       		.uleb128 0x27
 2000 01be 19       		.uleb128 0x19
 2001 01bf 49       		.uleb128 0x49
 2002 01c0 13       		.uleb128 0x13
 2003 01c1 3C       		.uleb128 0x3c
 2004 01c2 19       		.uleb128 0x19
 2005 01c3 01       		.uleb128 0x1
 2006 01c4 13       		.uleb128 0x13
 2007 01c5 00       		.byte	0
 2008 01c6 00       		.byte	0
 2009 01c7 1F       		.uleb128 0x1f
 2010 01c8 2E       		.uleb128 0x2e
 2011 01c9 01       		.byte	0x1
 2012 01ca 3F       		.uleb128 0x3f
 2013 01cb 19       		.uleb128 0x19
 2014 01cc 03       		.uleb128 0x3
 2015 01cd 0E       		.uleb128 0xe
 2016 01ce 3A       		.uleb128 0x3a
 2017 01cf 0B       		.uleb128 0xb
 2018 01d0 3B       		.uleb128 0x3b
 2019 01d1 0B       		.uleb128 0xb
 2020 01d2 27       		.uleb128 0x27
 2021 01d3 19       		.uleb128 0x19
 2022 01d4 3C       		.uleb128 0x3c
 2023 01d5 19       		.uleb128 0x19
 2024 01d6 00       		.byte	0
 2025 01d7 00       		.byte	0
 2026 01d8 00       		.byte	0
 2027              		.section	.debug_loc,"",%progbits
 2028              	.Ldebug_loc0:
 2029              	.LLST0:
 2030 0000 74000000 		.4byte	.LVL5
 2031 0004 86000000 		.4byte	.LVL7
 2032 0008 0200     		.2byte	0x2
 2033 000a 30       		.byte	0x30
 2034 000b 9F       		.byte	0x9f
 2035 000c 86000000 		.4byte	.LVL7
 2036 0010 E8000000 		.4byte	.LFE3
 2037 0014 0200     		.2byte	0x2
 2038 0016 31       		.byte	0x31
 2039 0017 9F       		.byte	0x9f
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 53


 2040 0018 00000000 		.4byte	0
 2041 001c 00000000 		.4byte	0
 2042              	.LLST1:
 2043 0020 6A000000 		.4byte	.LVL2
 2044 0024 6E000000 		.4byte	.LVL3
 2045 0028 0700     		.2byte	0x7
 2046 002a 70       		.byte	0x70
 2047 002b 00       		.sleb128 0
 2048 002c 40       		.byte	0x40
 2049 002d 49       		.byte	0x49
 2050 002e 24       		.byte	0x24
 2051 002f 21       		.byte	0x21
 2052 0030 9F       		.byte	0x9f
 2053 0031 72000000 		.4byte	.LVL4
 2054 0035 74000000 		.4byte	.LVL5
 2055 0039 0100     		.2byte	0x1
 2056 003b 53       		.byte	0x53
 2057 003c 74000000 		.4byte	.LVL5
 2058 0040 E8000000 		.4byte	.LFE3
 2059 0044 0400     		.2byte	0x4
 2060 0046 0A       		.byte	0xa
 2061 0047 0004     		.2byte	0x400
 2062 0049 9F       		.byte	0x9f
 2063 004a 00000000 		.4byte	0
 2064 004e 00000000 		.4byte	0
 2065              	.LLST2:
 2066 0052 00000000 		.4byte	.LVL11
 2067 0056 06000000 		.4byte	.LVL12
 2068 005a 0100     		.2byte	0x1
 2069 005c 50       		.byte	0x50
 2070 005d 06000000 		.4byte	.LVL12
 2071 0061 20000000 		.4byte	.LVL17
 2072 0065 0100     		.2byte	0x1
 2073 0067 54       		.byte	0x54
 2074 0068 20000000 		.4byte	.LVL17
 2075 006c 28000000 		.4byte	.LFE8
 2076 0070 0400     		.2byte	0x4
 2077 0072 F3       		.byte	0xf3
 2078 0073 01       		.uleb128 0x1
 2079 0074 50       		.byte	0x50
 2080 0075 9F       		.byte	0x9f
 2081 0076 00000000 		.4byte	0
 2082 007a 00000000 		.4byte	0
 2083              	.LLST3:
 2084 007e 00000000 		.4byte	.LVL11
 2085 0082 0A000000 		.4byte	.LVL13
 2086 0086 0200     		.2byte	0x2
 2087 0088 30       		.byte	0x30
 2088 0089 9F       		.byte	0x9f
 2089 008a 14000000 		.4byte	.LVL14
 2090 008e 1E000000 		.4byte	.LVL15
 2091 0092 0100     		.2byte	0x1
 2092 0094 50       		.byte	0x50
 2093 0095 1E000000 		.4byte	.LVL15
 2094 0099 20000000 		.4byte	.LVL16
 2095 009d 0200     		.2byte	0x2
 2096 009f 31       		.byte	0x31
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 54


 2097 00a0 9F       		.byte	0x9f
 2098 00a1 00000000 		.4byte	0
 2099 00a5 00000000 		.4byte	0
 2100              	.LLST4:
 2101 00a9 00000000 		.4byte	.LVL18
 2102 00ad 08000000 		.4byte	.LVL19
 2103 00b1 0100     		.2byte	0x1
 2104 00b3 50       		.byte	0x50
 2105 00b4 08000000 		.4byte	.LVL19
 2106 00b8 10000000 		.4byte	.LVL21
 2107 00bc 0400     		.2byte	0x4
 2108 00be F3       		.byte	0xf3
 2109 00bf 01       		.uleb128 0x1
 2110 00c0 50       		.byte	0x50
 2111 00c1 9F       		.byte	0x9f
 2112 00c2 10000000 		.4byte	.LVL21
 2113 00c6 14000000 		.4byte	.LVL22
 2114 00ca 0100     		.2byte	0x1
 2115 00cc 50       		.byte	0x50
 2116 00cd 14000000 		.4byte	.LVL22
 2117 00d1 20000000 		.4byte	.LFE9
 2118 00d5 0400     		.2byte	0x4
 2119 00d7 F3       		.byte	0xf3
 2120 00d8 01       		.uleb128 0x1
 2121 00d9 50       		.byte	0x50
 2122 00da 9F       		.byte	0x9f
 2123 00db 00000000 		.4byte	0
 2124 00df 00000000 		.4byte	0
 2125              	.LLST5:
 2126 00e3 16000000 		.4byte	.LVL23
 2127 00e7 18000000 		.4byte	.LVL24
 2128 00eb 0100     		.2byte	0x1
 2129 00ed 50       		.byte	0x50
 2130 00ee 00000000 		.4byte	0
 2131 00f2 00000000 		.4byte	0
 2132              	.LLST6:
 2133 00f6 00000000 		.4byte	.LVL25
 2134 00fa 04000000 		.4byte	.LVL26
 2135 00fe 0100     		.2byte	0x1
 2136 0100 50       		.byte	0x50
 2137 0101 04000000 		.4byte	.LVL26
 2138 0105 10000000 		.4byte	.LFE10
 2139 0109 0400     		.2byte	0x4
 2140 010b F3       		.byte	0xf3
 2141 010c 01       		.uleb128 0x1
 2142 010d 50       		.byte	0x50
 2143 010e 9F       		.byte	0x9f
 2144 010f 00000000 		.4byte	0
 2145 0113 00000000 		.4byte	0
 2146              	.LLST7:
 2147 0117 00000000 		.4byte	.LVL27
 2148 011b 04000000 		.4byte	.LVL28
 2149 011f 0100     		.2byte	0x1
 2150 0121 50       		.byte	0x50
 2151 0122 04000000 		.4byte	.LVL28
 2152 0126 18000000 		.4byte	.LFE11
 2153 012a 0400     		.2byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 55


 2154 012c F3       		.byte	0xf3
 2155 012d 01       		.uleb128 0x1
 2156 012e 50       		.byte	0x50
 2157 012f 9F       		.byte	0x9f
 2158 0130 00000000 		.4byte	0
 2159 0134 00000000 		.4byte	0
 2160              	.LLST8:
 2161 0138 00000000 		.4byte	.LVL29
 2162 013c 04000000 		.4byte	.LVL30
 2163 0140 0100     		.2byte	0x1
 2164 0142 50       		.byte	0x50
 2165 0143 04000000 		.4byte	.LVL30
 2166 0147 18000000 		.4byte	.LFE12
 2167 014b 0400     		.2byte	0x4
 2168 014d F3       		.byte	0xf3
 2169 014e 01       		.uleb128 0x1
 2170 014f 50       		.byte	0x50
 2171 0150 9F       		.byte	0x9f
 2172 0151 00000000 		.4byte	0
 2173 0155 00000000 		.4byte	0
 2174              	.LLST9:
 2175 0159 00000000 		.4byte	.LVL31
 2176 015d 04000000 		.4byte	.LVL32
 2177 0161 0100     		.2byte	0x1
 2178 0163 50       		.byte	0x50
 2179 0164 04000000 		.4byte	.LVL32
 2180 0168 10000000 		.4byte	.LFE13
 2181 016c 0400     		.2byte	0x4
 2182 016e F3       		.byte	0xf3
 2183 016f 01       		.uleb128 0x1
 2184 0170 50       		.byte	0x50
 2185 0171 9F       		.byte	0x9f
 2186 0172 00000000 		.4byte	0
 2187 0176 00000000 		.4byte	0
 2188              	.LLST10:
 2189 017a 00000000 		.4byte	.LVL33
 2190 017e 04000000 		.4byte	.LVL34
 2191 0182 0100     		.2byte	0x1
 2192 0184 50       		.byte	0x50
 2193 0185 04000000 		.4byte	.LVL34
 2194 0189 10000000 		.4byte	.LFE14
 2195 018d 0400     		.2byte	0x4
 2196 018f F3       		.byte	0xf3
 2197 0190 01       		.uleb128 0x1
 2198 0191 50       		.byte	0x50
 2199 0192 9F       		.byte	0x9f
 2200 0193 00000000 		.4byte	0
 2201 0197 00000000 		.4byte	0
 2202              	.LLST11:
 2203 019b 00000000 		.4byte	.LVL35
 2204 019f 0C000000 		.4byte	.LVL36
 2205 01a3 0100     		.2byte	0x1
 2206 01a5 50       		.byte	0x50
 2207 01a6 0C000000 		.4byte	.LVL36
 2208 01aa 14000000 		.4byte	.LVL38
 2209 01ae 0100     		.2byte	0x1
 2210 01b0 54       		.byte	0x54
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 56


 2211 01b1 14000000 		.4byte	.LVL38
 2212 01b5 1C000000 		.4byte	.LFE15
 2213 01b9 0400     		.2byte	0x4
 2214 01bb F3       		.byte	0xf3
 2215 01bc 01       		.uleb128 0x1
 2216 01bd 50       		.byte	0x50
 2217 01be 9F       		.byte	0x9f
 2218 01bf 00000000 		.4byte	0
 2219 01c3 00000000 		.4byte	0
 2220              	.LLST12:
 2221 01c7 00000000 		.4byte	.LVL35
 2222 01cb 0F000000 		.4byte	.LVL37-1
 2223 01cf 0100     		.2byte	0x1
 2224 01d1 51       		.byte	0x51
 2225 01d2 0F000000 		.4byte	.LVL37-1
 2226 01d6 1C000000 		.4byte	.LFE15
 2227 01da 0400     		.2byte	0x4
 2228 01dc F3       		.byte	0xf3
 2229 01dd 01       		.uleb128 0x1
 2230 01de 51       		.byte	0x51
 2231 01df 9F       		.byte	0x9f
 2232 01e0 00000000 		.4byte	0
 2233 01e4 00000000 		.4byte	0
 2234              	.LLST13:
 2235 01e8 00000000 		.4byte	.LVL39
 2236 01ec 0C000000 		.4byte	.LVL40
 2237 01f0 0100     		.2byte	0x1
 2238 01f2 50       		.byte	0x50
 2239 01f3 0C000000 		.4byte	.LVL40
 2240 01f7 14000000 		.4byte	.LVL42
 2241 01fb 0100     		.2byte	0x1
 2242 01fd 54       		.byte	0x54
 2243 01fe 14000000 		.4byte	.LVL42
 2244 0202 1C000000 		.4byte	.LFE16
 2245 0206 0400     		.2byte	0x4
 2246 0208 F3       		.byte	0xf3
 2247 0209 01       		.uleb128 0x1
 2248 020a 50       		.byte	0x50
 2249 020b 9F       		.byte	0x9f
 2250 020c 00000000 		.4byte	0
 2251 0210 00000000 		.4byte	0
 2252              	.LLST14:
 2253 0214 00000000 		.4byte	.LVL39
 2254 0218 0F000000 		.4byte	.LVL41-1
 2255 021c 0100     		.2byte	0x1
 2256 021e 51       		.byte	0x51
 2257 021f 0F000000 		.4byte	.LVL41-1
 2258 0223 16000000 		.4byte	.LVL43
 2259 0227 0100     		.2byte	0x1
 2260 0229 55       		.byte	0x55
 2261 022a 16000000 		.4byte	.LVL43
 2262 022e 1C000000 		.4byte	.LFE16
 2263 0232 0800     		.2byte	0x8
 2264 0234 F3       		.byte	0xf3
 2265 0235 01       		.uleb128 0x1
 2266 0236 50       		.byte	0x50
 2267 0237 32       		.byte	0x32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 57


 2268 0238 24       		.byte	0x24
 2269 0239 73       		.byte	0x73
 2270 023a 00       		.sleb128 0
 2271 023b 22       		.byte	0x22
 2272 023c 00000000 		.4byte	0
 2273 0240 00000000 		.4byte	0
 2274              	.LLST15:
 2275 0244 00000000 		.4byte	.LVL44
 2276 0248 0C000000 		.4byte	.LVL45
 2277 024c 0100     		.2byte	0x1
 2278 024e 50       		.byte	0x50
 2279 024f 0C000000 		.4byte	.LVL45
 2280 0253 18000000 		.4byte	.LVL47
 2281 0257 0100     		.2byte	0x1
 2282 0259 54       		.byte	0x54
 2283 025a 18000000 		.4byte	.LVL47
 2284 025e 50000000 		.4byte	.LFE17
 2285 0262 0400     		.2byte	0x4
 2286 0264 F3       		.byte	0xf3
 2287 0265 01       		.uleb128 0x1
 2288 0266 50       		.byte	0x50
 2289 0267 9F       		.byte	0x9f
 2290 0268 00000000 		.4byte	0
 2291 026c 00000000 		.4byte	0
 2292              	.LLST16:
 2293 0270 00000000 		.4byte	.LVL44
 2294 0274 0F000000 		.4byte	.LVL46-1
 2295 0278 0100     		.2byte	0x1
 2296 027a 51       		.byte	0x51
 2297 027b 0F000000 		.4byte	.LVL46-1
 2298 027f 22000000 		.4byte	.LVL48
 2299 0283 0400     		.2byte	0x4
 2300 0285 F3       		.byte	0xf3
 2301 0286 01       		.uleb128 0x1
 2302 0287 51       		.byte	0x51
 2303 0288 9F       		.byte	0x9f
 2304 0289 22000000 		.4byte	.LVL48
 2305 028d 38000000 		.4byte	.LVL49
 2306 0291 0100     		.2byte	0x1
 2307 0293 51       		.byte	0x51
 2308 0294 00000000 		.4byte	0
 2309 0298 00000000 		.4byte	0
 2310              	.LLST17:
 2311 029c 38000000 		.4byte	.LVL49
 2312 02a0 3A000000 		.4byte	.LVL50
 2313 02a4 0900     		.2byte	0x9
 2314 02a6 70       		.byte	0x70
 2315 02a7 00       		.sleb128 0
 2316 02a8 73       		.byte	0x73
 2317 02a9 00       		.sleb128 0
 2318 02aa 22       		.byte	0x22
 2319 02ab 71       		.byte	0x71
 2320 02ac 00       		.sleb128 0
 2321 02ad 1B       		.byte	0x1b
 2322 02ae 9F       		.byte	0x9f
 2323 02af 00000000 		.4byte	0
 2324 02b3 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 58


 2325              	.LLST18:
 2326 02b7 00000000 		.4byte	.LVL52
 2327 02bb 0C000000 		.4byte	.LVL53
 2328 02bf 0100     		.2byte	0x1
 2329 02c1 50       		.byte	0x50
 2330 02c2 0C000000 		.4byte	.LVL53
 2331 02c6 1C000000 		.4byte	.LVL56
 2332 02ca 0100     		.2byte	0x1
 2333 02cc 55       		.byte	0x55
 2334 02cd 1C000000 		.4byte	.LVL56
 2335 02d1 40000000 		.4byte	.LFE18
 2336 02d5 0400     		.2byte	0x4
 2337 02d7 F3       		.byte	0xf3
 2338 02d8 01       		.uleb128 0x1
 2339 02d9 50       		.byte	0x50
 2340 02da 9F       		.byte	0x9f
 2341 02db 00000000 		.4byte	0
 2342 02df 00000000 		.4byte	0
 2343              	.LLST19:
 2344 02e3 00000000 		.4byte	.LVL52
 2345 02e7 0F000000 		.4byte	.LVL54-1
 2346 02eb 0100     		.2byte	0x1
 2347 02ed 51       		.byte	0x51
 2348 02ee 0F000000 		.4byte	.LVL54-1
 2349 02f2 1A000000 		.4byte	.LVL55
 2350 02f6 0400     		.2byte	0x4
 2351 02f8 F3       		.byte	0xf3
 2352 02f9 01       		.uleb128 0x1
 2353 02fa 51       		.byte	0x51
 2354 02fb 9F       		.byte	0x9f
 2355 02fc 1A000000 		.4byte	.LVL55
 2356 0300 32000000 		.4byte	.LVL60
 2357 0304 0100     		.2byte	0x1
 2358 0306 54       		.byte	0x54
 2359 0307 00000000 		.4byte	0
 2360 030b 00000000 		.4byte	0
 2361              	.LLST20:
 2362 030f 1E000000 		.4byte	.LVL57
 2363 0313 32000000 		.4byte	.LVL60
 2364 0317 1A00     		.2byte	0x1a
 2365 0319 74       		.byte	0x74
 2366 031a 00       		.sleb128 0
 2367 031b F7       		.byte	0xf7
 2368 031c 41       		.uleb128 0x41
 2369 031d F7       		.byte	0xf7
 2370 031e 25       		.uleb128 0x25
 2371 031f 0C       		.byte	0xc
 2372 0320 80969800 		.4byte	0x989680
 2373 0324 F7       		.byte	0xf7
 2374 0325 25       		.uleb128 0x25
 2375 0326 1E       		.byte	0x1e
 2376 0327 F7       		.byte	0xf7
 2377 0328 33       		.uleb128 0x33
 2378 0329 75       		.byte	0x75
 2379 032a 00       		.sleb128 0
 2380 032b F7       		.byte	0xf7
 2381 032c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 59


 2382 032d F7       		.byte	0xf7
 2383 032e 33       		.uleb128 0x33
 2384 032f 1B       		.byte	0x1b
 2385 0330 F7       		.byte	0xf7
 2386 0331 25       		.uleb128 0x25
 2387 0332 9F       		.byte	0x9f
 2388 0333 00000000 		.4byte	0
 2389 0337 00000000 		.4byte	0
 2390              	.LLST21:
 2391 033b 00000000 		.4byte	.LVL61
 2392 033f 0C000000 		.4byte	.LVL62
 2393 0343 0100     		.2byte	0x1
 2394 0345 50       		.byte	0x50
 2395 0346 0C000000 		.4byte	.LVL62
 2396 034a 1E000000 		.4byte	.LVL65
 2397 034e 0100     		.2byte	0x1
 2398 0350 55       		.byte	0x55
 2399 0351 1E000000 		.4byte	.LVL65
 2400 0355 48000000 		.4byte	.LFE19
 2401 0359 0400     		.2byte	0x4
 2402 035b F3       		.byte	0xf3
 2403 035c 01       		.uleb128 0x1
 2404 035d 50       		.byte	0x50
 2405 035e 9F       		.byte	0x9f
 2406 035f 00000000 		.4byte	0
 2407 0363 00000000 		.4byte	0
 2408              	.LLST22:
 2409 0367 00000000 		.4byte	.LVL61
 2410 036b 0F000000 		.4byte	.LVL63-1
 2411 036f 0100     		.2byte	0x1
 2412 0371 51       		.byte	0x51
 2413 0372 0F000000 		.4byte	.LVL63-1
 2414 0376 1A000000 		.4byte	.LVL64
 2415 037a 0400     		.2byte	0x4
 2416 037c F3       		.byte	0xf3
 2417 037d 01       		.uleb128 0x1
 2418 037e 51       		.byte	0x51
 2419 037f 9F       		.byte	0x9f
 2420 0380 1A000000 		.4byte	.LVL64
 2421 0384 2C000000 		.4byte	.LVL69
 2422 0388 0100     		.2byte	0x1
 2423 038a 54       		.byte	0x54
 2424 038b 00000000 		.4byte	0
 2425 038f 00000000 		.4byte	0
 2426              	.LLST23:
 2427 0393 20000000 		.4byte	.LVL66
 2428 0397 2C000000 		.4byte	.LVL69
 2429 039b 1600     		.2byte	0x16
 2430 039d 74       		.byte	0x74
 2431 039e 00       		.sleb128 0
 2432 039f F7       		.byte	0xf7
 2433 03a0 41       		.uleb128 0x41
 2434 03a1 F7       		.byte	0xf7
 2435 03a2 2C       		.uleb128 0x2c
 2436 03a3 F4       		.byte	0xf4
 2437 03a4 2C       		.uleb128 0x2c
 2438 03a5 04       		.byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 60


 2439 03a6 00002041 		.4byte	0x41200000
 2440 03aa 1E       		.byte	0x1e
 2441 03ab 75       		.byte	0x75
 2442 03ac 00       		.sleb128 0
 2443 03ad F7       		.byte	0xf7
 2444 03ae 3A       		.uleb128 0x3a
 2445 03af F7       		.byte	0xf7
 2446 03b0 2C       		.uleb128 0x2c
 2447 03b1 1B       		.byte	0x1b
 2448 03b2 9F       		.byte	0x9f
 2449 03b3 00000000 		.4byte	0
 2450 03b7 00000000 		.4byte	0
 2451              		.section	.debug_aranges,"",%progbits
 2452 0000 A4000000 		.4byte	0xa4
 2453 0004 0200     		.2byte	0x2
 2454 0006 00000000 		.4byte	.Ldebug_info0
 2455 000a 04       		.byte	0x4
 2456 000b 00       		.byte	0
 2457 000c 0000     		.2byte	0
 2458 000e 0000     		.2byte	0
 2459 0010 00000000 		.4byte	.LFB3
 2460 0014 E8000000 		.4byte	.LFE3-.LFB3
 2461 0018 00000000 		.4byte	.LFB4
 2462 001c 2C000000 		.4byte	.LFE4-.LFB4
 2463 0020 00000000 		.4byte	.LFB2
 2464 0024 1C000000 		.4byte	.LFE2-.LFB2
 2465 0028 00000000 		.4byte	.LFB5
 2466 002c 10000000 		.4byte	.LFE5-.LFB5
 2467 0030 00000000 		.4byte	.LFB6
 2468 0034 0C000000 		.4byte	.LFE6-.LFB6
 2469 0038 00000000 		.4byte	.LFB7
 2470 003c 02000000 		.4byte	.LFE7-.LFB7
 2471 0040 00000000 		.4byte	.LFB8
 2472 0044 28000000 		.4byte	.LFE8-.LFB8
 2473 0048 00000000 		.4byte	.LFB9
 2474 004c 20000000 		.4byte	.LFE9-.LFB9
 2475 0050 00000000 		.4byte	.LFB10
 2476 0054 10000000 		.4byte	.LFE10-.LFB10
 2477 0058 00000000 		.4byte	.LFB11
 2478 005c 18000000 		.4byte	.LFE11-.LFB11
 2479 0060 00000000 		.4byte	.LFB12
 2480 0064 18000000 		.4byte	.LFE12-.LFB12
 2481 0068 00000000 		.4byte	.LFB13
 2482 006c 10000000 		.4byte	.LFE13-.LFB13
 2483 0070 00000000 		.4byte	.LFB14
 2484 0074 10000000 		.4byte	.LFE14-.LFB14
 2485 0078 00000000 		.4byte	.LFB15
 2486 007c 1C000000 		.4byte	.LFE15-.LFB15
 2487 0080 00000000 		.4byte	.LFB16
 2488 0084 1C000000 		.4byte	.LFE16-.LFB16
 2489 0088 00000000 		.4byte	.LFB17
 2490 008c 50000000 		.4byte	.LFE17-.LFB17
 2491 0090 00000000 		.4byte	.LFB18
 2492 0094 40000000 		.4byte	.LFE18-.LFB18
 2493 0098 00000000 		.4byte	.LFB19
 2494 009c 48000000 		.4byte	.LFE19-.LFB19
 2495 00a0 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 61


 2496 00a4 00000000 		.4byte	0
 2497              		.section	.debug_ranges,"",%progbits
 2498              	.Ldebug_ranges0:
 2499 0000 00000000 		.4byte	.LFB3
 2500 0004 E8000000 		.4byte	.LFE3
 2501 0008 00000000 		.4byte	.LFB4
 2502 000c 2C000000 		.4byte	.LFE4
 2503 0010 00000000 		.4byte	.LFB2
 2504 0014 1C000000 		.4byte	.LFE2
 2505 0018 00000000 		.4byte	.LFB5
 2506 001c 10000000 		.4byte	.LFE5
 2507 0020 00000000 		.4byte	.LFB6
 2508 0024 0C000000 		.4byte	.LFE6
 2509 0028 00000000 		.4byte	.LFB7
 2510 002c 02000000 		.4byte	.LFE7
 2511 0030 00000000 		.4byte	.LFB8
 2512 0034 28000000 		.4byte	.LFE8
 2513 0038 00000000 		.4byte	.LFB9
 2514 003c 20000000 		.4byte	.LFE9
 2515 0040 00000000 		.4byte	.LFB10
 2516 0044 10000000 		.4byte	.LFE10
 2517 0048 00000000 		.4byte	.LFB11
 2518 004c 18000000 		.4byte	.LFE11
 2519 0050 00000000 		.4byte	.LFB12
 2520 0054 18000000 		.4byte	.LFE12
 2521 0058 00000000 		.4byte	.LFB13
 2522 005c 10000000 		.4byte	.LFE13
 2523 0060 00000000 		.4byte	.LFB14
 2524 0064 10000000 		.4byte	.LFE14
 2525 0068 00000000 		.4byte	.LFB15
 2526 006c 1C000000 		.4byte	.LFE15
 2527 0070 00000000 		.4byte	.LFB16
 2528 0074 1C000000 		.4byte	.LFE16
 2529 0078 00000000 		.4byte	.LFB17
 2530 007c 50000000 		.4byte	.LFE17
 2531 0080 00000000 		.4byte	.LFB18
 2532 0084 40000000 		.4byte	.LFE18
 2533 0088 00000000 		.4byte	.LFB19
 2534 008c 48000000 		.4byte	.LFE19
 2535 0090 00000000 		.4byte	0
 2536 0094 00000000 		.4byte	0
 2537              		.section	.debug_line,"",%progbits
 2538              	.Ldebug_line0:
 2539 0000 D8020000 		.section	.debug_str,"MS",%progbits,1
 2539      02004D00 
 2539      00000201 
 2539      FB0E0D00 
 2539      01010101 
 2540              	.LASF11:
 2541 0000 75696E74 		.ascii	"uint16\000"
 2541      313600
 2542              	.LASF61:
 2543 0007 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2543      4320342E 
 2543      392E3320 
 2543      32303135 
 2543      30333033 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 62


 2544 003a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2544      20726576 
 2544      6973696F 
 2544      6E203232 
 2544      31323230 
 2545 006d 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2545      66756E63 
 2545      74696F6E 
 2545      2D736563 
 2545      74696F6E 
 2546              	.LASF47:
 2547 0095 61646347 		.ascii	"adcGain\000"
 2547      61696E00 
 2548              	.LASF24:
 2549 009d 636F756E 		.ascii	"counts\000"
 2549      747300
 2550              	.LASF53:
 2551 00a4 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2551      436F756E 
 2551      7473546F 
 2551      5F566F6C 
 2551      747300
 2552              	.LASF25:
 2553 00b7 4144435F 		.ascii	"ADC_Init\000"
 2553      496E6974 
 2553      00
 2554              	.LASF0:
 2555 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2555      206C6F6E 
 2555      6720756E 
 2555      7369676E 
 2555      65642069 
 2556              	.LASF63:
 2557 00d7 433A5C44 		.ascii	"C:\\Dropbox\\Projects\\George Posture Correction Pr"
 2557      726F7062 
 2557      6F785C50 
 2557      726F6A65 
 2557      6374735C 
 2558 0107 6F6A6563 		.ascii	"oject\\BackBone\\BackBone_Bootloadable.cydsn\000"
 2558      745C4261 
 2558      636B426F 
 2558      6E655C42 
 2558      61636B42 
 2559              	.LASF28:
 2560 0132 4144435F 		.ascii	"ADC_StartConvert\000"
 2560      53746172 
 2560      74436F6E 
 2560      76657274 
 2560      00
 2561              	.LASF2:
 2562 0143 6C6F6E67 		.ascii	"long long int\000"
 2562      206C6F6E 
 2562      6720696E 
 2562      7400
 2563              	.LASF4:
 2564 0151 7369676E 		.ascii	"signed char\000"
 2564      65642063 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 63


 2564      68617200 
 2565              	.LASF30:
 2566 015d 73746174 		.ascii	"status\000"
 2566      757300
 2567              	.LASF14:
 2568 0164 696E7433 		.ascii	"int32\000"
 2568      3200
 2569              	.LASF26:
 2570 016a 4144435F 		.ascii	"ADC_Start\000"
 2570      53746172 
 2570      7400
 2571              	.LASF7:
 2572 0174 6C6F6E67 		.ascii	"long int\000"
 2572      20696E74 
 2572      00
 2573              	.LASF51:
 2574 017d 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2574      436F756E 
 2574      7473546F 
 2574      5F75566F 
 2574      6C747300 
 2575              	.LASF58:
 2576 0191 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2576      636F756E 
 2576      74735065 
 2576      72313056 
 2576      6F6C7400 
 2577              	.LASF10:
 2578 01a5 75696E74 		.ascii	"uint8\000"
 2578      3800
 2579              	.LASF60:
 2580 01ab 43794465 		.ascii	"CyDelayUs\000"
 2580      6C617955 
 2580      7300
 2581              	.LASF16:
 2582 01b5 646F7562 		.ascii	"double\000"
 2582      6C6500
 2583              	.LASF12:
 2584 01bc 75696E74 		.ascii	"uint32\000"
 2584      333200
 2585              	.LASF37:
 2586 01c3 6D61736B 		.ascii	"mask\000"
 2586      00
 2587              	.LASF56:
 2588 01c8 4144435F 		.ascii	"ADC_initVar\000"
 2588      696E6974 
 2588      56617200 
 2589              	.LASF33:
 2590 01d4 7265744D 		.ascii	"retMode\000"
 2590      6F646500 
 2591              	.LASF42:
 2592 01dc 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2592      5365744C 
 2592      696D6974 
 2592      4D61736B 
 2592      00
 2593              	.LASF9:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 64


 2594 01ed 756E7369 		.ascii	"unsigned int\000"
 2594      676E6564 
 2594      20696E74 
 2594      00
 2595              	.LASF52:
 2596 01fa 75566F6C 		.ascii	"uVolts\000"
 2596      747300
 2597              	.LASF8:
 2598 0201 6C6F6E67 		.ascii	"long unsigned int\000"
 2598      20756E73 
 2598      69676E65 
 2598      6420696E 
 2598      7400
 2599              	.LASF43:
 2600 0213 4144435F 		.ascii	"ADC_SetSatMask\000"
 2600      53657453 
 2600      61744D61 
 2600      736B00
 2601              	.LASF54:
 2602 0222 766F6C74 		.ascii	"volts\000"
 2602      7300
 2603              	.LASF23:
 2604 0228 746D7052 		.ascii	"tmpRegVal\000"
 2604      65675661 
 2604      6C00
 2605              	.LASF6:
 2606 0232 73686F72 		.ascii	"short unsigned int\000"
 2606      7420756E 
 2606      7369676E 
 2606      65642069 
 2606      6E7400
 2607              	.LASF65:
 2608 0245 4379496E 		.ascii	"CyIntSetVector\000"
 2608      74536574 
 2608      56656374 
 2608      6F7200
 2609              	.LASF29:
 2610 0254 4144435F 		.ascii	"ADC_StopConvert\000"
 2610      53746F70 
 2610      436F6E76 
 2610      65727400 
 2611              	.LASF50:
 2612 0264 6D566F6C 		.ascii	"mVolts\000"
 2612      747300
 2613              	.LASF19:
 2614 026b 72656733 		.ascii	"reg32\000"
 2614      3200
 2615              	.LASF15:
 2616 0271 666C6F61 		.ascii	"float32\000"
 2616      74333200 
 2617              	.LASF21:
 2618 0279 73697A65 		.ascii	"sizetype\000"
 2618      74797065 
 2618      00
 2619              	.LASF39:
 2620 0282 6C6F774C 		.ascii	"lowLimit\000"
 2620      696D6974 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 65


 2620      00
 2621              	.LASF40:
 2622 028b 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2622      53657448 
 2622      6967684C 
 2622      696D6974 
 2622      00
 2623              	.LASF31:
 2624 029c 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2624      4973456E 
 2624      64436F6E 
 2624      76657273 
 2624      696F6E00 
 2625              	.LASF17:
 2626 02b0 696E7436 		.ascii	"int64\000"
 2626      3400
 2627              	.LASF59:
 2628 02b6 4379496E 		.ascii	"CyIntSetPriority\000"
 2628      74536574 
 2628      5072696F 
 2628      72697479 
 2628      00
 2629              	.LASF36:
 2630 02c7 4144435F 		.ascii	"ADC_SetChanMask\000"
 2630      53657443 
 2630      68616E4D 
 2630      61736B00 
 2631              	.LASF46:
 2632 02d7 4144435F 		.ascii	"ADC_SetGain\000"
 2632      53657447 
 2632      61696E00 
 2633              	.LASF1:
 2634 02e3 666C6F61 		.ascii	"float\000"
 2634      7400
 2635              	.LASF41:
 2636 02e9 68696768 		.ascii	"highLimit\000"
 2636      4C696D69 
 2636      7400
 2637              	.LASF48:
 2638 02f3 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2638      436F756E 
 2638      7473546F 
 2638      5F6D566F 
 2638      6C747300 
 2639              	.LASF38:
 2640 0307 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2640      5365744C 
 2640      6F774C69 
 2640      6D697400 
 2641              	.LASF66:
 2642 0317 43794861 		.ascii	"CyHalt\000"
 2642      6C7400
 2643              	.LASF62:
 2644 031e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2644      6E657261 
 2644      7465645F 
 2644      536F7572 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 66


 2644      63655C50 
 2645              	.LASF5:
 2646 033d 756E7369 		.ascii	"unsigned char\000"
 2646      676E6564 
 2646      20636861 
 2646      7200
 2647              	.LASF57:
 2648 034b 4144435F 		.ascii	"ADC_offset\000"
 2648      6F666673 
 2648      657400
 2649              	.LASF3:
 2650 0356 73686F72 		.ascii	"short int\000"
 2650      7420696E 
 2650      7400
 2651              	.LASF27:
 2652 0360 4144435F 		.ascii	"ADC_Stop\000"
 2652      53746F70 
 2652      00
 2653              	.LASF22:
 2654 0369 63684E75 		.ascii	"chNum\000"
 2654      6D00
 2655              	.LASF34:
 2656 036f 6368616E 		.ascii	"chan\000"
 2656      00
 2657              	.LASF18:
 2658 0374 63686172 		.ascii	"char\000"
 2658      00
 2659              	.LASF20:
 2660 0379 63796973 		.ascii	"cyisraddress\000"
 2660      72616464 
 2660      72657373 
 2660      00
 2661              	.LASF55:
 2662 0386 4144435F 		.ascii	"ADC_channelsConfig\000"
 2662      6368616E 
 2662      6E656C73 
 2662      436F6E66 
 2662      696700
 2663              	.LASF45:
 2664 0399 6F666673 		.ascii	"offset\000"
 2664      657400
 2665              	.LASF49:
 2666 03a0 61646343 		.ascii	"adcCounts\000"
 2666      6F756E74 
 2666      7300
 2667              	.LASF64:
 2668 03aa 4144435F 		.ascii	"ADC_Enable\000"
 2668      456E6162 
 2668      6C6500
 2669              	.LASF13:
 2670 03b5 696E7431 		.ascii	"int16\000"
 2670      3600
 2671              	.LASF44:
 2672 03bb 4144435F 		.ascii	"ADC_SetOffset\000"
 2672      5365744F 
 2672      66667365 
 2672      7400
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccsDcu65.s 			page 67


 2673              	.LASF35:
 2674 03c9 72657375 		.ascii	"result\000"
 2674      6C7400
 2675              	.LASF32:
 2676 03d0 4144435F 		.ascii	"ADC_GetResult16\000"
 2676      47657452 
 2676      6573756C 
 2676      74313600 
 2677              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
